<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Syean</title>
  
  <subtitle>记录，分享，回忆</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wsyks.github.io/"/>
  <updated>2024-01-25T13:22:32.991Z</updated>
  <id>http://wsyks.github.io/</id>
  
  <author>
    <name>syean</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《认知觉醒》阅读小记</title>
    <link href="http://wsyks.github.io/2024/01/25/%E3%80%8A%E8%AE%A4%E7%9F%A5%E8%A7%89%E9%86%92%E3%80%8B%E9%98%85%E8%AF%BB%E5%B0%8F%E8%AE%B0/"/>
    <id>http://wsyks.github.io/2024/01/25/《认知觉醒》阅读小记/</id>
    <published>2024-01-25T12:47:33.000Z</published>
    <updated>2024-01-25T13:22:32.991Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇博客文章竟然已经是四年前的事情了，最近看《认知觉醒》这本书，阅过留痕，输出点什么才能真正给自己留下一些东西。</p><p>一开始在微信读书榜单上看到这本书总觉得是什么鸡汤畅销文，直接略过，后面一度被其高评分所吸引，阅读之后，书里很多方法也是整合了当前比较“经典”书籍一些实践方法，例如《微习惯》、《刻意练习》、《心流》等等，恰巧这些书都曾看过，相当于又巩固了一下这些书里面的一些观点。</p><p>给我印象比较深的一个观点是对于“认知”和“知识”二者的不同，作者也是引用了他人的一段话，大意是“考试考高分并不叫有知识，能够侃侃而谈高谈阔论也不叫有知识，只有当局势不明朗时，没有人告诉你应该怎么办，而错误的选择会带来一些不好的后果时，如果能因为有知识帮助你做出一个正确的决策，才是真正的有知识&quot;。</p><p>作者提到阅读的本质是为了“改变”，恰好最近一段时间也在思索阅读的目的，有时候可能会看很多小说、名著，看完之后好像什么也没有留下，会让我感到一些迷茫，而纯看一些理财、社科类的是否又觉得带有一丝功利。之前读微习惯、刻意练习之类的书，但是行动起来却寥寥无几。真正的成长不在于懂得了多少道理，而是改变了多少，行动才是王道。所谓“懂得了很多道理，却过不好这一生”就是缺乏行动。不过“要行动”这个“道理”大家肯定早早就明白了。需要长想“这个道理还能用在什么地方”？</p><p>书中提到的另一个观点就是每次读书只取最打动自己的点，然后去实践、去改变，这样读书不仅收获更大，而且不会焦虑，不必罗列全书的思维导图、框架等等。</p><p>此外，还有一个观点也深深打动了我。大意是说要想让自己变得更加平和，首先要认识到世界的多维性，并深刻印在脑子里。“比如有些人成年后和自己的父母越来越疏远，因为看不惯老一辈人的言论、习惯，接受不了他们对自 己的关爱(干涉);很多儿媳跟婆婆不和睦，在带孩子的问题上矛盾不断;很多亲密的夫妻或情侣， 也常常因为对同一件事存在分歧而相互怄气。如果我们知道出现这种情况仅仅是因为他们的“相机”和 自己的不同，就很容易明白他们其实并非存心与我们作对，甚至他们已经尽了自己最大的努力。” 我们应该有“向下兼容”的意识，要么“一笑而过”，要么耐心和他们讲解什么是好的，也许通过讲解和引导，他们能够理解自己。但如果理解不了，我们更应该体会和包容对方！ 反思自己，有时候因为接触了更多的信息或者阅读了几本书，再和亲人、爱人、朋友争论的时候就觉得自己是对的，因为书里的观点是这样，且不说书里的观点一定正确，也可能你运用观点就错了，再克能⻆度是多元的，多理解别人的⻆度。</p><p>书里很多不错的观点，只写这些让我印象最深的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上一篇博客文章竟然已经是四年前的事情了，最近看《认知觉醒》这本书，阅过留痕，输出点什么才能真正给自己留下一些东西。&lt;/p&gt;
&lt;p&gt;一开始在微信读书榜单上看到这本书总觉得是什么鸡汤畅销文，直接略过，后面一度被其高评分所吸引，阅读之后，书里很多方法也是整合了当前比较“经典”书籍
      
    
    </summary>
    
    
      <category term="阅读笔记" scheme="http://wsyks.github.io/tags/%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Less自用笔记</title>
    <link href="http://wsyks.github.io/2019/09/26/Less%E8%87%AA%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://wsyks.github.io/2019/09/26/Less自用笔记/</id>
    <published>2019-09-26T14:13:02.000Z</published>
    <updated>2019-09-26T14:28:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="sass和less的区别">SASS和LESS的区别</span></h1><h2><span id="同">同</span></h2><p>两者都是CSS预处理器，具有(如变量、嵌套、运算,函数等)等功能</p><h2><span id="异">异</span></h2><p>1、编译环境不一样<br>Sass的安装需要Ruby环境，是在服务端处理的，而Less是需要引入less.js来处理Less代码输出css到浏览器，也可以在开发环节使用Less，然后编译成css文件，直接放到项目中，也有 Less.app、SimpleLess、CodeKit.app这样的工具，也有在线编译地址。</p><p>2、变量符不一样<br>Less是@，而Scss是$</p><p>3、输出设置<br>less没有输出设置，Sass有四种输出设置，分别是:nested,:expanded,:compacted,:expressed</p><p>4、Sass支持条件语句</p><h1><span id="变量">变量</span></h1><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@color:</span> <span class="number">#999</span>;</span><br><span class="line"><span class="variable">@bgColor:</span> skyblue;<span class="comment">//不要添加引号</span></span><br><span class="line"><span class="variable">@width:</span> <span class="number">50%</span>;</span><br><span class="line"><span class="selector-id">#wrap</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="variable">@color</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="variable">@bgColor</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@width</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-id">#wrap</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#999</span>;</span><br><span class="line">  <span class="attribute">background</span>: skyblue;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="变量差值">变量差值</span></h2><p>比如选择器名称，属性名，URLs以及@import语句中。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@mySelector:</span> banner;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用法</span></span><br><span class="line"><span class="selector-class">.@&#123;mySelector&#125;</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line">编译为：</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.banner</span> &#123;</span><br><span class="line">  <span class="attribute">font-weight</span>: bold;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">URLs</span><br><span class="line"><span class="comment">// Variables</span></span><br><span class="line"><span class="keyword">@images</span>: <span class="string">"../img"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Usage</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#444</span>;</span><br><span class="line">  <span class="attribute">background</span>: url(<span class="string">"@&#123;images&#125;/white-sand.png"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="变量名">变量名</span></h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@fnord:</span>  <span class="string">"I am fnord."</span>;</span><br><span class="line"><span class="variable">@var:</span>    <span class="string">"fnord"</span>;</span><br><span class="line"><span class="attribute">content</span>: <span class="variable">@@var</span>;</span><br><span class="line">将会编译为：</span><br><span class="line"></span><br><span class="line"><span class="attribute">content</span>: <span class="string">"I am fnord."</span>;</span><br></pre></td></tr></table></figure><h2><span id="声明变量">声明变量</span></h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@background:</span> &#123;<span class="attribute">background</span>:red;&#125;;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="variable">@background</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">@Rules:</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> red;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="selector-id">#con</span>&#123;</span><br><span class="line">  <span class="variable">@Rules</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#con</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">border</span>: solid <span class="number">1px</span> red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="变量运算">变量运算</span></h2><p>加减法时 以第一个数据的单位为基准<br>乘除法时 单位注意要统一</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="variable">@width:</span><span class="number">300px</span>;</span><br><span class="line"><span class="variable">@color:</span><span class="number">#222</span>;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="variable">@width-20</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="variable">@width-20</span>*<span class="number">5</span>;</span><br><span class="line">  <span class="attribute">margin</span>:(<span class="variable">@width-20</span>)*<span class="number">5</span>;</span><br><span class="line">  <span class="attribute">color</span>:<span class="variable">@color</span>*<span class="number">2</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="variable">@color</span> + <span class="number">#111</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">280px</span>;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">margin</span>:<span class="number">1400px</span>;</span><br><span class="line">  <span class="attribute">color</span>:<span class="number">#444</span>;</span><br><span class="line">  <span class="attribute">background-color</span>:<span class="number">#333</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1><span id="嵌套">嵌套</span></h1><h2><span id="amp">&amp;</span></h2><p>&amp; 代表上一层选择器的名字</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#header</span>&#123;</span><br><span class="line">  &amp;<span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">"Less is more!"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.title</span>&#123;</span><br><span class="line">    <span class="attribute">font-weight</span>:bold;</span><br><span class="line">  &#125;</span><br><span class="line">  &amp;_content&#123;<span class="comment">//理解方式：直接把 &amp; 替换成 #header</span></span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">20px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#header</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>:<span class="string">"Less is more!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#header</span> <span class="selector-class">.title</span>&#123; <span class="comment">//嵌套了</span></span><br><span class="line">  <span class="attribute">font-weight</span>:bold;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#header_content</span>&#123;<span class="comment">//没有嵌套！</span></span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="媒体查询">媒体查询</span></h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">500px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span><span class="number">768px</span>)&#123;</span><br><span class="line">  <span class="selector-id">#wrap</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="comment">//something...</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">@media</span> screen&#123;</span><br><span class="line">        <span class="keyword">@media</span> (max-width:<span class="number">768px</span>)&#123;</span><br><span class="line">          <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">@media</span> tv &#123;</span><br><span class="line">      <span class="attribute">width</span>:<span class="number">2000px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (maxwidth:<span class="number">768px</span>)&#123;</span><br><span class="line">  <span class="selector-id">#main</span>&#123;</span><br><span class="line">      <span class="attribute">width</span>:<span class="number">100px</span>; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span> tv&#123;</span><br><span class="line">  <span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">2000px</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1><span id="混合">混合</span></h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">.card</span> <span class="string">&#123;</span> <span class="string">//</span> <span class="string">等价于</span> <span class="string">.card()</span></span><br><span class="line">    <span class="attr">background:</span> <span class="comment">#f6f6f6;</span></span><br><span class="line">    <span class="string">-webkit-box-shadow:</span> <span class="number">0</span> <span class="string">1px</span> <span class="string">2px</span> <span class="string">rgba(151,</span> <span class="number">151</span><span class="string">,</span> <span class="number">151</span><span class="string">,</span> <span class="number">.58</span><span class="string">);</span></span><br><span class="line">    <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="string">1px</span> <span class="string">2px</span> <span class="string">rgba(151,</span> <span class="number">151</span><span class="string">,</span> <span class="number">151</span><span class="string">,</span> <span class="number">.58</span><span class="string">);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="comment">#wrap&#123;</span></span><br><span class="line">  <span class="string">.card;//等价于.card();</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">/*</span> <span class="string">生成的</span> <span class="string">CSS</span> <span class="string">*/</span></span><br><span class="line"><span class="comment">#wrap&#123;</span></span><br><span class="line">  <span class="attr">background:</span> <span class="comment">#f6f6f6;</span></span><br><span class="line">  <span class="string">-webkit-box-shadow:</span> <span class="number">0</span> <span class="string">1px</span> <span class="string">2px</span> <span class="string">rgba(151,</span> <span class="number">151</span><span class="string">,</span> <span class="number">151</span><span class="string">,</span> <span class="number">.58</span><span class="string">);</span></span><br><span class="line">  <span class="attr">box-shadow:</span> <span class="number">0</span> <span class="string">1px</span> <span class="string">2px</span> <span class="string">rgba(151,</span> <span class="number">151</span><span class="string">,</span> <span class="number">151</span><span class="string">,</span> <span class="number">.58</span><span class="string">);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>其中 .card 与 .card() 是等价的。 个人建议，为了避免 代码混淆，应写成card()</p><p>注意：<br>. 与 # 皆可作为 方法前缀<br>方法后写不写 () 看个人习惯</p><h2><span id="默认参数">默认参数</span></h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border</span>(<span class="variable">@a</span>:<span class="number">10px</span>,<span class="variable">@b</span>:<span class="number">50px</span>,<span class="variable">@c</span>:<span class="number">30px</span>,<span class="variable">@color</span>:<span class="number">#000</span>)&#123;</span><br><span class="line">    <span class="attribute">border</span>:solid <span class="number">1px</span> <span class="variable">@color</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="variable">@arguments</span>;<span class="comment">//指代的是 全部参数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-class">.border</span>(<span class="number">0px</span>,<span class="number">5px</span>,<span class="number">30px</span>,red);<span class="comment">//必须带着单位</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">    <span class="selector-class">.border</span>(<span class="number">0px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#content</span>&#123;</span><br><span class="line">  <span class="selector-class">.border</span>;<span class="comment">//等价于 .border()</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>:solid <span class="number">1px</span> red;</span><br><span class="line">    <span class="attribute">box-shadow</span>:<span class="number">0px</span>,<span class="number">5px</span>,<span class="number">30px</span>,red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="方法的匹配模式">方法的匹配模式</span></h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.triangle</span>(top,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#000</span>)&#123;</span><br><span class="line">    <span class="attribute">border-color</span>:transparent  transparent <span class="variable">@color</span> transparent ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.triangle</span>(right,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#000</span>)&#123;</span><br><span class="line">    <span class="attribute">border-color</span>:transparent <span class="variable">@color</span> transparent  transparent ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.triangle</span>(bottom,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#000</span>)&#123;</span><br><span class="line">    <span class="attribute">border-color</span>:<span class="variable">@color</span> transparent  transparent  transparent ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.triangle</span>(left,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#000</span>)&#123;</span><br><span class="line">    <span class="attribute">border-color</span>:transparent  transparent  transparent <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.triangle</span>(<span class="variable">@_</span>,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#000</span>)&#123;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="variable">@width</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-class">.triangle</span>(left, <span class="number">50px</span>, <span class="number">#999</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">border-color</span>:transparent  transparent  transparent <span class="number">#999</span>;</span><br><span class="line">  <span class="attribute">border-style</span>: solid;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="方法的命名空间">方法的命名空间</span></h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#card</span>()&#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#723232</span>;</span><br><span class="line">    <span class="selector-class">.d</span>(<span class="variable">@w</span>:<span class="number">300px</span>)&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="variable">@w</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="selector-id">#a</span>(<span class="variable">@h</span>:<span class="number">300px</span>)&#123;</span><br><span class="line">            <span class="attribute">height</span>: <span class="variable">@h</span>;<span class="comment">//可以使用上一层传进来的方法</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">    <span class="selector-id">#card</span> &gt; <span class="selector-class">.d</span> &gt; <span class="selector-id">#a</span>(<span class="number">100px</span>); <span class="comment">// 父元素不能加 括号</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-id">#card</span> <span class="selector-class">.d</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#con</span>&#123;</span><br><span class="line">    <span class="comment">//不得单独使用命名空间的方法</span></span><br><span class="line">    <span class="comment">//.d() 如果前面没有引入命名空间 #card ，将会报错</span></span><br><span class="line">    </span><br><span class="line">    <span class="selector-id">#card</span> <span class="selector-class">.d</span>(<span class="number">20px</span>); <span class="comment">//必须先引入 #card</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#con</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="when">when</span></h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-id">#card</span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// and 运算符 ，相当于 与运算 &amp;&amp;，必须条件全部符合才会执行</span></span><br><span class="line">    <span class="selector-class">.border</span>(<span class="variable">@width</span>,<span class="variable">@color</span>,<span class="variable">@style</span>) <span class="keyword">when</span> (<span class="variable">@width</span>&gt;<span class="number">100px</span>) <span class="keyword">and</span>(<span class="variable">@color</span>=<span class="number">#999</span>)&#123;</span><br><span class="line">        <span class="attribute">border</span>:<span class="variable">@style</span> <span class="variable">@color</span> <span class="variable">@width</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// not 运算符，相当于 非运算 !，条件为 不符合才会执行</span></span><br><span class="line">    <span class="selector-class">.background</span>(<span class="variable">@color</span>) <span class="keyword">when</span> <span class="keyword">not</span> (<span class="variable">@color</span>&gt;=<span class="number">#222</span>)&#123;</span><br><span class="line">        <span class="attribute">background</span>:<span class="variable">@color</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// , 逗号分隔符：相当于 或运算 ||，只要有一个符合条件就会执行</span></span><br><span class="line">    <span class="selector-class">.font</span>(<span class="variable">@size</span>:<span class="number">20px</span>) <span class="keyword">when</span> (<span class="variable">@size</span>&gt;<span class="number">50px</span>) , (<span class="variable">@size</span>&lt;<span class="number">100px</span>)&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="variable">@size</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-id">#card</span>&gt;<span class="selector-class">.border</span>(<span class="number">200px</span>,<span class="number">#999</span>,solid);</span><br><span class="line">    <span class="selector-id">#card</span> <span class="selector-class">.background</span>(<span class="number">#111</span>);</span><br><span class="line">    <span class="selector-id">#card</span> &gt; <span class="selector-class">.font</span>(<span class="number">40px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>:solid <span class="number">#999</span> <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background</span>:<span class="number">#111</span>;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>比较运算有： &gt; &gt;= = =&lt; &lt;<br>= 代表的是等于<br>除去关键字 true 以外的值都被视为 false</p><h2><span id="不定参数">不定参数 …</span></h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.boxShadow</span>(...)&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="variable">@arguments</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.textShadow</span>(<span class="variable">@a</span>,...)&#123;</span><br><span class="line">    <span class="attribute">text-shadow</span>: <span class="variable">@arguments</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-class">.boxShadow</span>(<span class="number">1px</span>,<span class="number">4px</span>,<span class="number">30px</span>,red);</span><br><span class="line">    <span class="selector-class">.textShadow</span>(<span class="number">1px</span>,<span class="number">4px</span>,<span class="number">30px</span>,red);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">4px</span> <span class="number">30px</span> red;</span><br><span class="line">  <span class="attribute">text-shadow</span>: <span class="number">1px</span> <span class="number">4px</span> <span class="number">30px</span> red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@arguments就代表全部的参数</p><h2><span id="important">!important</span></h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.border</span>&#123;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> red;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-class">.border</span>() !important;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: solid <span class="number">1px</span> red <span class="meta">!important</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="循环">循环</span></h2><p>Less 并没有提供 for 循环功能，但可以使用递归去实现。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.generate-columns</span>(<span class="number">4</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.generate-columns</span>(<span class="variable">@n</span>, <span class="variable">@i</span>: <span class="number">1</span>) <span class="keyword">when</span> (<span class="variable">@i</span> =&lt; <span class="variable">@n</span>) &#123;</span><br><span class="line">  <span class="selector-class">.column-</span><span class="variable">@&#123;i&#125;</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: (<span class="variable">@i</span> * <span class="number">100%</span> / <span class="variable">@n</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.generate-columns</span>(<span class="variable">@n</span>, (<span class="variable">@i</span> + <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-class">.column-1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">25%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.column-2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.column-3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">75%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.column-4</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="属性拼接">属性拼接</span></h2><p>+_ 代表的是 空格；+ 代表的是 逗号</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line">.<span class="keyword">boxShadow() </span>&#123;</span><br><span class="line">    <span class="keyword">box-shadow+: </span><span class="keyword">inset </span><span class="number">0</span> <span class="number">0</span> <span class="number">10</span>px <span class="comment">#555;</span></span><br><span class="line">&#125;</span><br><span class="line">.main &#123;</span><br><span class="line">  .<span class="keyword">boxShadow();</span></span><br><span class="line"><span class="keyword"> </span> <span class="keyword">box-shadow+: </span><span class="number">0</span> <span class="number">0</span> <span class="number">20</span>px <span class="keyword">black;</span></span><br><span class="line"><span class="keyword">&#125;</span></span><br><span class="line">/* 生成后的 CSS */</span><br><span class="line">.main &#123;</span><br><span class="line">  <span class="keyword">box-shadow: </span><span class="keyword">inset </span><span class="number">0</span> <span class="number">0</span> <span class="number">10</span>px <span class="comment">#555, 0 0 20px black;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line">.Animation() &#123;</span><br><span class="line">  <span class="built_in">transform</span>+<span class="symbol">_</span>: <span class="built_in">scale</span>(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">.main &#123;</span><br><span class="line">  .Animation();</span><br><span class="line">  <span class="built_in">transform</span>+<span class="symbol">_</span>: rotate(15deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line">.main &#123;</span><br><span class="line">  <span class="built_in">transform</span>: <span class="built_in">scale</span>(<span class="number">2</span>) rotate(15deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="使用实例">使用实例</span></h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-class">.average</span>(<span class="variable">@x</span>, <span class="variable">@y</span>) &#123;</span><br><span class="line">  <span class="variable">@average:</span> ((<span class="variable">@x</span> + <span class="variable">@y</span>) / <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="selector-class">.average</span>(<span class="number">16px</span>, <span class="number">50px</span>); <span class="comment">// 调用 方法</span></span><br><span class="line">  <span class="attribute">padding</span>: <span class="variable">@average</span>;    <span class="comment">// 使用返回值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">33px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1><span id="继承">继承</span></h1><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">.animation</span>&#123;</span><br><span class="line">    transition: all <span class="string">.3s</span> ease-out;</span><br><span class="line">    <span class="string">.hide</span>&#123;</span><br><span class="line">      transform<span class="function">:scale</span><span class="params">(0)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#main&#123;</span></span><br><span class="line">    &amp;<span class="function">:extend</span><span class="params">(.animation)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#con&#123;</span></span><br><span class="line">    &amp;<span class="function">:extend</span><span class="params">(.animation .hide)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 生成后的 CSS */</span><br><span class="line"><span class="string">.animation</span>,<span class="comment">#main&#123;</span></span><br><span class="line">  transition: all <span class="string">.3s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">.animation</span> <span class="string">.hide</span> , <span class="comment">#con&#123;</span></span><br><span class="line">    transform<span class="function">:scale</span><span class="params">(0)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="all-全局搜索替换">all 全局搜索替换</span></h2><p>all 全局搜索替换</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">"Less is good!"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span><span class="selector-pseudo">:extend(</span><span class="selector-id">#main</span> <span class="keyword">all</span>) &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>,<span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span><span class="selector-pseudo">:after</span>, <span class="selector-id">#wrap</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">"Less is good!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以有多个扩展: pre:hover:extend(div pre):extend(.bucket tr)<br>注意这与 pre:hover:extend(div pre, .bucket tr)</p><h1><span id="import">import</span></h1><h2><span id="reference">reference</span></h2><p>使用@import (reference)导入外部文件，但不会添加 把导入的文件 编译到最终输出中，只引用</p><h2><span id="once">once</span></h2><p>表明相同的文件只会被导入一次，而随后的导入文件的重复代码都不会解析</p><h1><span id="函数">函数</span></h1><h2><span id="判断类型">判断类型</span></h2><ul><li>isnumber</li><li>iscolor</li><li>isurl</li></ul><h2><span id="颜色操作">颜色操作</span></h2><ul><li>saturate</li><li>lighten</li><li>darken</li><li>fade</li><li>mix</li></ul><h2><span id="数字函数">数字函数</span></h2><ul><li>ceil</li><li>floor</li><li>percentage</li><li>round</li><li>sqrt</li><li>abs</li><li>pow</li></ul><h1><span id="其他">其他</span></h1><h2><span id="注释">注释</span></h2><p>/* */ CSS原生注释，会被编译在 CSS 文件中。<br>/   / Less提供的一种注释，不会被编译在 CSS 文件中。</p><h2><span id="避免编译">避免编译</span></h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:~<span class="string">'calc(300px-30px)'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="built_in">calc</span>(<span class="number">300px</span>-<span class="number">30px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构： ~’ 值 ’</p><h2><span id="变量拼接">变量拼接</span></h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.circle</span><span class="selector-pseudo">:nth-child(</span><span class="variable">@&#123;i&#125;</span>)&#123;</span><br><span class="line">      <span class="selector-class">.judeg</span>(<span class="variable">@i</span>);</span><br><span class="line">      <span class="attribute">border-radius</span>:<span class="variable">@size</span> <span class="variable">@size</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">      <span class="attribute">animation</span>: <span class="string">~"circle-@&#123;i&#125;"</span> <span class="variable">@duration</span> infinite <span class="variable">@ease</span>;</span><br><span class="line">      <span class="attribute">transition-delay</span>:<span class="string">~"@&#123;i&#125;ms"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">@keyframes</span> <span class="string">~"circle-@&#123;i&#125;"</span> &#123;</span><br><span class="line">      <span class="comment">// do something...</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-class">.loopAnimation</span>(<span class="variable">@i</span> + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结构：~“字符@{变量}字符”;</p><h2><span id="使用js">使用js</span></h2><p>因为 Less 是由 JS 编写，所以 Less 有一得天独厚的特性：代码中使用 Javascript 。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Less */</span></span><br><span class="line"><span class="variable">@content:</span><span class="built_in">`"aaa".toUpperCase()`</span>;</span><br><span class="line"><span class="selector-id">#randomColor</span>&#123;</span><br><span class="line">  <span class="variable">@randomColor:</span> <span class="string">~"rgb(`Math.round(Math.random() * 256)`,`Math.round(Math.random() * 256)`,`Math.round(Math.random() * 256)`)"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="string">~"`Math.round(Math.random() * 100)`px"</span>;</span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:after</span>&#123;</span><br><span class="line">      <span class="attribute">content</span>:<span class="variable">@content</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="attribute">height</span>: <span class="string">~"`window.innerHeight`px"</span>;</span><br><span class="line">  <span class="attribute">alert</span>:<span class="string">~"`alert(1)`"</span>;</span><br><span class="line">  <span class="selector-id">#randomColor</span>();</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">@randomColor</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 生成后的 CSS */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 弹出 1</span></span><br><span class="line"><span class="selector-id">#wrap</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>: 随机值（<span class="number">0</span>~<span class="number">100</span>）px;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">743px</span>;<span class="comment">//由电脑而异</span></span><br><span class="line">  <span class="attribute">background</span>: 随机颜色;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#wrap</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>:<span class="string">"AAA"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其他更多<br><a href="https://www.html.cn/doc/less/features/#features-overview-feature" target="_blank" rel="noopener">https://www.html.cn/doc/less/features/#features-overview-feature</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;sass和less的区别&quot;&gt;SASS和LESS的区别&lt;/span&gt;&lt;/h1&gt;
&lt;h2&gt;&lt;span id=&quot;同&quot;&gt;同&lt;/span&gt;&lt;/h2&gt;
&lt;p&gt;两者都是CSS预处理器，具有(如变量、嵌套、运算,函数等)等功能&lt;/p&gt;
&lt;h2&gt;&lt;span id=&quot;异&quot;
      
    
    </summary>
    
    
      <category term="css" scheme="http://wsyks.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序上传照片后旋转问题解决</title>
    <link href="http://wsyks.github.io/2019/09/11/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%8A%E4%BC%A0%E7%85%A7%E7%89%87%E5%90%8E%E6%97%8B%E8%BD%AC%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://wsyks.github.io/2019/09/11/微信小程序上传照片后旋转问题解决/</id>
    <published>2019-09-11T11:43:12.000Z</published>
    <updated>2019-09-11T12:52:30.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="前言">前言</span></h1><p>又是好久好久好久没更新了，太懒了</p><p>这次记录一下在做mini项目中遇到的一个问题，当时没时间解决，mini结束后还是打算看看这个问题。</p><h1><span id="问题说明">问题说明</span></h1><p>当时是这样的，微信小程序在上传照片后，会有一定概率旋转，查阅了资料之后，发现是和图片中携带的exif信息中的orientation这个参数有关。</p><p>这里有一个关于EXIF 和 Orientation 相关的传送门：<br><a href="https://zhuanlan.zhihu.com/p/25216999" target="_blank" rel="noopener">使用 JavaScript 读取 JPEG 文件 EXIF 信息中的 Orientation 值</a></p><p>当时是让想让后端进行解析并旋转的，不过后端说有时候能拿到这个信息，有时候拿不到，这个是可能小程序在上传时设置是否压缩有关，如果压缩了，会将exif信息给删除。</p><p>后面由于图片上传到服务器前也需要预览，所以在后端进行旋转是不合适的。</p><p>前端旋转的话看了一下，小程序中通过<strong>getImageInfo</strong>这个接口中可以获得<strong>orientation</strong> 的信息，喜大普奔，那我们只要知道旋转的角度，再旋转回来即可。</p><h1><span id="解决方案">解决方案</span></h1><h2><span id="小程序-orientation-参数">小程序 orientation 参数</span></h2><p>小程序 orientation 参数情况如下所示：</p><img src="/2019/09/11/微信小程序上传照片后旋转问题解决/1.png"><h2><span id="小程序图片旋转关键代码">小程序图片旋转关键代码</span></h2><p>图片的旋转处理这里用到了canvas</p><p>在wxml文件中添加canvas元素，这里id我就设置的为canvas</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">canvas-id</span>=<span class="string">"canvas"</span> <span class="attr">style</span>=<span class="string">"width:</span></span></span><span class="template-variable">&#123;&#123;imageWidth&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">px;height:</span></span></span><span class="template-variable">&#123;&#123;imageHeight&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">px;position:absolute;top:200%"</span> &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>这里具体讲一下旋转180度的情况</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">wx.getImageInfo(&#123;</span><br><span class="line">  src: tempFilePaths[<span class="number">0</span>],</span><br><span class="line">  success:(res)=&gt;&#123;</span><br><span class="line">    <span class="comment">//获得exif中的orientation信息   </span></span><br><span class="line">    <span class="keyword">if</span>(res.orientation==<span class="string">"up"</span>)&#123;</span><br><span class="line">      <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">        chosenImage: tempFilePaths[<span class="number">0</span>],</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      let canvasContext = wx.createCanvasContext(<span class="string">'canvas'</span>)</span><br><span class="line">      <span class="keyword">switch</span> (res.orientation) &#123;</span><br><span class="line">        <span class="keyword">case</span> (<span class="string">"down"</span>):</span><br><span class="line">          var <span class="built_in">width</span> = res.<span class="built_in">width</span>;</span><br><span class="line">          var <span class="built_in">height</span> = res.<span class="built_in">height</span></span><br><span class="line">          <span class="comment">//需要旋转180度</span></span><br><span class="line">          <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">            imageWidth: <span class="built_in">width</span>,</span><br><span class="line">            imageHeight: <span class="built_in">height</span>,</span><br><span class="line">          &#125;)</span><br><span class="line">          canvasContext.<span class="built_in">translate</span>(<span class="built_in">width</span> / <span class="number">2</span>, <span class="built_in">height</span> / <span class="number">2</span>)</span><br><span class="line">          canvasContext.<span class="built_in">rotate</span>(<span class="number">180</span> * Math.<span class="literal">PI</span> / <span class="number">180</span>)</span><br><span class="line">          canvasContext.drawImage(tempFilePaths[<span class="number">0</span>], -<span class="built_in">width</span> / <span class="number">2</span>, -<span class="built_in">height</span> / <span class="number">2</span>, <span class="built_in">width</span>, <span class="built_in">height</span>);</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      canvasContext.<span class="title">draw</span>()</span><br><span class="line">      <span class="keyword">this</span>.drawImage()</span><br><span class="line">    &#125;      </span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>三步走：</p><p>1、这里通过<strong>translate</strong>将原点设置为图像中心<br>2、通过<strong>rotate</strong>进行旋转相应的角度，这里rotate是以刚刚设置的原点为中心进行旋转的<br>3、通过<strong>drawImage</strong>绘制图片</p><p>这样图片就旋转好了吗？<br>当然还没有，这只是在canvas上完成了旋转，需要将canvas生成图片</p><p>【注】由于canvas的绘制（<strong>draw()</strong>）需要一定的时间，所以这里设置了一个定时器，这里设置了2秒，如果没有这个定时器，可能会发生图片并没有绘制结束就转为图片的情况，那图片可能就是空白的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">drawImage:<span class="function"><span class="keyword">function</span>(<span class="params">path</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">    setTimeout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">      <span class="comment">// 将生成的canvas图片，转为真实图片</span></span><br><span class="line">      wx.canvasToTempFilePath(&#123;</span><br><span class="line">        x: <span class="number">0</span>,</span><br><span class="line">        y: <span class="number">0</span>,</span><br><span class="line">        canvasId: <span class="string">'canvas'</span>,</span><br><span class="line">        success(res) &#123;</span><br><span class="line">          <span class="keyword">let</span> shareImg = res.tempFilePath;</span><br><span class="line">          that.setData(&#123;</span><br><span class="line">            chosenImage: res.tempFilePath,</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        fail: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;, <span class="number">2000</span>)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>【注】有关canvas的旋转，你需要了解一下canvas的坐标系的问题，一开始没有先看这方面的内容，想当然了，导致绘制出来的东西是空白的，后面了解了之后发现就是坐标系没弄清楚，导致设定绘制的图片时，坐标系的值弄错了，画到了画布外面，导致空白，这里给一个传送门，大家可以看这篇文章：<br><a href="https://aotu.io/notes/2017/05/25/canvas-img-rotate-and-flip/index.html" target="_blank" rel="noopener">canvas 图像旋转与翻转姿势解锁</a></p><p>旋转90度和旋转270度同理，这里不再赘述</p><h2><span id="贴一下完整代码">贴一下完整代码</span></h2><p>当然，可能还有镜像翻转的情况，这里比较懒，就没弄了，也是差不多的。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">""</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">bindtap</span>=<span class="string">"chooseImage"</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">style</span>=<span class="string">""</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123;chosenImage&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">mode</span>=<span class="string">"widthFix"</span> <span class="attr">bindtap</span>=<span class="string">""</span> <span class="attr">style</span>=<span class="string">"width:300px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">canvas-id</span>=<span class="string">"canvas"</span> <span class="attr">style</span>=<span class="string">"width:</span></span></span><span class="template-variable">&#123;&#123;imageWidth&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">px;height:</span></span></span><span class="template-variable">&#123;&#123;imageHeight&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">px;position:absolute;top:200%"</span> &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">chooseImage:function()&#123;</span><br><span class="line">    wx.chooseImage(&#123;</span><br><span class="line">      count: <span class="number">1</span>,</span><br><span class="line">      sizeType: [<span class="string">'compressed'</span>],</span><br><span class="line">      sourceType: [<span class="string">'album'</span>, <span class="string">'camera'</span>],</span><br><span class="line">      success: (res) =&gt; &#123;</span><br><span class="line">        <span class="comment">// tempFilePath可以作为img标签的src属性显示图片</span></span><br><span class="line">        <span class="keyword">const</span> tempFilePaths = res.tempFilePaths</span><br><span class="line">        wx.getImageInfo(&#123;</span><br><span class="line">          src: tempFilePaths[<span class="number">0</span>],</span><br><span class="line">          success:(res)=&gt;&#123;</span><br><span class="line">            <span class="comment">//获得exif中的orientation信息   </span></span><br><span class="line">            <span class="keyword">if</span>(res.orientation==<span class="string">"up"</span>)&#123;</span><br><span class="line">              <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                chosenImage: tempFilePaths[<span class="number">0</span>],</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              let canvasContext = wx.createCanvasContext(<span class="string">'canvas'</span>)</span><br><span class="line">              console.<span class="built_in">log</span>(res.orientation)</span><br><span class="line">              <span class="keyword">switch</span> (res.orientation) &#123;</span><br><span class="line">                <span class="keyword">case</span> (<span class="string">"down"</span>):</span><br><span class="line">                  var <span class="built_in">width</span> = res.<span class="built_in">width</span>;</span><br><span class="line">                  var <span class="built_in">height</span> = res.<span class="built_in">height</span></span><br><span class="line">                  <span class="comment">//需要旋转180度</span></span><br><span class="line">                  <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                    imageWidth: <span class="built_in">width</span>,</span><br><span class="line">                    imageHeight: <span class="built_in">height</span>,</span><br><span class="line">                  &#125;)</span><br><span class="line">                  canvasContext.<span class="built_in">translate</span>(<span class="built_in">width</span> / <span class="number">2</span>, <span class="built_in">height</span> / <span class="number">2</span>)</span><br><span class="line">                  canvasContext.<span class="built_in">rotate</span>(<span class="number">180</span> * Math.<span class="literal">PI</span> / <span class="number">180</span>)</span><br><span class="line">                  canvasContext.drawImage(tempFilePaths[<span class="number">0</span>], -<span class="built_in">width</span> / <span class="number">2</span>, -<span class="built_in">height</span> / <span class="number">2</span>, <span class="built_in">width</span>, <span class="built_in">height</span>);</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> (<span class="string">"left"</span>):</span><br><span class="line">                  var <span class="built_in">width</span> = res.<span class="built_in">width</span>;</span><br><span class="line">                  var <span class="built_in">height</span> = res.<span class="built_in">height</span>;</span><br><span class="line">                  canvasContext.<span class="built_in">translate</span>(<span class="built_in">height</span> / <span class="number">2</span>, <span class="built_in">width</span> / <span class="number">2</span>)</span><br><span class="line">                  <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                    imageWidth: <span class="built_in">height</span>,</span><br><span class="line">                    imageHeight: <span class="built_in">width</span>,</span><br><span class="line">                  &#125;)</span><br><span class="line">                  <span class="comment">//顺时针旋转270度</span></span><br><span class="line">                  canvasContext.<span class="built_in">rotate</span>(<span class="number">270</span> * Math.<span class="literal">PI</span> / <span class="number">180</span>)</span><br><span class="line">                  canvasContext.drawImage(tempFilePaths[<span class="number">0</span>], - <span class="built_in">width</span> / <span class="number">2</span>, - <span class="built_in">height</span> / <span class="number">2</span>, <span class="built_in">width</span> , <span class="built_in">height</span>);</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> (<span class="string">"right"</span>):</span><br><span class="line">                  var <span class="built_in">width</span> = res.<span class="built_in">width</span>;</span><br><span class="line">                  var <span class="built_in">height</span> = res.<span class="built_in">height</span>;</span><br><span class="line">                  <span class="keyword">this</span>.setData(&#123;</span><br><span class="line">                    imageWidth: <span class="built_in">height</span>,</span><br><span class="line">                    imageHeight: <span class="built_in">width</span>,</span><br><span class="line">                  &#125;)</span><br><span class="line">                  canvasContext.<span class="built_in">translate</span>(<span class="built_in">height</span> / <span class="number">2</span>, <span class="built_in">width</span> / <span class="number">2</span>)                 </span><br><span class="line">                  <span class="comment">//顺时针旋转90度</span></span><br><span class="line">                  canvasContext.<span class="built_in">rotate</span>(<span class="number">90</span> * Math.<span class="literal">PI</span> / <span class="number">180</span>)</span><br><span class="line">                  canvasContext.drawImage(tempFilePaths[<span class="number">0</span>], - <span class="built_in">width</span> / <span class="number">2</span>, - <span class="built_in">height</span> / <span class="number">2</span>, <span class="built_in">width</span>, <span class="built_in">height</span>);</span><br><span class="line">                  <span class="keyword">break</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              canvasContext.<span class="title">draw</span>()</span><br><span class="line">              <span class="keyword">this</span>.drawImage()</span><br><span class="line">            &#125;      </span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  drawImage:function(path) &#123;</span><br><span class="line">    var that = <span class="keyword">this</span>;</span><br><span class="line">    setTimeout(()=&gt;&#123;</span><br><span class="line">      <span class="comment">// 将生成的canvas图片，转为真实图片</span></span><br><span class="line">      wx.canvasToTempFilePath(&#123;</span><br><span class="line">        x: <span class="number">0</span>,</span><br><span class="line">        y: <span class="number">0</span>,</span><br><span class="line">        canvasId: <span class="string">'canvas'</span>,</span><br><span class="line">        success(res) &#123;</span><br><span class="line">          let shareImg = res.tempFilePath;</span><br><span class="line">          that.setData(&#123;</span><br><span class="line">            chosenImage: res.tempFilePath,</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        fail: function (res) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;, <span class="number">2000</span>)</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;&lt;span id=&quot;前言&quot;&gt;前言&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;又是好久好久好久没更新了，太懒了&lt;/p&gt;
&lt;p&gt;这次记录一下在做mini项目中遇到的一个问题，当时没时间解决，mini结束后还是打算看看这个问题。&lt;/p&gt;
&lt;h1&gt;&lt;span id=&quot;问题说明&quot;&gt;问题说明&lt;/
      
    
    </summary>
    
    
      <category term="微信小程序" scheme="http://wsyks.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>2018年前端开发校招面试总结</title>
    <link href="http://wsyks.github.io/2018/12/27/2018%E5%B9%B4%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E6%A0%A1%E6%8B%9B%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/"/>
    <id>http://wsyks.github.io/2018/12/27/2018年前端开发校招面试总结/</id>
    <published>2018-12-27T13:44:12.000Z</published>
    <updated>2018-12-28T03:23:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>2018年人生中最重要的事情之一就是找工作啦，从6月份初断断续续开始复习，7月内推开始，9月大批量的笔试、面试，10月初拿到了自己比较满意的offer，也是历经了快4个月。<br>简历投的主要是杭州、上海的一些大厂们，分享一些面试的问题吧，考到烂的如输入url发生了什么、闭包是什么就不放出来了。</p><p>不过这些面试题虽然常见，但是还是要用心掌握，因为考到的频率确实蛮高的。由于当时并没怎么接触nodejs和react ，所以这方面的题目没有。</p><h1><span id="js相关">js相关</span></h1><ul><li>ajax和axios的不同（多益）</li><li>vue中在哪个阶段进行异步请求比较合适(阿里，百度)</li><li>微信小程序底层实现的机制（jsbridge）（阿里）</li><li>vue中vuex的mapSetter是怎么实现的（bilibili）</li><li>什么是尾递归（bilibili）</li><li>vue项目中使用到的优化手段（网易）</li><li>commonjs和ES6中的模块化有什么区别（网易）<br><a href="http://es6.ruanyifeng.com/#docs/module-loader#ES6-%E6%A8%A1%E5%9D%97%E4%B8%8E-CommonJS-%E6%A8%A1%E5%9D%97%E7%9A%84%E5%B7%AE%E5%BC%82" target="_blank" rel="noopener">回答见阮一峰的博客</a></li><li>webstoreage如果存储满了会怎么样（报错）（网易）</li><li>application cache是怎么设置的（网易）</li><li>如何获取一个div下所有的文本节点（网易）</li><li>兼容浏览器的一些方法（网易）</li><li>为什么不同浏览器渲染出来的东西会有差别，本质是什么（网易）</li><li>vue中写一个组件要注意哪些（58）</li><li>js如何实现多线程，webworker怎么通信（美团）</li><li>vue的异步更新考察：（美团）</li></ul><p>vue中以下代码会出发几次update生命周期（1次）</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.a=<span class="number">1</span></span><br><span class="line"><span class="comment">//代码</span></span><br><span class="line"><span class="keyword">this</span>.a=<span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>vue中以下代码会出发几次update生命周期（2次）</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">setTimout(<span class="function"><span class="params">()</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.a=<span class="number">1</span></span><br><span class="line">    </span><br><span class="line">&#125;,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span>代码</span><br><span class="line"><span class="keyword">this</span>.a=<span class="number">3</span>;</span><br></pre></td></tr></table></figure><h2><span id="那些红宝书里都有的知识点">那些红宝书里都有的知识点</span></h2><p>红宝书（javascript高级程序设计一定要好好看呀~~~ ）</p><ul><li>BOM有哪些东西（网易）</li><li>requestAnimationFrame和setTimeout写动画的区别 （网易）</li><li>如果得到今天是星期几（getDay()(网易)<br>【我回答出来后，网易面试官说你怎么记得那么清楚 - -|||】</li></ul><h1><span id="css相关">css相关</span></h1><ul><li>如何实现小于12px的字体效果（大疆）</li><li>css匹配的算法（从右向左）（大疆）</li><li>animation和transition的区别（阿里）</li><li>一个div从一个地方挪到另一个地方的动画如何实现，如果还要求鼠标放上去时，该div还要旋转怎么写（美团）</li><li>浮动和清除浮动考察（58）：<br>如何5个div，其中第三个变成浮动的，会怎么样<br>怎么让他变回去——清除浮动</li><li>如何实现一个进度条（新浪）</li></ul><h1><span id="手写代码">手写代码</span></h1><ul><li>数组去重怎么做，如果是数组是这样的[<a href="http://es6.ruanyifeng.com/#docs/module-loader#ES6-%E6%A8%A1%E5%9D%97%E4%B8%8E-CommonJS-%E6%A8%A1%E5%9D%97%E7%9A%84%E5%B7%AE%E5%BC%82" target="_blank" rel="noopener">1</a>,[2],[3]]，该如何去重（bilibili）</li><li>写一个函数 实现test(a)(b),如果b&gt;0 返回a+b，如果b&lt;0,返回a-b（柯里化考察）（bilibili）</li></ul><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a= [...arguments][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">var</span> b = [...arguments][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span>(b&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> a+b;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a-b</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实现链式调用（百度）</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">coder.sleep().print1().print2()</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coder</span></span>&#123;</span><br><span class="line">    sleep()&#123;</span><br><span class="line">        console.log(<span class="string">"sleep"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;<span class="comment">//链式调用的关键</span></span><br><span class="line">    &#125;</span><br><span class="line">    print1()&#123;</span><br><span class="line">        console.log(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;<span class="comment">//链式调用的关键</span></span><br><span class="line">    &#125;</span><br><span class="line">    print2()&#123;</span><br><span class="line">        console.log(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;<span class="comment">//链式调用的关键</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>如果sleep函数要等待3秒钟再打印然后在执行之后的操作呢？</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coder</span> </span>&#123;</span><br><span class="line">  sleep()&#123;</span><br><span class="line">    <span class="keyword">var</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">    <span class="keyword">while</span>((<span class="keyword">new</span> <span class="built_in">Date</span>() - date) &lt; <span class="number">3000</span>) &#123;</span><br><span class="line">      <span class="comment">//通过这里进行阻塞sleep</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"sleep"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;<span class="comment">//链式调用的关键</span></span><br><span class="line">  &#125;</span><br><span class="line">  print1()&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;<span class="comment">//链式调用的关键</span></span><br><span class="line">  &#125;</span><br><span class="line">  print2()&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;<span class="comment">//链式调用的关键</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> b = <span class="keyword">new</span> Coder()</span><br><span class="line">b.sleep().print1().print2()</span><br></pre></td></tr></table></figure><ul><li>以下代码会输出什么(百度)</li></ul><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">date</span> = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">setTimeout(()=&gt;&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="keyword">new</span> <span class="built_in">Date</span>()-<span class="built_in">date</span>)</span><br><span class="line">&#125;,<span class="number">1000</span>)</span><br><span class="line"><span class="keyword">while</span>((<span class="keyword">new</span> <span class="built_in">Date</span>()-<span class="built_in">date</span>)&lt;<span class="number">3000</span>)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出3000+的值</span></span><br></pre></td></tr></table></figure><ul><li><p>事件代理考察：（百度）<br>如果有一个页面，有许多a标签，在上面写点击事件的事件代理怎么写。<br>如果a标签里面也有很多子节点，点击了这些子节点也要实现上面效果?<br>思路：循环判断e.target.parentNode.tagName===“a”</p></li><li><p>跳台阶算法（美团）</p></li><li><p>火车运煤算法（美团）</p></li><li><p>[1,[2],[3,[4]]]这种无限嵌套数组 变成[1,2,3,4]怎么做（58）</p></li></ul><h1><span id="数据库">数据库</span></h1><ul><li>项目中为什么使用mongodb，数据库的三大范式（百度）</li><li>mongodb的aggregate介绍一下（阿里）</li><li>mysql的优化手段（美团）</li><li>mysql索引的原理（问的较多）</li></ul><h1><span id="计算机网络">计算机网络</span></h1><h2><span id="常见问题">常见问题</span></h2><ul><li>get和post的区别</li><li>状态码</li><li>http和https的区别</li></ul><h2><span id="其他">其他</span></h2><ul><li>dns请求过程</li><li>dns是基于什么协议（美团）</li><li>TCP和UDP的使用场景和区别（美团）</li><li>url除了http https之类的协议，可以有自己自定义么。（58）<br>思路：可以，例如微信小程序底层Js Bridge原理就是利用url scheme拦截等</li></ul><h1><span id="其他">其他</span></h1><ul><li><p>操作系统的功能（百度）</p></li><li><p>页面置换的算法有哪些（bilibili）</p></li><li><p>前端安全（xss，csrf）（几乎每个大厂都问到了）</p></li><li><p>AES和MD5的区别</p></li><li><p>git的stage，三个区是什么（工作区，暂存区，版本库）（阿里）<br>如果要写实现一个抢红包页面，如何防止有人恶意一直玩抢红包或者发包模拟抢红包请求（网易）。<br>个人思路：<br>1、判断一段时间内同一个IP的请求数量<br>2、设置验证码<br>3、看页面访问顺序，一般有一个入口页面再是抢红包页面。恶意发包可能是直接的页面请求<br>4、达到一定次数或者红包额度，直接丢包</p></li><li><p>js和c语言编译的差别</p></li><li><p>有一个用户登录的表单，你会如何做使达到安全。（美团）</p></li><li><p>etag的原理（文件名时间hash）（美团）</p></li><li><p>一个微博api，提供top10的数据，但是每次去请求并不一定更新，所以每次这样请求返回数据会浪费流量，希望有一个api可以返回是否更新，要怎么操作。（美团）<br>思路：将数据进行hash，每次判断一下和上一次的hash值。</p></li><li><p>jquery和vue的区别（美团）</p></li></ul><h1><span id="一些面试心得">一些面试心得</span></h1><ul><li>熟悉简历上写的任何东西</li><li>回答问题时引到自己熟悉的东西上<br>比如问你ES6掌握情况，挑自己熟悉的讲<br>比如前端优化回答时,挑自己理解原理的讲，比如避免重排重绘，之后一般还会继续问哪些会引起重绘重排</li><li>对方提不知道如何回答的问题时</li></ul><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、引到自己会的：比如问php的继承，讲将js的继承，问mysql的优化手段时，讲mongodb的优化手段</span><br><span class="line"><span class="number">2</span>、讲大概思路</span><br><span class="line"><span class="number">3</span>、请面试官给提示</span><br><span class="line"><span class="number">4</span>、不会就跳过，不要耽搁太多</span><br></pre></td></tr></table></figure><ul><li>展示自己的博客</li><li>熟悉的问题可以回答的深入一些</li><li>手写代码时考虑封装、数据类型判断等</li><li>面试后总结<br>面试时有些问题觉得面试官问的很奇怪，要好好想想人家问问题背后的动机、想考察的知识点。</li></ul><p>祝大家都能拿到心仪的offer，哟呼~~</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;2018年人生中最重要的事情之一就是找工作啦，从6月份初断断续续开始复习，7月内推开始，9月大批量的笔试、面试，10月初拿到了自己比较满意的offer，也是历经了快4个月。&lt;br&gt;
简历投的主要是杭州、上海的一些大厂们，分享一些面试的问题吧，考到烂的如输入url发生了什么、
      
    
    </summary>
    
    
      <category term="面试" scheme="http://wsyks.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客配置PWA</title>
    <link href="http://wsyks.github.io/2018/12/17/hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AEPWA/"/>
    <id>http://wsyks.github.io/2018/12/17/hexo博客配置PWA/</id>
    <published>2018-12-17T12:45:35.000Z</published>
    <updated>2018-12-17T13:10:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>想要实践一下pwa，就拿自己的博客来试验一下。</p><h1><span id="配置https">配置https</span></h1><p>想要实现网站的pwa，需要将网站配置成https，主要是因为service worker只能下https下，本地localhost和127.0.0.1也是可以的。</p><h2><span id="ssl证书">ssl证书</span></h2><p>购买的腾讯云的服务器，可以免费申请ssl证书，申请完后，下载证书得到一个压缩文件。解压缩后有好几个目录，因为是nginx的环境，把nginx下的证书和key复制出来，放到服务器上的目录即可。</p><h2><span id="nginx配置https">nginx配置https</span></h2><p>编辑nginx.conf文件，添加如下配置，设置证书的路径，此外，将http重定向https，如果想要http和https同时使用，也可以不需要重定向和上面的add_header配置。</p><img src="/2018/12/17/hexo博客配置PWA/3.png"><h1><span id="配置hexo-pwa">配置hexo pwa</span></h1><h2><span id="安装hexo-pwa">安装hexo-pwa</span></h2><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm hexo-pwa --<span class="keyword">save</span></span><br><span class="line"><span class="comment">//或</span></span><br><span class="line">cnpm hexo-pwa --<span class="keyword">save</span></span><br></pre></td></tr></table></figure><h2><span id="配置文件">配置文件</span></h2><p>在hexo博客根目录的.config.yml里添加如下配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pwa:</span></span><br><span class="line">  <span class="attr">manifest:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/manifest.json</span></span><br><span class="line">    <span class="attr">body:</span></span><br><span class="line">      <span class="attr">"name":</span> <span class="string">"Syean"</span></span><br><span class="line">      <span class="attr">"short_name":</span> <span class="string">"Syean"</span></span><br><span class="line">      <span class="attr">"theme_color":</span> <span class="string">"#2a6cb1"</span></span><br><span class="line">      <span class="attr">"background_color":</span> <span class="string">"#ffffff"</span></span><br><span class="line">      <span class="attr">"display":</span> <span class="string">"standalone"</span></span><br><span class="line">      <span class="attr">"Scope":</span> <span class="string">"/"</span></span><br><span class="line">      <span class="attr">"start_url":</span> <span class="string">"/"</span></span><br><span class="line">      <span class="attr">icons:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">img/icon_144.png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">144x144</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">img/icon_128.png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">128x128</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">src:</span> <span class="string">img/icon_96.png</span></span><br><span class="line">          <span class="attr">sizes:</span> <span class="string">96x96</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">image/png</span></span><br><span class="line">  <span class="attr">serviceWorker:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/serviceworker.js</span></span><br><span class="line">    <span class="attr">preload:</span></span><br><span class="line">      <span class="attr">urls:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">/</span></span><br><span class="line">      <span class="attr">posts:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">opts:</span></span><br><span class="line">      <span class="attr">networkTimeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">routes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js</span><span class="string">/regexp</span> <span class="string">/hm.baidu.com/</span></span><br><span class="line">        <span class="attr">strategy:</span> <span class="string">networkOnly</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js</span><span class="string">/regexp</span> <span class="string">/.*\.(js|css|jpg|jpeg|png|gif)$/</span></span><br><span class="line">        <span class="attr">strategy:</span> <span class="string">cacheFirst</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">pattern:</span> <span class="type">!!js</span><span class="string">/regexp</span> <span class="string">/\//</span></span><br><span class="line">        <span class="attr">strategy:</span> <span class="string">networkFirst</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p>具体的配置项内容可以参考看<a href="https://developer.mozilla.org/zh-CN/docs/Web/Manifest" target="_blank" rel="noopener">mozilla文档</a></p><h2><span id="添加manifest和serviceworker文件">添加manifest和serviceworker文件</span></h2><p>在根目录下添加manifest.json和serviceworker.js，或者其他目录也可以，与.config.yml的目录统一即可。<br>manifest.json文件内容</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"Syean"</span>,</span><br><span class="line">  <span class="attr">"short_name"</span>: <span class="string">"Syean"</span>,</span><br><span class="line">  <span class="attr">"theme_color"</span>: <span class="string">"#2a6cb1"</span>,</span><br><span class="line">  <span class="attr">"background_color"</span>: <span class="string">"#ffffff"</span>,</span><br><span class="line">  <span class="attr">"display"</span>: <span class="string">"standalone"</span>,</span><br><span class="line">  <span class="attr">"scope"</span>: <span class="string">"/"</span>,</span><br><span class="line">  <span class="attr">"start_url"</span>: <span class="string">"/"</span>,</span><br><span class="line">  <span class="attr">"icons"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"src"</span>: <span class="string">"img/icon_96.png"</span>,</span><br><span class="line">      <span class="attr">"sizes"</span>: <span class="string">"96x96"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"src"</span>: <span class="string">"img/icon_128.png"</span>,</span><br><span class="line">      <span class="attr">"sizes"</span>: <span class="string">"128x128"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"src"</span>: <span class="string">"img/icon_144.png"</span>,</span><br><span class="line">      <span class="attr">"sizes"</span>: <span class="string">"144x144"</span>,</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"image/png"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>serviceworker.js</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">importScripts</span>(<span class="string">'https://g.alicdn.com/kg/workbox/3.3.0/workbox-sw.js'</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">if</span> (workbox) &#123;</span><br><span class="line">    <span class="selector-tag">workbox</span><span class="selector-class">.setConfig</span>(&#123; <span class="attribute">modulePathPrefix</span>: <span class="string">'https://g.alicdn.com/kg/workbox/3.3.0/'</span> &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">workbox</span><span class="selector-class">.precaching</span><span class="selector-class">.precache</span>([<span class="string">'/'</span>, <span class="string">'/index.html'</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">workbox</span><span class="selector-class">.routing</span><span class="selector-class">.registerRoute</span>(new RegExp(<span class="string">'^https?://syean.cn/?$'</span>), workbox.strategies.networkFirst());</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">workbox</span><span class="selector-class">.routing</span><span class="selector-class">.registerRoute</span>(new RegExp(<span class="string">'.*.html'</span>), workbox.strategies.networkFirst());</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">workbox</span><span class="selector-class">.routing</span><span class="selector-class">.registerRoute</span>(new RegExp(<span class="string">'.*.(?:js|css|jpg|png|gif)'</span>), workbox.strategies.staleWhileRevalidate());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="chrome-配置pwa选项">chrome 配置pwa选项</span></h2><ol><li>地址栏输入: Chrome://flags</li><li>启用以下项目: Desktop PWAs(桌面PWAs)、App Banners(应用横幅)、Experimental App Banners(实验性应用横幅)</li><li>重启浏览器</li></ol><p>这样点击地址栏旁的工具栏下可以看到”创建快捷方式…“这个选项了。</p><p>此外，F12打开chrome调试工具，可以看到一些文件是from service worker，这样表示service worker注册成功了。<br>点击network，可以选择offline选项模拟离线环境。</p><img src="/2018/12/17/hexo博客配置PWA/1.png"><h1><span id="其他">其他</span></h1><p>用hexo-offline插件也可以实现pwa<br>手机上浏览器也使用chrome，可以看到弹出框“添加至主屏幕”<br>也可以点击工具栏添加到主屏幕</p><img src="/2018/12/17/hexo博客配置PWA/2.png"><h1><span id="参考">参考</span></h1><p><a href="https://segmentfault.com/a/1190000004976222" target="_blank" rel="noopener">Nginx+Https配置</a><br><a href="https://juejin.im/post/5b8ff410e51d450e7b16d7ba" target="_blank" rel="noopener">hexo博客简单支持PWA</a><br><a href="https://crs.mainstars.net/burogu/post/hexo-pwa/" target="_blank" rel="noopener">为Hexo添加简单的PWA支持</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;想要实践一下pwa，就拿自己的博客来试验一下。&lt;/p&gt;
&lt;h1&gt;&lt;span id=&quot;配置https&quot;&gt;配置https&lt;/span&gt;&lt;/h1&gt;
&lt;p&gt;想要实现网站的pwa，需要将网站配置成https，主要是因为service worker只能下https下，本地localho
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://wsyks.github.io/tags/hexo/"/>
    
      <category term="pwa" scheme="http://wsyks.github.io/tags/pwa/"/>
    
  </entry>
  
  <entry>
    <title>使用electron-packager打包exe文件</title>
    <link href="http://wsyks.github.io/2018/05/04/%E4%BD%BF%E7%94%A8electron-packager%E6%89%93%E5%8C%85exe%E6%96%87%E4%BB%B6/"/>
    <id>http://wsyks.github.io/2018/05/04/使用electron-packager打包exe文件/</id>
    <published>2018-05-04T09:28:17.000Z</published>
    <updated>2018-11-30T13:52:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>electron的项目写的差不错了，要打包成exe文件咯。</p> <a id="more"></a><h2><span id="安装">安装</span></h2><p>在文件主目录下安装 electron-packager</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install electron-packager --save-dev</span><br></pre></td></tr></table></figure><p>在package.json里添加&quot;packager&quot;，设置成如下</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"start"</span>: <span class="string">"electron ."</span>,</span><br><span class="line">    <span class="string">"test"</span>: <span class="string">"echo \"</span><span class="keyword">Error</span>: <span class="keyword">no</span> <span class="keyword">test</span> specified\<span class="string">" &amp;&amp; exit 1"</span>,</span><br><span class="line">    <span class="string">"packager"</span>: <span class="string">"electron-packager . outapp --overwrite --asar=true --platform=win32 --arch=ia32 --icon=assets/img/favicon.ico --prune=true --out=release-builds --version-string.CompanyName=CE --version-string.FileDescription=CE --version-string.ProductName=\"</span>Electron <span class="keyword">Tutorial</span> <span class="keyword">App</span>\<span class="string">" --electron-version=1.6.2"</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>platform：设置平台，window，linux还是Mac</li><li>arch：x84还是x64，</li><li>outapp的位置可以替换成你打包后的exe名字</li><li>electron-version：electron的版本，必须要指定，这里设置为1.6.2</li><li>icon 图标地址</li></ul><p>之后运行即可</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run packager</span><br></pre></td></tr></table></figure><p>第一次打包会慢一点，要去下载electron-version对应的版本的electron</p><h2><span id="可能报错的几种情况及对应方案">可能报错的几种情况及对应方案</span></h2><ol><li><p>出现以下报错：<br><code>electron ELOOP: too many symbolic links encountered</code><br>解决方案：将node_modules文件删掉，然后用<code>npm install</code>重新安装依赖包，不要用<code>cnpm</code>安装</p></li><li><p>electron打包只会打包<code>dependencies</code>中的依赖包，如果文件中用到了<code>devDependencies</code>，之后可能会报错，找不到对应的模块。</p></li><li><p>在打包好后，打开exe文件，出现如下错误：<br><code>Uncaught Exception: TypeError: Error processing argument at index 0, conversion failure from assets/img/logo.jpg</code><br>原因在 tray的图标应该设置成绝对路径，不要用相对路径。</p></li></ol><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> iconPath = path.<span class="keyword">join</span>(__dirname,<span class="string">'assets/img/logo.jpg'</span>)</span><br><span class="line">appIcon = <span class="keyword">new</span> Tray(iconPath);</span><br></pre></td></tr></table></figure><p>好啦，愉快的使用</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;electron的项目写的差不错了，要打包成exe文件咯。&lt;/p&gt;
    
    </summary>
    
    
      <category term="electron" scheme="http://wsyks.github.io/tags/electron/"/>
    
  </entry>
  
  <entry>
    <title>动效神器Lottie初体验——把AE动画转换成WEB原生动画</title>
    <link href="http://wsyks.github.io/2018/04/27/%E5%8A%A8%E6%95%88%E7%A5%9E%E5%99%A8Lottie%E5%88%9D%E4%BD%93%E9%AA%8C%E2%80%94%E2%80%94%E6%8A%8AAE%E5%8A%A8%E7%94%BB%E8%BD%AC%E6%8D%A2%E6%88%90WEB%E5%8E%9F%E7%94%9F%E5%8A%A8%E7%94%BB/"/>
    <id>http://wsyks.github.io/2018/04/27/动效神器Lottie初体验——把AE动画转换成WEB原生动画/</id>
    <published>2018-04-27T08:53:58.000Z</published>
    <updated>2018-11-30T13:59:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>由 Airbnb 开发的 Lottie 是一个将 After Effects 动画提供给任意一个 iOS，macOS，Android 还有 React Native 原生 APP 的文件库。</p><a id="more"></a><p>这些动画通过一个叫 Bodymovin 的开源 After Effects 插件，以 JSON 文件的形式进行输出。Lottie 通过 JSON 格式下载动画数据并实时提供给开发者。</p> <img src="/2018/04/27/动效神器Lottie初体验——把AE动画转换成WEB原生动画/1.gif"><h1><span id="下载安装">下载安装</span></h1><p>1.首先你需要下载AE，这里就不多说了，自行下载<br>我一般下载adobe的软件都是通过Adobe Creative Cloud，再用工具pj。<br>2.下载 <a href="https://github.com/airbnb/lottie-web/blob/master/build/extension/bodymovin.zxp" target="_blank" rel="noopener">bodymovin</a>, 点击view raw即可</p><h2><span id="安装插件">安装插件</span></h2><p>在windows下，用以下方式安装该插件:</p><ol><li>解压缩<code>bodymovin.zxp</code>文件，到<code>C:\Program Files (x86)\Common Files\Adobe\CEP\extensions</code>目录下，mac用户解压到以下目录<br><code>/Library/Application\ Support/Adobe/CEP/extensions/bodymovin</code></li></ol> <img src="/2018/04/27/动效神器Lottie初体验——把AE动画转换成WEB原生动画/2.png"><ol start="2"><li>配置注册表，按<code>win+R</code>，输入<code>regedit</code>打开注册表，在注册表键值 <code>HKEY_CURRENT_USER/Software/Adobe/CSXS.6</code> 增加一个类型为字符串(String)，键值名为 <code>PlayerDebugMode</code> , 值设置为 1 。</li></ol>  <img src="/2018/04/27/动效神器Lottie初体验——把AE动画转换成WEB原生动画/1.png"><ol start="3"><li>打开AE，在<code>编辑-&gt;首选项-&gt;常规</code>中勾选<code>允许脚本写入文件和访问网络</code></li></ol><p>安装成功后，会在AE<code>窗口-&gt;扩展</code>中看到bodymovin.</p><h1><span id="使用">使用</span></h1><p>打开一个AE文件，例如<a href="http://jadyoap.bj.bcebos.com/ife/mission8.aep" target="_blank" rel="noopener">AE文件</a><br>点击<code>窗口-&gt;扩展-&gt;bodymovin</code><br>设置好路径后，点击<code>render</code>即可</p><img src="/2018/04/27/动效神器Lottie初体验——把AE动画转换成WEB原生动画/3.png"><p>生成完毕后，点击preview，还可以预览</p> <img src="/2018/04/27/动效神器Lottie初体验——把AE动画转换成WEB原生动画/4.png">  <img src="/2018/04/27/动效神器Lottie初体验——把AE动画转换成WEB原生动画/5.png"><h2><span id="web应用实例">WEB应用实例</span></h2><p>生成好JSON文件后，在html文件中<br>引入<code>lottie.js</code>，下载地址在<a href="https://github.com/airbnb/lottie-web/blob/master/build/player/lottie.min.js" target="_blank" rel="noopener">这里</a></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> id=<span class="string">"task"</span> style=<span class="string">"width: 300px;background-color: cadetblue"</span>&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script src=<span class="string">"lottie.min.js"</span> type=<span class="string">"text/javascript"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var animation = bodymovin.loadAnimation(&#123;</span><br><span class="line">  container: document.getElementById(<span class="string">'task'</span>),</span><br><span class="line">  renderer: <span class="string">'svg'</span>,</span><br><span class="line">  loop: true,</span><br><span class="line">  autoplay: true,</span><br><span class="line">  path: <span class="string">'task.json'</span></span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>注意，如果你也用的上面AE例子的话，因为该动画是白色的，所以一定要给容器设置背景颜色，要不然就会看到白茫茫一片</p>  <img src="/2018/04/27/动效神器Lottie初体验——把AE动画转换成WEB原生动画/2.gif"><blockquote><p>还有一个要注意的点为，如果在本地测试，必须要在服务器上，否则会报错，因为它需要通过网络去请求动画文件。</p></blockquote>  <img src="/2018/04/27/动效神器Lottie初体验——把AE动画转换成WEB原生动画/6.png"><p>除了上面的方式，官网还介绍了其他引用渲染方式<br>不过这种方式是生成的canvas。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> style=<span class="string">"width: 300px;background-color: cadetblue"</span> class=<span class="string">"lottie"</span> data-<span class="attribute">animation</span>-path=<span class="string">"task.json"</span> data-anim-loop=<span class="string">"true"</span> data-name=<span class="string">"test"</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>这里有两个必需设置的东西</p><ol><li>class要为“lottie”</li><li>data-animation-path为json路径</li></ol><h1><span id="lottie的一些方法">lottie的一些方法</span></h1><p><a href="https://github.com/airbnb/lottie-web" target="_blank" rel="noopener">官网</a> 上还介绍了其他一些方法</p><ul><li>play</li><li>stop</li><li>pause</li><li>setLocationHref(href)</li><li>setSpeed(speed)</li></ul><p>等等，这里不多讲啦。</p><h2><span id="方法应用小实例">方法应用小实例</span></h2><p>在上面的基础上，做一个效果</p>  <img src="/2018/04/27/动效神器Lottie初体验——把AE动画转换成WEB原生动画/3.gif"><p>即鼠标放上去时才动画，离开则不动画了，比较简单，涉及一些方法的应用，直接上代码。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> id=<span class="string">"bm"</span> style=<span class="string">"width: 200px;height: 300px;background-color: cadetblue"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;script src=<span class="string">"lottie.min.js"</span> type=<span class="string">"text/javascript"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line"><span class="selector-tag">var</span> bm = document.getElementById(<span class="string">'bm'</span>)</span><br><span class="line">var animation = lottie.loadAnimation(&#123;</span><br><span class="line">  container: bm,</span><br><span class="line">  renderer: <span class="string">'svg'</span>,</span><br><span class="line">  autoplay: false,</span><br><span class="line">  path: <span class="string">'task.json'</span>,</span><br><span class="line">  loop: true,</span><br><span class="line">                 prerender: true,</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">bm.addEventListener(<span class="string">"mouseenter"</span>,function()&#123;</span><br><span class="line">animation.play()</span><br><span class="line">&#125;)</span><br><span class="line">bm.addEventListener(<span class="string">"mouseleave"</span>,function()&#123;</span><br><span class="line">animation.stop()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>好啦，基础使用就是这些了，不过Lottie虽然好用，但是并不是能转换所有的动画的，这点心里要有点数哟。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由 Airbnb 开发的 Lottie 是一个将 After Effects 动画提供给任意一个 iOS，macOS，Android 还有 React Native 原生 APP 的文件库。&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://wsyks.github.io/tags/javascript/"/>
    
      <category term="设计" scheme="http://wsyks.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="动画" scheme="http://wsyks.github.io/tags/%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>Electron入门实践总结</title>
    <link href="http://wsyks.github.io/2018/04/26/electron%E5%85%A5%E9%97%A8%E5%AE%9E%E8%B7%B5%E6%80%BB%E7%BB%93/"/>
    <id>http://wsyks.github.io/2018/04/26/electron入门实践总结/</id>
    <published>2018-04-26T02:47:28.000Z</published>
    <updated>2018-11-30T13:53:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近，用Electron写了一个桌面应用，是一个比较简单的应用，所以用的东西都是最浅的，做一个总结吧。</p><a id="more"></a><p>Electron是由Github开发，用HTML，CSS和JavaScript来构建跨平台桌面应用程序的一个开源库。 Electron通过将Chromium和Node.js合并到同一个运行时环境中，并将其打包为Mac，Windows和Linux系统下的应用来实现这一目的。</p><h1><span id="安装">安装</span></h1><p>因为是基于nodejs，所以先要安装nodejs，这就不多说了</p><p>创建一个项目文件夹，执行</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure><p>之后在安装electron<br>这里用的淘宝的镜像，所以是</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g electron</span><br></pre></td></tr></table></figure><p>大体上，一个 Electron 应用的目录结构如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">your-app/</span><br><span class="line">├── package.json</span><br><span class="line">├── main.js</span><br><span class="line">└── index.html</span><br></pre></td></tr></table></figure><p>package.json的格式和 Node 的完全一致，并且那个被 main 字段声明的脚本文件是你的应用的启动脚本，它运行在主进程上。你应用里的 package.json 看起来应该像：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>    : <span class="string">"your-app"</span>,</span><br><span class="line">  <span class="attr">"version"</span> : <span class="string">"0.1.0"</span>,</span><br><span class="line">  <span class="attr">"main"</span>    : <span class="string">"main.js"</span> <span class="comment">//这里要与目录的里的文件名保持一致</span></span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"electron ."</span>,</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：如果 main 字段没有在 package.json 声明，Electron会优先加载 index.js</p></blockquote><h1><span id="快速搭建">快速搭建</span></h1><p>clone  github上的<a href="https://github.com/electron/electron-quick-start" target="_blank" rel="noopener">electron-quick-start</a>项目<br>按照以下流程便可以快速启动了</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git clone https:<span class="comment">//github.com/electron/electron-quick-start</span></span><br><span class="line"># Go into the repository</span><br><span class="line">cd electron-quick-start</span><br><span class="line"># Install dependencies</span><br><span class="line">npm install</span><br><span class="line"># Run the app</span><br><span class="line">npm start</span><br></pre></td></tr></table></figure><h1><span id="实现热更新">实现热更新</span></h1><p>如果你不改变菜单以及main.js的情况下，你更新了页面的结构和样式，可以使用==Ctrl+R==来刷新页面，但是修改了main.js，你可能需要频频终止，然后再重新启动，有什么方式可以实现这些文件一发生变化就更新呢？<br>这里使用的是用gulp创建一个任务。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cnpm install gulp -g  <span class="comment">//全局安装</span></span><br><span class="line">cnpm install --save-dev gulp </span><br><span class="line">cnpm install electron-connect</span><br></pre></td></tr></table></figure><p>如果安装中间报错了，说缺失什么模块，<br>那就先cnpm install 该模块，在重新安装即可。</p><p>然后在项目目录下新建==gulpfile.js==</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var gulp = require('gulp');</span><br><span class="line">var gutil = require('gulp-util');</span><br><span class="line">var electron = require('electron-connect').server.create();</span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'watch:electron'</span>, function () &#123; <span class="comment">// watch:electron 为你的任务名字</span></span><br><span class="line">  electron.start();</span><br><span class="line">  gulp.watch(['main.js'], electron.restart);//这里的路径根据你的文件路径来</span><br><span class="line">  gulp.watch(['*.html','assets/**/*.&#123;html,js,css&#125;'], electron.reload);//这里的路径根据你的文件路径来</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在主进程main.js里添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> client = <span class="built_in">require</span>(<span class="string">'electron-connect'</span>).client;</span><br></pre></td></tr></table></figure><p>在每一个渲染进程xx.html页面里都添加上</p><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require(<span class="symbol">'electron</span>-connect').client.create<span class="literal">()</span>;</span><br></pre></td></tr></table></figure><p>之后直接通过以下来启动即可。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gulp watch:electron</span><br></pre></td></tr></table></figure><p>因为是基于nodejs，还有其他多种热更新的方式，这里不多说啦。</p><h1><span id="主进程和渲染进程通信">主进程和渲染进程通信</span></h1><p>主进程就是main.js运行的进程<br>渲染进程即是渲染一个个客户端的前端页面中。<br>主进程和渲染进程之间通信通过Electron ipcRenderer模块，提供了方法，从渲染进程向主进程发送同步或异步消息. 也可以收到主进程的相应的消息。</p><h2><span id="消息监听">消息监听</span></h2><p>ipcRenderer 模块有下列方法来监听事件:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ipcRenderer.on(channel, listener)</span><br><span class="line">channel String</span><br><span class="line">listener Function</span><br></pre></td></tr></table></figure><p>监听 channel, 当有新消息到达，使用 listener(event, args…) 调用 listener .</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ipcRenderer.once(channel, listener)</span><br><span class="line">channel String</span><br><span class="line">listener Function</span><br></pre></td></tr></table></figure><p>为这个事件添加一个一次性 listener 函数.这个 listener 将在下一次有新消息被发送到 channel 的时候被请求调用，之后就被删除了.</p><h2><span id="发送消息">发送消息</span></h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ipcRenderer 模块有如下方法来发送消息:</span><br><span class="line"></span><br><span class="line">ipcRenderer.send(channel[<span class="string">, arg1</span>][<span class="symbol">, arg2</span>][<span class="string">, ...</span>])</span><br><span class="line">channel String</span><br><span class="line">arg (可选)</span><br></pre></td></tr></table></figure><p>通过 channel 向主进程发送异步消息，也可以发送任意参数.参数会被JSON序列化，之后就不会包含函数或原型链.</p><p>主进程通过使用==ipcMain== 模块来监听 channel，从而处理消息.</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ipcRenderer.sendSync(channel[<span class="string">, arg1</span>][<span class="symbol">, arg2</span>][<span class="string">, ...</span>])</span><br><span class="line">channel String</span><br><span class="line">arg (可选)</span><br></pre></td></tr></table></figure><blockquote><p>注意: 发送同步消息将会阻塞整个渲染进程,除非你知道你在做什么，否则就永远不要用它 .</p></blockquote><h2><span id="栗子">栗子</span></h2><p>在main.js中</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const ipcMain = require('electron').ipcMain;</span><br><span class="line">ipcMain.on(<span class="string">'getData-message'</span>, function (event, arg) &#123;  <span class="comment">//主程序监听名为getData-message事件</span></span><br><span class="line">    console.log(arg);//“success” ,arg为渲染进行发送的数据</span><br><span class="line">  event.sender.send('getData-reply', "message received"); //向渲染进程“getData-reply”事件发送数据</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>在渲染进程index.html中</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const ipcRenderer = require('electron').ipcRenderer;</span><br><span class="line">ipcRenderer.send('getData-message'，“success”);//向主进程“getData-message”事件发送数据</span><br><span class="line">ipcRenderer.on(<span class="string">'getData-reply'</span>, function (event, arg) &#123; <span class="comment">//监听名为getData-reply事件</span></span><br><span class="line">console.log(arg);//"message received"</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1><span id="browserwindow的一些设置">BrowserWindow的一些设置</span></h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">new BrowserWindow([options])</span><br></pre></td></tr></table></figure><ul><li>resizable Boolean - 是否可以改变窗口size，默认为 true。</li><li>frame Boolean - 指定 false 来创建一个 无边框 Window. 默认为 true。</li><li>autoHideMenuBar Boolean - 除非点击 Alt，否则隐藏菜单栏.默认为 false</li></ul><h1><span id="设置菜单">设置菜单</span></h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">var</span> template = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="selector-tag">label</span>: <span class="string">'Edit'</span>,</span><br><span class="line">    submenu: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Undo'</span>,</span><br><span class="line">        accelerator: <span class="string">'CmdOrCtrl+Z'</span>,</span><br><span class="line">        role: <span class="string">'undo'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Redo'</span>,</span><br><span class="line">        accelerator: <span class="string">'Shift+CmdOrCtrl+Z'</span>,</span><br><span class="line">        role: <span class="string">'redo'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        type: <span class="string">'separator'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Cut'</span>,</span><br><span class="line">        accelerator: <span class="string">'CmdOrCtrl+X'</span>,</span><br><span class="line">        role: <span class="string">'cut'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Copy'</span>,</span><br><span class="line">        accelerator: <span class="string">'CmdOrCtrl+C'</span>,</span><br><span class="line">        role: <span class="string">'copy'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Paste'</span>,</span><br><span class="line">        accelerator: <span class="string">'CmdOrCtrl+V'</span>,</span><br><span class="line">        role: <span class="string">'paste'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Select All'</span>,</span><br><span class="line">        accelerator: <span class="string">'CmdOrCtrl+A'</span>,</span><br><span class="line">        role: <span class="string">'selectall'</span></span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="selector-tag">label</span>: <span class="string">'View'</span>,</span><br><span class="line">    submenu: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Reload'</span>,</span><br><span class="line">        accelerator: <span class="string">'CmdOrCtrl+R'</span>,</span><br><span class="line">        click: function(item, focusedWindow) &#123;</span><br><span class="line">          <span class="keyword">if</span> (focusedWindow)</span><br><span class="line">            focusedWindow.reload();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Toggle Full Screen'</span>,</span><br><span class="line">        accelerator: (function() &#123;</span><br><span class="line">          <span class="keyword">if</span> (process<span class="selector-class">.platform</span> == <span class="string">'darwin'</span>)</span><br><span class="line">            return 'Ctrl+Command+F';</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">            return 'F11';</span><br><span class="line">        &#125;)(),</span><br><span class="line">        click: function(item, focusedWindow) &#123;</span><br><span class="line">          <span class="keyword">if</span> (focusedWindow)</span><br><span class="line">            focusedWindow.setFullScreen(!focusedWindow.isFullScreen());</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Toggle Developer Tools'</span>,</span><br><span class="line">        accelerator: (function() &#123;</span><br><span class="line">          <span class="keyword">if</span> (process<span class="selector-class">.platform</span> == <span class="string">'darwin'</span>)</span><br><span class="line">            return 'Alt+Command+I';</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">            return 'Ctrl+Shift+I';</span><br><span class="line">        &#125;)(),</span><br><span class="line">        click: function(item, focusedWindow) &#123;</span><br><span class="line">          <span class="keyword">if</span> (focusedWindow)</span><br><span class="line">            focusedWindow.toggleDevTools();</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="selector-tag">label</span>: <span class="string">'Window'</span>,</span><br><span class="line">    role: <span class="string">'window'</span>,</span><br><span class="line">    submenu: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Minimize'</span>,</span><br><span class="line">        accelerator: <span class="string">'CmdOrCtrl+M'</span>,</span><br><span class="line">        role: <span class="string">'minimize'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Close'</span>,</span><br><span class="line">        accelerator: <span class="string">'CmdOrCtrl+W'</span>,</span><br><span class="line">        role: <span class="string">'close'</span></span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="selector-tag">label</span>: <span class="string">'Help'</span>,</span><br><span class="line">    role: <span class="string">'help'</span>,</span><br><span class="line">    submenu: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Learn More'</span>,</span><br><span class="line">        click: function() &#123; require(<span class="string">'electron'</span>)<span class="selector-class">.shell</span>.openExternal(<span class="string">'http://electron.atom.io'</span>) &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (process<span class="selector-class">.platform</span> == <span class="string">'darwin'</span>) &#123;</span><br><span class="line">  var name = require('electron').remote.app.getName();</span><br><span class="line">  template.unshift(&#123;</span><br><span class="line">    <span class="selector-tag">label</span>: name,</span><br><span class="line">    submenu: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'About '</span> + name,</span><br><span class="line">        role: <span class="string">'about'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        type: <span class="string">'separator'</span></span><br><span class="line">      &#125;，</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Show All'</span>,</span><br><span class="line">        role: <span class="string">'unhide'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        type: <span class="string">'separator'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="selector-tag">label</span>: <span class="string">'Quit'</span>,</span><br><span class="line">        accelerator: <span class="string">'Command+Q'</span>,</span><br><span class="line">        click: function() &#123; app.quit(); &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">    ]</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="comment">// Window menu.</span></span><br><span class="line">  template[<span class="number">3</span>]<span class="selector-class">.submenu</span>.push(</span><br><span class="line">    &#123;</span><br><span class="line">      type: <span class="string">'separator'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="selector-tag">label</span>: <span class="string">'Bring All to Front'</span>,</span><br><span class="line">      role: <span class="string">'front'</span></span><br><span class="line">    &#125;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var menu = Menu.buildFromTemplate(template);</span><br><span class="line">Menu.setApplicationMenu(menu);</span><br></pre></td></tr></table></figure><h1><span id="设置任务栏">设置任务栏</span></h1><p>想要在电脑右下方有设置任务栏及图标，需要用到Tray模块。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">const electron = require('electron');</span><br><span class="line">const app = electron.app;</span><br><span class="line">const Menu = electron.Menu;</span><br><span class="line">const Tray = electron.Tray;</span><br><span class="line"></span><br><span class="line">var appIcon = null;</span><br><span class="line">app.on(<span class="string">'ready'</span>, function()&#123;</span><br><span class="line">  appIcon = new Tray('/path/to/my/icon');</span><br><span class="line">  <span class="selector-tag">var</span> contextMenu = Menu.buildFromTemplate([</span><br><span class="line">    &#123; <span class="selector-tag">label</span>: <span class="string">'Item1'</span>, type: <span class="string">'radio'</span>，click:function()&#123; console.log(<span class="string">"任务栏点击事件"</span>)&#125;&#125;,</span><br><span class="line">    &#123; <span class="selector-tag">label</span>: <span class="string">'Item2'</span>, type: <span class="string">'radio'</span> &#125;,</span><br><span class="line">    &#123; <span class="selector-tag">label</span>: <span class="string">'Item3'</span>, type: <span class="string">'radio'</span>, checked: true &#125;,</span><br><span class="line">    &#123; <span class="selector-tag">label</span>: <span class="string">'Item4'</span>, type: <span class="string">'radio'</span> &#125;</span><br><span class="line">  ]);</span><br><span class="line">  appIcon.setToolTip('This is my application.');</span><br><span class="line">  appIcon.setContextMenu(contextMenu);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>参考<br><a href="https://www.w3cschool.cn/electronmanual/" target="_blank" rel="noopener">https://www.w3cschool.cn/electronmanual/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近，用Electron写了一个桌面应用，是一个比较简单的应用，所以用的东西都是最浅的，做一个总结吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="electron" scheme="http://wsyks.github.io/tags/electron/"/>
    
  </entry>
  
  <entry>
    <title>vuejs用户认证实例</title>
    <link href="http://wsyks.github.io/2017/11/30/vuejs%E7%94%A8%E6%88%B7%E8%AE%A4%E8%AF%81%E5%AE%9E%E4%BE%8B/"/>
    <id>http://wsyks.github.io/2017/11/30/vuejs用户认证实例/</id>
    <published>2017-11-30T12:05:56.000Z</published>
    <updated>2018-11-30T13:58:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>在本例子中，使用的请求方法都是使用axios，vuejs的官方推荐。</p><a id="more"></a><h2><span id="安装与使用axios">安装与使用axios</span></h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios</span><br></pre></td></tr></table></figure><p>在main.js（如果你使用的是vue-cli脚手架搭建的项目）中引入</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line">Vue.prototype.$http = axios</span><br></pre></td></tr></table></figure><p>之后使用小栗子即是</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">this.<span class="variable">$http</span>.get(URL).then(response =&gt; &#123;</span><br><span class="line">    <span class="comment">// success callback</span></span><br><span class="line">&#125;, response =&gt; &#123;</span><br><span class="line">    <span class="comment">// error callback</span></span><br><span class="line">&#125;）</span><br></pre></td></tr></table></figure><h2><span id="登录">登录</span></h2><p>在登录部分，登录成功后，将服务器返回的token存在sessionstorage中，当然也可以放在localstorage，或者使用vuex的方式存储token数据和用户信息。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var url = "/api/web/login";</span><br><span class="line">var data=&#123;username:this.username,password:this.password&#125;;</span><br><span class="line">this.<span class="variable">$http</span>(&#123;method:<span class="string">"get"</span>,url:url,auth:data&#125;).then(response =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span>(response.status==<span class="number">200</span>)&#123;</span><br><span class="line">  <span class="comment">// this.$store.state.token=response.data.token;</span></span><br><span class="line">  sessionStorage.token = response.data.token;</span><br><span class="line">  sessionStorage.username = response.data.username;</span><br><span class="line">this.$router.push(this.$route.query.redirect||'/');  //登录成功则跳转到首页</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).catch(function(error)&#123;</span><br><span class="line">       <span class="comment">//error </span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2><span id="路由配置">路由配置</span></h2><p>以前写路由配置的时候即只是如下示例：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Web <span class="keyword">from</span> <span class="string">'@/components/Web'</span></span><br><span class="line"><span class="keyword">import</span> Dashboard <span class="keyword">from</span> <span class="string">'@/components/Dashboard'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line">export <span class="keyword">default</span> <span class="keyword">new</span> Router(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'Web'</span>,</span><br><span class="line">      component: Web,</span><br><span class="line">      children:[</span><br><span class="line">    &#123;</span><br><span class="line">    path: <span class="string">"/"</span>, name: <span class="string">'Dashboard'</span>, component: Dashboard</span><br><span class="line">&#125;</span><br><span class="line">  ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>当打包构建应用时，Javascript 包会变得非常大，影响页面加载。如果我们能把不同路由对应的组件分割成不同的代码块，然后当路由被访问的时候才加载对应组件，这样就更加高效了。这就是懒加载。<br>改成如下的方式即可实现</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">import Vue from <span class="string">'vue'</span></span><br><span class="line">import Router from <span class="string">'vue-router'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line">const router = new Router(&#123;</span><br><span class="line">    routes: [</span><br><span class="line">    &#123;</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'Web'</span>,</span><br><span class="line">      component(resolve) &#123;</span><br><span class="line">            require.ensure([<span class="string">'@/components/Web.vue'</span>], () =&gt; &#123;</span><br><span class="line">              resolve(require('@/components/Web.vue'));</span><br><span class="line">            &#125;);</span><br><span class="line">         &#125;,</span><br><span class="line">      meta: &#123;</span><br><span class="line">        requireAuth: true</span><br><span class="line">      &#125;,</span><br><span class="line">      children:[</span><br><span class="line">       &#123;</span><br><span class="line">         path:<span class="string">"/"</span>,</span><br><span class="line">         name:<span class="string">'Dashboard'</span>,</span><br><span class="line">         component(resolve) &#123;</span><br><span class="line">            require.ensure([<span class="string">'@/components/Dashboard.vue'</span>], () =&gt; &#123;</span><br><span class="line">              resolve(require('@/components/Dashboard.vue'));</span><br><span class="line">            &#125;);</span><br><span class="line">         &#125;,</span><br><span class="line">         meta: &#123;</span><br><span class="line">          requireAuth: true</span><br><span class="line">        &#125;</span><br><span class="line">       &#125;，</span><br><span class="line">    &#123;</span><br><span class="line">     path:<span class="string">'/login'</span>,</span><br><span class="line">     name:<span class="string">'Login'</span>,</span><br><span class="line">     component(resolve) &#123;</span><br><span class="line">            require.ensure([<span class="string">'@/components/Login.vue'</span>], () =&gt; &#123;</span><br><span class="line">              resolve(require('@/components/Login.vue'));</span><br><span class="line">            &#125;);</span><br><span class="line">         &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>同时，还加入了路由元信息，配置了meta-requireAuth字段，来判断在这个路由中是否需要身份认证<br>利用&quot;导航守卫“来检查该字段</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">router.beforeEach((to, <span class="keyword">from</span>, <span class="keyword">next</span>) =&gt; &#123;</span><br><span class="line">  let token = sessionStorage.token;<span class="comment">//从sessionstorage中获取，或者利用localstorage和vuex</span></span><br><span class="line">  <span class="keyword">if</span>(to.meta.requireAuth) &#123; <span class="comment">//如果该路由需要登录</span></span><br><span class="line">    <span class="keyword">if</span>(token) &#123;  <span class="comment">//且token是存在的，则可以进入该路由</span></span><br><span class="line">      <span class="keyword">next</span>()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">next</span>(&#123;   </span><br><span class="line">        path: <span class="string">'/login'</span>, <span class="comment">//否则跳转到登录页面，</span></span><br><span class="line">        query: &#123; redirect: to.fullPath &#125;<span class="comment">//将跳转的路由path作为参数，登录成功后跳转到该路由</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">next</span>()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">export <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><blockquote><p>[tip:]</p></blockquote><p>每个守卫方法接收三个参数：</p><ul><li>to: Route: 即将要进入的目标 路由对象</li><li>from: Route: 当前导航正要离开的路由</li><li>next: Function: 一定要调用该方法来 resolve 这个钩子。执行效果依赖 next 方法的调用参数。<ol><li>next(): 进行管道中的下一个钩子。如果全部钩子执行完了，则导航的状态就是 confirmed （确认的）。</li><li>next(false): 中断当前的导航。如果浏览器的 URL 改变了（可能是用户手动或者浏览器后退按钮），那么 URL 地址会重置到 from 路由对应的地址。</li><li>next(’/’) 或者 next({ path: ‘/’ }): 跳转到一个不同的地址。当前的导航被中断，然后进行一个新的导航。</li><li>next(error): (2.4.0+) 如果传入 next 的参数是一个 Error 实例，则导航会被终止且该错误会被传递给 router.onError() 注册过的回调。</li></ol></li></ul><h2><span id="axios拦截器">axios拦截器</span></h2><p>在做了以上情况之后，你只是做到了表面上的前端路由控制，接下来我们使用axios拦截器实现以下功能：<br>1.登陆后，为了保持认证的请求，在每次请求的头部加上登录成功时返回的token信息<br>2.发送不合法的请求或者在没有认证的情况下发送请求后，如果服务器返回的状态是401（Unauthorized 未授权）或者403（Forbidden 拒绝），则跳转到登录页面。</p><p>发起每次请求时，都在头部加上token字段，让服务器验证token是否有效，如果后端接口返回 401 或者403 ，则让用户重新登录，并清除token信息。</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">axios.interceptors.request.<span class="keyword">use</span>(</span><br><span class="line">config=&gt;&#123;</span><br><span class="line"><span class="keyword">if</span>(sessionStorage.<span class="keyword">token</span>)&#123;</span><br><span class="line">config.auth = &#123;username:sessionStorage.<span class="keyword">token</span>,password:<span class="string">""</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> config;</span><br><span class="line">&#125;,</span><br><span class="line"><span class="keyword">err</span>=&gt;&#123;</span><br><span class="line"><span class="keyword">return</span> Promise.reject(<span class="keyword">err</span>);</span><br><span class="line">&#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>在这里，我是将token信息作为username，password置为空，赋予axios的auth字段，这样会直接进行base64编码作为基础认证传给服务器。<br>当然也可以使用以下方式将token赋予请求头部的Authorization字段返回给服务器。</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">config.headers.Authorization = `token $&#123;sessionStoreage.token&#125;`;</span><br></pre></td></tr></table></figure><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">axios.interceptors.response.<span class="keyword">use</span>(</span><br><span class="line">    response =&gt; &#123;</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">error</span> =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">error</span>.response) &#123;</span><br><span class="line">            switch (<span class="keyword">error</span>.response.status) &#123;</span><br><span class="line">                case 401:</span><br><span class="line">                    <span class="comment">// 返回 401 清除token信息并跳转到登录页面</span></span><br><span class="line">                    sessionStorage.<span class="keyword">token</span>=<span class="string">""</span>;</span><br><span class="line">                    router.<span class="keyword">replace</span>(&#123;</span><br><span class="line">                        path: '/login',</span><br><span class="line">                        <span class="keyword">query</span>: &#123;redirect: router.currentRoute.fullPath&#125;</span><br><span class="line">                    &#125;);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                case 403:</span><br><span class="line">                    <span class="comment">// 返回 401 清除token信息并跳转到登录页面</span></span><br><span class="line">                    sessionStorage.<span class="keyword">token</span>=<span class="string">""</span>;</span><br><span class="line">                    router.<span class="keyword">replace</span>(&#123;</span><br><span class="line">                        path: '/login',</span><br><span class="line">                        <span class="keyword">query</span>: &#123;redirect: router.currentRoute.fullPath&#125;</span><br><span class="line">                    &#125;)</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Promise.reject(<span class="keyword">error</span>.response.data)   <span class="comment">// 返回接口返回的错误信息</span></span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>至此，整个用户认证实例即结束。<br>登出的时候，只要将保存在storage里的token和用户信息清除，跳转到登录页或者不需认证的首页即可。</p><blockquote><p>参考：<br><a href="https://router.vuejs.org/zh-cn/advanced/navigation-guards.html" target="_blank" rel="noopener">https://router.vuejs.org/zh-cn/advanced/navigation-guards.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在本例子中，使用的请求方法都是使用axios，vuejs的官方推荐。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Vue.js" scheme="http://wsyks.github.io/tags/Vue-js/"/>
    
  </entry>
  
  <entry>
    <title>一步步实现微信小程序——仿豆瓣电影</title>
    <link href="http://wsyks.github.io/2017/09/03/%E4%B8%80%E6%AD%A5%E6%AD%A5%E5%AE%9E%E7%8E%B0%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E2%80%94%E2%80%94%E4%BB%BF%E8%B1%86%E7%93%A3%E7%94%B5%E5%BD%B1/"/>
    <id>http://wsyks.github.io/2017/09/03/一步步实现微信小程序——仿豆瓣电影/</id>
    <published>2017-09-03T09:21:56.000Z</published>
    <updated>2018-11-30T14:05:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近不想写论文，就想捣鼓点新东西吧，就边看官方文档，花了3天时间写了一个简单的仿豆瓣电影的微信小程序，给大家分享一下教程吧。</p><a id="more"></a><h1><span id="源码amp效果图">源码&amp;效果图</span></h1><p>源码点击<a href="https://github.com/wsyks/douban-film" target="_blank" rel="noopener">这里</a>，欢迎star</p><p>运行方法：</p><ul><li>下载微信web开发者工具</li><li>新建项目，项目目录为代码存放目录</li><li>点击开发者工具中的编译即可在模拟器里看到</li></ul><p>效果图如下<br><img src="http://7xsgg1.com1.z0.glb.clouddn.com/douban1.gif" alt="效果1"><img src="http://7xsgg1.com1.z0.glb.clouddn.com/douban3.gif" alt="效果2"><br><img src="http://7xsgg1.com1.z0.glb.clouddn.com/douban2.gif" alt="效果3"><img src="http://7xsgg1.com1.z0.glb.clouddn.com/douban4.gif" alt="效果4"></p><h1><span id="开发环境与项目简介">开发环境与项目简介</span></h1><p>微信提供了一个微信开发者工具，可以完成小程序的 API 和页面的开发调试、代码查看和编辑、小程序预览和发布等功能。<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/devtools/download.html" target="_blank" rel="noopener">下载地址</a><br>下载后，打开该工具，选择代码目录和申请的AppID，勾选quickStart选项，这样会创建几个基础页面。</p><img src="/2017/09/03/一步步实现微信小程序——仿豆瓣电影/5.png"><p>正好在写代码的第二天，微信开发者工具就全新改版，比原来好多了，原来的console调试界面与编辑代码不在同一个页面，十分麻烦，现在就像平时前端调试一样，调试界面与代码编辑页面在同一个界面，方便多了。</p><img src="/2017/09/03/一步步实现微信小程序——仿豆瓣电影/2.png"><h2><span id="项目代码结构">项目代码结构</span></h2><img src="/2017/09/03/一步步实现微信小程序——仿豆瓣电影/4.png"><p>这里说一下，在新建目录后，可以选择添加page,js,wxml,wxss,json文件，如果直接添加page文件的话，会直接在该目录下生成与目录相同名字的四个不同后缀文件的组成，如：index.js、index.wxml、index.wxss、index.json。.js后缀的文件是脚本文件，.json后缀的文件是配置文件，.wxss后缀的是样式表文件，.wxml后缀的文件是页面结构文件。</p><h2><span id="豆瓣电影api">豆瓣电影API</span></h2><ul><li>【获取正在上映电影】<br><a href="https://api.douban.com/v2/movie/in_theaters" target="_blank" rel="noopener">https://api.douban.com/v2/movie/in_theaters</a></li><li>【获取豆瓣TOP250电影】<br><a href="https://api.douban.com/v2/movie/top250" target="_blank" rel="noopener">https://api.douban.com/v2/movie/top250</a></li><li>【 获取即将上映电影】<br><a href="https://api.douban.com/v2/movie/coming_soon" target="_blank" rel="noopener">https://api.douban.com/v2/movie/coming_soon</a></li><li>【获取具体某一电影信息】<br><a href="https://api.douban.com/v2/movie/subject/:id" target="_blank" rel="noopener">https://api.douban.com/v2/movie/subject/:id</a><br>详细数据情况可看<br><a href="https://developers.douban.com/wiki/?title=movie_v2" target="_blank" rel="noopener">https://developers.douban.com/wiki/?title=movie_v2</a></li></ul><p>其实前三个API返回的数据都是一致的，只是返回的电影类型数据不一样而已，所以在<strong>list</strong>页面，我们只要传入不同的类型即可。在电影列表页和首页，都有展示电影的基础信息（海报，名字，评分），所以可以把这个部分拿出来做一个模板公用。<br>大体的思路就是这样，比较简单。</p><h1><span id="配置小程序窗口和导航栏">配置小程序窗口和导航栏</span></h1><p>在根目录下的app.json文件中配置小程序的窗口样式和导航栏</p><img src="/2017/09/03/一步步实现微信小程序——仿豆瓣电影/6.png"><p>属性信息如图，来自<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/config.html" target="_blank" rel="noopener">官网</a></p> <img src="/2017/09/03/一步步实现微信小程序——仿豆瓣电影/config1.png"> <img src="/2017/09/03/一步步实现微信小程序——仿豆瓣电影/config2.png"><p>点击上方的“编译”，就可以看到效果</p>  <img src="/2017/09/03/一步步实现微信小程序——仿豆瓣电影/res1.png"><p>我们在调试具体某一个页面的时候，可以添加面板上方中间的&quot;添加编译模式&quot;，填写相关参数，这样就不用从首页进去调试了。</p><img src="/2017/09/03/一步步实现微信小程序——仿豆瓣电影/3.png"><h1><span id="具体代码编写">具体代码编写</span></h1><p>这里只讲一下首页代码的情况，其他页面用到的属性基本雷同。这里不介绍小程序的使用语法，请先在<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/framework/MINA.html" target="_blank" rel="noopener">官网上</a>浏览个大概</p><h2><span id="wxshowloading">wx.showLoading()</span></h2><p>在最开始进入页面时，还没加载完数据时，我们想要有一个loading效果，可直接使用小程序的api<br>wx.showLoading(OBJECT)<br>显示 loading 提示框, 需主动调用 wx.hideLoading 才能关闭提示框</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">onLoad: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    wx.showLoading(&#123;</span><br><span class="line">      title: <span class="string">'全力加载中...'</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>加载完，需要关闭时，就只需要调用即可<code>wx.hideLoading();</code><br>onLoad 表示监听页面加载</p><h2><span id="wxrequest">wx.request()</span></h2><p>请求数据调用wx.request();<br>详细属性介绍点击<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/api/network-request.html#wxrequestobject" target="_blank" rel="noopener">这里</a></p><p>因为请求电影列表在list和index页面都需要用到，所以我在app.js作为一个全局的方法来写</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">getFilminfo:function(pageType,start,count,cb) &#123;<span class="comment">//电影列表类型，开始数据下标，请求总数，callback函数</span></span><br><span class="line">    var that = this;</span><br><span class="line"></span><br><span class="line">    wx.request(&#123;</span><br><span class="line">      url: that<span class="selector-class">.globalData</span><span class="selector-class">.basicUrl</span> +<span class="string">"/"</span> + pageType + <span class="string">'?start='</span> + start + <span class="string">'&amp;count='</span> + count,</span><br><span class="line">      <span class="comment">// url:url,</span></span><br><span class="line">      <span class="selector-tag">header</span>: &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"json"</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      success: function (res) &#123;</span><br><span class="line">        cb(res);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;) </span><br><span class="line">  &#125;,</span><br><span class="line">  globalData: &#123;</span><br><span class="line">    userInfo: null,</span><br><span class="line">    basicUrl:<span class="string">"https://api.douban.com/v2/movie"</span>,</span><br><span class="line">    pageTypelist: &#123;<span class="string">"coming_soon"</span>:<span class="string">"即将上映"</span>,<span class="string">"in_theaters"</span>:<span class="string">"正在热映"</span>,<span class="string">"top250"</span>:<span class="string">"TOP250电影"</span>&#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>然而，在调用接口的时候发现了这样的错误</p><img src="/2017/09/03/一步步实现微信小程序——仿豆瓣电影/api1.png"><p>原因是我在开发配置里，没有豆瓣api的域名添加到request合法域名里，<br>所以只要在配置里加上需要的即可</p><img src="/2017/09/03/一步步实现微信小程序——仿豆瓣电影/api2.png"><img src="/2017/09/03/一步步实现微信小程序——仿豆瓣电影/api3.png"><p>所以在index.js中，调用这个全局方法如下：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取应用实例</span></span><br><span class="line"><span class="selector-tag">var</span> app = getApp()</span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">Page(&#123;</span><br><span class="line">  data: &#123;</span><br><span class="line">    motto: <span class="string">'Hello World'</span>,</span><br><span class="line">    userInfo: &#123;&#125;,</span><br><span class="line">    films:[&#123;&#125;,&#123;&#125;,&#123;&#125;]</span><br><span class="line">  &#125;,</span><br><span class="line">  onLoad: function () &#123;</span><br><span class="line">    wx.showLoading(&#123;</span><br><span class="line">      title: <span class="string">'全力加载中...'</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">    console.log(<span class="string">'onLoad'</span>)</span><br><span class="line">    var that = this;</span><br><span class="line">    var typelist = ["in_theaters","coming_soon","top250"];</span><br><span class="line">    var titlelist = ["正在热映","即将上映", "TOP250电影"];</span><br><span class="line">    for(let i = 0;i&lt;typelist.length;i++)&#123;</span><br><span class="line">      var type = typelist[i];</span><br><span class="line">      app.getFilminfo(type, <span class="number">0</span>, <span class="number">8</span>, function (res) &#123;</span><br><span class="line">        wx.hideLoading();</span><br><span class="line">        var data = res.data;</span><br><span class="line">        data<span class="selector-class">.subjects</span>.map(function (item) &#123;</span><br><span class="line">          <span class="keyword">if</span> (item<span class="selector-class">.title</span><span class="selector-class">.length</span> &gt; <span class="number">8</span>) &#123;</span><br><span class="line">            item.title = item.title.slice(0, 7) + "...";</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (item<span class="selector-class">.rating</span>.average&gt;=<span class="number">9.5</span>)&#123;</span><br><span class="line">            item.rating.star = "star10";</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            item.rating.star = "star" + Math.round(item.rating.average);</span><br><span class="line">          &#125;</span><br><span class="line">          console.log(item.rating.star);</span><br><span class="line">        &#125;)</span><br><span class="line">        that.data.films[i] = &#123;title:titlelist[i],data:data.subjects,type:typelist[i]&#125;;</span><br><span class="line">        that.setData(&#123;</span><br><span class="line">          films: that<span class="selector-class">.data</span>.films</span><br><span class="line">        &#125;);</span><br><span class="line">        console.log(that.data.films);</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>我们通过“更多”按钮跳转到对应的电影列表list页面，所以需要绑定事件</p><p>在index.wxml中，</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">button</span> bindtap=<span class="string">"toView"</span> data-type=<span class="string">"&#123;&#123;filminfo.type&#125;&#125;"</span> class=<span class="string">"more-btn"</span> plain=<span class="string">"false"</span>&gt;更多&gt;&lt;/button&gt;</span><br></pre></td></tr></table></figure><p>bindtap就是对应是事件名字，同时我们需要设置data-type属性，属性值即是电影列表类型<br>在index.js中</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">toView: function(e) &#123;</span><br><span class="line">    var temp = e.currentTarget.dataset;//获取当前组件上由data-开头的自定义属性组成的集合</span><br><span class="line">    wx.navigateTo(&#123;</span><br><span class="line">      url: <span class="string">'../list/list?type='</span> + temp.type<span class="comment">//temp.type即是当时data-type属性值</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>wx.navigateTo(）就是路由跳转的api</p><h2><span id="模板">模板</span></h2><p>因为电影的基础信息展示在多个页面中都有用到，我们单独提出来写个电影预览模板</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template name=<span class="string">"movieThumb"</span>&gt;  </span><br><span class="line">&lt;view wx:key=<span class="string">"id"</span> class=<span class="string">"film-item"</span> data-title=<span class="string">"&#123;&#123;title&#125;&#125;"</span> data-id=<span class="string">"&#123;&#123;id&#125;&#125;"</span>  bindtap=<span class="string">"detail"</span>&gt;</span><br><span class="line">  &lt;image src=<span class="string">"&#123;&#123;images.medium&#125;&#125;"</span> alt=<span class="string">"&#123;&#123;alt&#125;&#125;"</span> class=<span class="string">"film-image"</span>&gt;&lt;/image&gt;  </span><br><span class="line">  &lt;text class=<span class="string">"film-title"</span>&gt;&#123;&#123;title&#125;&#125;&lt;/text&gt;  </span><br><span class="line">  &lt;view class=<span class="string">"film-rate"</span> wx:<span class="keyword">if</span>=<span class="string">"&#123;&#123;rating.average!=0&#125;&#125;"</span>&gt;</span><br><span class="line">    &lt;view class=<span class="string">"film-star &#123;&#123;rating.star&#125;&#125;"</span>&gt;&lt;/view&gt;</span><br><span class="line">    &lt;text&gt;&#123;&#123;rating.average&#125;&#125;&lt;/text&gt;</span><br><span class="line">  &lt;/view&gt;</span><br><span class="line">  &lt;text class=<span class="string">"film-rate"</span> wx:<span class="keyword">else</span>&gt;暂无评分&lt;/text&gt;  </span><br><span class="line">&lt;/view&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>模板名字设置为“movieThumb”</p><p>例如在首页中有用到该模块，那在index.wxml中如下调用即可</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;import src=<span class="string">"../template/movieThumb.wxml"</span> /&gt;</span><br><span class="line"> </span><br><span class="line"> &lt;scroll-view scroll-x=<span class="string">"true"</span> class=<span class="string">"filmlist"</span>&gt;</span><br><span class="line">        &lt;template is=<span class="string">"movieThumb"</span> wx:<span class="keyword">for</span>-items=<span class="string">"&#123;&#123;filminfo.data&#125;&#125;"</span>  wx:<span class="keyword">for</span>-item=<span class="string">"film"</span> wx:key=<span class="string">"id"</span> data=<span class="string">"&#123;&#123;...film&#125;&#125;"</span>&gt;   </span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">&lt;/scroll-view&gt;</span><br></pre></td></tr></table></figure><p>先写到这里吧，其他代码看<a href="https://github.com/wsyks/douban-film" target="_blank" rel="noopener">github</a>上的即可，具体还是要多看文档，写个项目练练，就很容易上手啦</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近不想写论文，就想捣鼓点新东西吧，就边看官方文档，花了3天时间写了一个简单的仿豆瓣电影的微信小程序，给大家分享一下教程吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="微信小程序" scheme="http://wsyks.github.io/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>谈谈HTML5本地存储</title>
    <link href="http://wsyks.github.io/2017/08/15/%E8%B0%88%E8%B0%88HTML5%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8/"/>
    <id>http://wsyks.github.io/2017/08/15/谈谈HTML5本地存储/</id>
    <published>2017-08-15T14:07:29.000Z</published>
    <updated>2018-12-01T01:58:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>这次在写项目的登录认证过程中，碰到了一点小问题，是关于浏览器存储方面的东西，就仔细查了资料，总结一下。</p><a id="more"></a><h1><span id="浏览器本地存储概述">浏览器本地存储概述</span></h1><h2><span id="简介">简介</span></h2><h3><span id="cookie">cookie</span></h3><p>cookie是指某些网站为了辨别用户身份、进行 session 跟踪而储存在用户本地终端上的数据（通常经过加密）。</p><h3><span id="webstorage">webStorage</span></h3><p>webStorage是HTML5中本地存储的解决方案之一，包括sessionStorag和localStorage，两者差別就差在生命周期的不同而已。</p><h3><span id="websql和indexeddb">websql和indexeddb</span></h3><p>IndexedDB 是一种低级API，用于客户端存储大量结构化数据。该API使用索引来实现对该数据的高性能搜索。webStorage 对于存储较少量的数据很有用，但对于存储更大量的结构化数据来说，这种方法不太有用。IndexedDB提供了一个解决方案。</p><p>websql是早期的存储标准，目前已经不再维护，转向indexeddb，不过websql的兼容性更好。不过indexeddb是未来，所以接下来主要讲indexeddb</p><h2><span id="四者对比">四者对比</span></h2><table><thead><tr><th>类型</th><th>生命周期</th><th>存储大小</th><th>与服务器通信</th><th>作用域</th><th>使用场景</th></tr></thead><tbody><tr><td>Cookie</td><td>一般由服务器生成，可设置过期时间，默认是关闭浏览器后失效</td><td>4k左右</td><td>可每次携带在http头部中，但保存过多数据会带来性能问题</td><td>可通过.setDomain设置主域名共享</td><td>不建议在cookie里存储数据，必要时存储同步访问页面时必须要被带到服务端的信息，例如网站的用户登录信息</td></tr><tr><td>localStorage</td><td>永久保存，除非被清除</td><td>5m左右</td><td>只能存储在浏览器端</td><td>子域名之间相互独立</td><td>存储用户的一些状态和数据，缓解服务器压力</td></tr><tr><td>sessionStorage</td><td>仅存在当前标签页下，关闭浏览器或者新建标签页都为空</td><td>5m左右</td><td>只能存储在浏览器端</td><td>不同tab之间无法共享</td><td>建议存储一些当前页面刷新需要存储，且不需要在tab关闭时候留下的信息，可根据这个来判断用户是否刷新进入，恢复音乐视频播放进度等</td></tr><tr><td>indexeddb</td><td>永久保存，除非被清除</td><td>一个单独的数据库没有大小限制，不过可能限制每个Indexeddb数据库的大小，例如firefox在用户界面上只会针对存储超过 50 MB 大小的 BLOB（二进制大对象）请求权限，总体基本没有大小限制</td><td>只能存储在浏览器端</td><td>子域名之间相互独立</td><td>离线应用或webapp可以考虑使用indexeddb或者websql中存取数据</td></tr></tbody></table><blockquote><p>【tip】sessionStorage只能在一个标签页下共享，即如果你从当前标签页下新打开一个该网页的页面，sessionStorage数据也是清空的。不过如果你恢复关闭的页面的话，在chrome和firefox下sessionStorage也会被恢复，不过safari不会。</p></blockquote><h2><span id="webstorage和indexeddb的兼容性">webStorage和indexeddb的兼容性</span></h2><h3><span id="webstorage兼容性">webStorage兼容性</span></h3><table><thead><tr><th></th><th>Chrome</th><th>Firefox</th><th>IE</th><th>Opera</th><th>Safari</th></tr></thead><tbody><tr><td>localStorage</td><td>4</td><td>3.5</td><td>8</td><td>10.50</td><td>4</td></tr><tr><td>sessionStorage</td><td>5</td><td>2</td><td>8</td><td>10.50</td><td>4</td></tr></tbody></table><p>基本浏览器都是支持的</p><h3><span id="indexeddb兼容性">indexeddb兼容性</span></h3><table><thead><tr><th></th><th>Chrome</th><th>Firefox</th><th>IE</th><th>Opera</th><th>Safari</th></tr></thead><tbody><tr><td>l异步 API</td><td>12 【webkit 】</td><td>16.0 (16.0)     4.0 (2.0)【 moz】</td><td>10 【ms】</td><td>未实现</td><td>未实现</td></tr><tr><td>同步 API</td><td>未实现</td><td>未实现</td><td>未实现</td><td>未实现</td><td>未实现</td></tr></tbody></table><p>目前兼容性较差</p><h1><span id="webstorage-api">webStorage API</span></h1><p>localStorage和sessionStorage的用法是一样的，下面展示sessionStorage的使用例子。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 保存数据到sessionStorage</span></span><br><span class="line">sessionStorage.setItem('key', 'value');</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从sessionStorage获取数据</span></span><br><span class="line">var data = sessionStorage.getItem('key');</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从sessionStorage删除保存的数据</span></span><br><span class="line">sessionStorage.removeItem('key');</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从sessionStorage删除所有保存的数据</span></span><br><span class="line">sessionStorage.<span class="attribute">clear</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//枚举sessionStorage的方法</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">for</span><span class="params">(var i=<span class="number">0</span>;i&lt;sessionStorage.length;i++)</span></span>&#123;</span><br><span class="line">     var key = sessionStorage.key(i);</span><br><span class="line">     var value =sessionStorage.getItem(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，你也可以直接用对象的赋值方式来设置</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sessionStorage[<span class="string">'colorSetting'</span>] = <span class="string">'#a4509b'</span>;</span><br><span class="line">sessionStorage.setItem(<span class="string">'colorSetting'</span>, <span class="string">'#a4509b'</span>);</span><br></pre></td></tr></table></figure><p>不过，官方建议只用webStorage API(getItem, removeItem, key, length),来避免使用对象键值存储的一些缺陷，缺陷详情请点击<a href="http://2ality.com/2012/01/objects-as-maps.html" target="_blank" rel="noopener">这里</a></p><h2><span id="storage事件">storage事件</span></h2><p>webStorage还有storage事件。当storage发生改变，storage事件就会被触发。<br>这里的的条件是数据发生了变化，如果当前的存储区域是空的，即使再调用clear()也不会触发事件。或者你通过setItem()来设置一个与现有值相同的值，事件也是不会触发的。</p><h3><span id="storage-属性">storage 属性</span></h3><table><thead><tr><th>属性名</th><th>描述</th></tr></thead><tbody><tr><td>key</td><td>代表属性名发生变化.当被clear()方法清除之后所有属性名变为null. Read only（只读）.</td></tr><tr><td>newValue</td><td>新添加进的值.当被clear()方法执行过或者被属性名被删除，值会成为null Read only（只读）.</td></tr><tr><td>oldValue</td><td>原始值.被clear()方法执行过则变为null，或者被新值取代。 Read only（只读）.</td></tr><tr><td>storageArea</td><td>被操作的storage对象. Read only（只读）.</td></tr><tr><td>url</td><td>key发生改变的对象所对应的文档的URL地址.。 Read only（只读）.</td></tr></tbody></table><p>下面介绍多标签页面使用sessionStorage时会有使用栗子。</p><h1><span id="多标签页面使用sessionstorage">多标签页面使用sessionStorage</span></h1><p>在最近使用vuejs写完全前后端分离的项目时，在做登录认证的时候，在想到底怎么存储用户认证信息。</p><p>因为系统安全要求等级比较高，要求用户关闭标签页的时候会话立刻到期，使用cookie来保存敏感的token就不太合适了。如果使用localstorage，页面关闭后localstorage数据还在，也不太满足要求。<br>想着只能使用sessionStorage。</p><p>不过尴尬的是，使用sessionStorage是无法再多标签页面共享的。每次打开新标签页，就会跳转到登录页面，用户体验不太友好，查了一下资料，看到一博客是翻译了一外国小哥使用storage事件实现跨标签页共享sessionStorage的文章，学习了，点击<a href="http://blog.kazaff.me/2016/09/09/%E8%AF%91-%E5%9C%A8%E5%A4%9A%E4%B8%AA%E6%A0%87%E7%AD%BE%E9%A1%B5%E4%B9%8B%E9%97%B4%E5%85%B1%E4%BA%ABsessionStorage/?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">这里看该博客</a>。</p><p>简单来讲就是，如果新标签页如果没有sessionStorage数据，就会触发一个localstorage修改事件，那么在已存在的标签里收到这个事件后，就会将当前页的sessionStorage数据保存在localstorage中，但是马上移除。但是在新标签页里会监听到该事件，可以获取到这个sessionStorage数据，那这样就保证了新标签页也能获取sessionStorage，也保证localstorage中不存在token信息。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!sessionStorage.length) &#123;</span><br><span class="line"><span class="comment">// 如果当前页没有sessionStorage数据，就触发一个事件。</span></span><br><span class="line">localStorage.setItem(<span class="string">'getSessionStorage'</span>, <span class="built_in">Date</span>.now());</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'storage'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//console.log('storage event', event);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (event.key == <span class="string">'getSessionStorage'</span>) &#123;</span><br><span class="line"><span class="comment">// 已存在的标签页收到该事件后，讲sessionStorage数据存到localstorage中，并马上移除。</span></span><br><span class="line"></span><br><span class="line">localStorage.setItem(<span class="string">'sessionStorage'</span>, <span class="built_in">JSON</span>.stringify(sessionStorage));</span><br><span class="line">localStorage.removeItem(<span class="string">'sessionStorage'</span>);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (event.key == <span class="string">'sessionStorage'</span> &amp;&amp; !sessionStorage.length) &#123;</span><br><span class="line"><span class="comment">// 新标签页会在这里监听到事件，通过newValue这个属性获取当时存储在localstorage的sessionStorage数据</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> data = <span class="built_in">JSON</span>.parse(event.newValue),value;</span><br><span class="line"><span class="built_in">console</span>.log(data,<span class="string">"111"</span>);</span><br><span class="line"><span class="keyword">for</span> (key <span class="keyword">in</span> data) &#123;</span><br><span class="line">sessionStorage.setItem(key, data[key]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h1><span id="indexeddb">IndexedDB</span></h1><p>用法不像sessionStorage那么简单，不过以下两篇文章把基本indexeddb用法都讲的比较清楚了。就不额外做整理了。</p><blockquote><p><a href="http://www.cnblogs.com/dolphinX/p/3415761.html" target="_blank" rel="noopener">HTML5本地存储——IndexedDB（一：基本使用）</a><br><a href="http://www.cnblogs.com/dolphinX/p/3416889.html" target="_blank" rel="noopener">HTML5本地存储——IndexedDB（二：索引）</a></p></blockquote><p>【参考】<br><a href="http://blog.kazaff.me/2016/09/09/%E8%AF%91-%E5%9C%A8%E5%A4%9A%E4%B8%AA%E6%A0%87%E7%AD%BE%E9%A1%B5%E4%B9%8B%E9%97%B4%E5%85%B1%E4%BA%ABsessionStorage/?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="noopener">http://blog.kazaff.me/2016/09/09/译-在多个标签页之间共享sessionStorage/?utm_source=tuicool&amp;utm_medium=referral</a><br><a href="https://blog.guya.net/2015/06/12/sharing-sessionstorage-between-tabs-for-secure-multi-tab-authentication/" target="_blank" rel="noopener">https://blog.guya.net/2015/06/12/sharing-sessionstorage-between-tabs-for-secure-multi-tab-authentication/</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/sessionStorage" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/API/Window/sessionStorage</a><br><a href="https://segmentfault.com/a/1190000005927232#articleHeader3" target="_blank" rel="noopener">https://segmentfault.com/a/1190000005927232#articleHeader3</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这次在写项目的登录认证过程中，碰到了一点小问题，是关于浏览器存储方面的东西，就仔细查了资料，总结一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="html5" scheme="http://wsyks.github.io/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>阿里巴巴iconfont正确的使用姿势</title>
    <link href="http://wsyks.github.io/2017/07/27/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4iconfont%E6%AD%A3%E7%A1%AE%E7%9A%84%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF/"/>
    <id>http://wsyks.github.io/2017/07/27/阿里巴巴iconfont正确的使用姿势/</id>
    <published>2017-07-27T12:35:48.000Z</published>
    <updated>2018-12-01T02:07:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>以前一直用的是fontawesome字体，一直也就用它，觉得还比较齐全，偶尔有需要用到其他图标的时候，就会用阿里巴巴iconfont，在上面选择一个合适的图标下载一个png或者svg格式，如下图，单独引入也就是了。今天好好看了一下，发现以前真的是小看了这个字体库。</p><a id="more"></a><img src="/2017/07/27/阿里巴巴iconfont正确的使用姿势/6.png"><p>平时都是一个个下，如果要用一批里面的字体该如何做呢？follow me!</p><h2><span id="下载">下载</span></h2><p>进入<a href="http://www.iconfont.cn" target="_blank" rel="noopener">官网</a>，选择你需要的图标，“添加入库”</p><img src="/2017/07/27/阿里巴巴iconfont正确的使用姿势/1.png"><p>选择完毕后，点击上方的购物车图标</p><img src="/2017/07/27/阿里巴巴iconfont正确的使用姿势/2.png"><p>再点击“下载代码”即可</p><img src="/2017/07/27/阿里巴巴iconfont正确的使用姿势/3.png"><p>下载下来的如图</p><img src="/2017/07/27/阿里巴巴iconfont正确的使用姿势/4.png"><h2><span id="使用">使用</span></h2><p>其实下载的文件中包含了那个demo html文件，分别介绍了三种使用方式，阅读即可明白使用方法，讲的很清楚。</p><ul><li>symbol引用 ：支持ie9+，可以使用彩色图标</li><li>font-class 引用 ：兼容性不错，支持ie8+，书写直观（这点很不错），不过本质还是字体，所以只能是单色图标，推荐</li><li>unicode 引用 ：兼容性最好（支持ie6+）,其他都比不上font-class。</li></ul><p>这里还是贴一下使用方式吧</p><h3><span id="font-class引用">font-class引用</span></h3><p>使用步骤如下：</p><p>第一步：引入项目下面生成的fontclass代码：</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link <span class="attr">rel="stylesheet"</span> <span class="attr">type="text/css"</span> <span class="attr">href="./iconfont.css"&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里对应的font文件还是要和css放在同一目录</p></blockquote><p>第二步：挑选相应图标并获取类名，应用于页面：</p><p><i class="iconfont icon-xxx"></i></p><h3><span id="symbol引用">symbol引用</span></h3><p>使用步骤如下：</p><p>第一步：引入项目下面生成的symbol代码：</p><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./iconfont.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>第二步：加入通用css代码（引入一次就行）：</p><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span></span><br><span class="line"><span class="xml">.icon &#123;</span></span><br><span class="line"><span class="xml">   width: 1em; height: 1em;</span></span><br><span class="line"><span class="xml">   vertical-align: -0.15em;</span></span><br><span class="line"><span class="xml">   fill: currentColor;</span></span><br><span class="line"><span class="xml">   overflow: hidden;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br></pre></td></tr></table></figure>第三步：挑选相应图标并获取类名，应用于页面：<figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">class</span>=<span class="string">"icon"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">use</span> <span class="attr">xlink:href</span>=<span class="string">"#icon-xxx"</span>&gt;</span><span class="tag">&lt;/<span class="name">use</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3><span id="unicode引用">unicode引用</span></h3><p>第一步：拷贝项目下面生成的font-face</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">  <span class="attribute">font-family</span>: <span class="string">'iconfont'</span>;</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'iconfont.eot'</span>);</span><br><span class="line">  <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">'iconfont.eot?#iefix'</span>) <span class="built_in">format</span>(<span class="string">'embedded-opentype'</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">'iconfont.woff'</span>) <span class="built_in">format</span>(<span class="string">'woff'</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">'iconfont.ttf'</span>) <span class="built_in">format</span>(<span class="string">'truetype'</span>),</span><br><span class="line">  <span class="built_in">url</span>(<span class="string">'iconfont.svg#iconfont'</span>) <span class="built_in">format</span>(<span class="string">'svg'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第二步：定义使用iconfont的样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.iconfont</span>&#123;</span><br><span class="line">  <span class="attribute">font-family</span>:<span class="string">"iconfont"</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">16px</span>;<span class="attribute">font-style</span>:normal;</span><br><span class="line">  <span class="attribute">-webkit-font-smoothing</span>: antialiased;</span><br><span class="line">  <span class="attribute">-webkit-text-stroke-width</span>: <span class="number">0.2px</span>;</span><br><span class="line">  <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第三步：挑选相应图标并获取字体编码，应用于页面</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;i <span class="keyword">class</span>=<span class="string">"iconfont"</span>&gt;&amp;<span class="meta">#x33;&lt;/i&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前一直用的是fontawesome字体，一直也就用它，觉得还比较齐全，偶尔有需要用到其他图标的时候，就会用阿里巴巴iconfont，在上面选择一个合适的图标下载一个png或者svg格式，如下图，单独引入也就是了。今天好好看了一下，发现以前真的是小看了这个字体库。&lt;/p&gt;
    
    </summary>
    
    
      <category term="设计" scheme="http://wsyks.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="css" scheme="http://wsyks.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Mock.js初体验——模拟前后端交互</title>
    <link href="http://wsyks.github.io/2017/07/17/Mock-js%E5%88%9D%E4%BD%93%E9%AA%8C%E2%80%94%E2%80%94%E6%A8%A1%E6%8B%9F%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BA%A4%E4%BA%92/"/>
    <id>http://wsyks.github.io/2017/07/17/Mock-js初体验——模拟前后端交互/</id>
    <published>2017-07-17T09:46:27.000Z</published>
    <updated>2018-12-01T02:09:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>虽然很早之前就已经知道mock，但是从未使用，一般自己构造几个数据也就得了。这次在做项目的时候，想想学学新东西，也是极好的，就用了一下，确实是个非常好上手的好东西呀。</p><a id="more"></a><h1><span id="直接上实例">直接上实例</span></h1><p>用法很简单，原理就是你使用ajax请求时，会进行拦截，然后根据你的配置，给你返回构造好的随机数据。啦啦啦，不多说。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"js/jquery.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="js/m</span>ock-min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">Mock.mock(/\.json/,&#123;</span></span><br><span class="line"><span class="string">'name|3': [&#123;</span></span><br><span class="line"><span class="string">        // 'id|+1':1,</span></span><br><span class="line"><span class="string">        first: '@FIRST',</span></span><br><span class="line"><span class="string">        middle: '@FIRST',</span></span><br><span class="line"><span class="string">        last: '@LAST',</span></span><br><span class="line"><span class="string">        full: '@first @middle @last'</span></span><br><span class="line"><span class="string">    &#125;]</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string">$.ajax(&#123;</span></span><br><span class="line"><span class="string">url:"</span>hello.json<span class="string">",</span></span><br><span class="line"><span class="string">dataType:"</span><span class="built_in">JSON</span><span class="string">",</span></span><br><span class="line"><span class="string">success:function (data) &#123;</span></span><br><span class="line"><span class="string">console.log(data);</span></span><br><span class="line"><span class="string">$('&lt;pre&gt;').text(JSON.stringify(data, null, 4)).appendTo('body');</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>生成结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"name"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"first"</span>: <span class="string">"Margaret"</span>,</span><br><span class="line">            <span class="attr">"middle"</span>: <span class="string">"Dorothy"</span>,</span><br><span class="line">            <span class="attr">"last"</span>: <span class="string">"Moore"</span>,</span><br><span class="line">            <span class="attr">"full"</span>: <span class="string">"Margaret Dorothy Moore"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"first"</span>: <span class="string">"Anna"</span>,</span><br><span class="line">            <span class="attr">"middle"</span>: <span class="string">"Jose"</span>,</span><br><span class="line">            <span class="attr">"last"</span>: <span class="string">"Clark"</span>,</span><br><span class="line">            <span class="attr">"full"</span>: <span class="string">"Anna Jose Clark"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"first"</span>: <span class="string">"Thomas"</span>,</span><br><span class="line">            <span class="attr">"middle"</span>: <span class="string">"Matthew"</span>,</span><br><span class="line">            <span class="attr">"last"</span>: <span class="string">"Taylor"</span>,</span><br><span class="line">            <span class="attr">"full"</span>: <span class="string">"Thomas Matthew Taylor"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1><span id="数据模板">数据模板</span></h1><p>这里也不总结了，官网非常非常详细，猛戳<a href="http://mockjs.com/examples.html#DPD" target="_blank" rel="noopener">这里</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;虽然很早之前就已经知道mock，但是从未使用，一般自己构造几个数据也就得了。这次在做项目的时候，想想学学新东西，也是极好的，就用了一下，确实是个非常好上手的好东西呀。&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://wsyks.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>d3树图(tree)的变形：拥有多个父节点的子节点</title>
    <link href="http://wsyks.github.io/2017/06/27/d3%E6%A0%91%E5%9B%BE-tree-%E7%9A%84%E5%8F%98%E5%BD%A2%EF%BC%9A%E6%8B%A5%E6%9C%89%E5%A4%9A%E4%B8%AA%E7%88%B6%E8%8A%82%E7%82%B9%E7%9A%84%E5%AD%90%E8%8A%82%E7%82%B9/"/>
    <id>http://wsyks.github.io/2017/06/27/d3树图-tree-的变形：拥有多个父节点的子节点/</id>
    <published>2017-06-27T09:31:21.000Z</published>
    <updated>2018-12-01T02:30:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近，有需要实现一种图，如下所示，很类似d3中的树图，但是子节点可以有多个父节点，查了一些资料，没有特别好的方式，最后自己根据需要还是实现了，分享一下自己的方法。</p> <img src="/2017/06/27/d3树图-tree-的变形：拥有多个父节点的子节点/1.png"><a id="more"></a><p>一开始，找资料时，很多人说到如果一个子节点拥有多个父节点时，那么就不算是树图了，建议使用力导向图，当然，直接使用力导向图是很方便的，然而要实现上图的效果，还需要整位置关系、连线方式，想想都感觉很麻烦呀，所以最后还是在树图的基础上稍作调整。</p><h1><span id="实现思路">实现思路</span></h1><ul><li>使用 tree.nodes()得到所有节点，过滤掉“name”属性相同的节点，只保留一个</li><li>原本使用tree.links()即可获得连接关系，但是现在把重复的节点去了，所以需要重新写连接关系，这里用了递归，重新遍历数据，形成新的连接关系</li><li>绘制</li></ul><h1><span id="关键代码">关键代码</span></h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> nodesraw = tree.nodes(root);  </span><br><span class="line">    <span class="keyword">var</span> count=nodesraw.length;</span><br><span class="line">    <span class="keyword">var</span> nodes=[nodesraw[count<span class="number">-1</span>]];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=count<span class="number">-1</span>;i&gt;<span class="number">-1</span>;i--)&#123;</span><br><span class="line">      <span class="keyword">var</span> m= d3.map(nodes,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> d.name;</span><br><span class="line">      &#125;)</span><br><span class="line">      <span class="keyword">if</span>(!m.has(nodesraw[i].name))&#123; <span class="comment">//判断如果之前存在name相同的节点，就不插入</span></span><br><span class="line">        nodes.push(nodesraw[i]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> links=[];</span><br><span class="line">    m = d3.map(nodes,<span class="function"><span class="keyword">function</span>(<span class="params">d</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> d.name;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">traverseTree</span>(<span class="params">node</span>)</span>&#123;<span class="comment">//递归，遍历所有连接数据</span></span><br><span class="line">      <span class="keyword">if</span>(!node)&#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(node.children &amp;&amp; node.children.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> current=m.get(node.name);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; node.children.length; i++) &#123;</span><br><span class="line">          <span class="keyword">var</span> templink=&#123;<span class="attr">source</span>:current,<span class="attr">target</span>:m.get(node.children[i].name)&#125;;</span><br><span class="line">          <span class="built_in">console</span>.log(i,node,templink);</span><br><span class="line">          links.push(templink);</span><br><span class="line">          traverseTree(node.children[i]);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    traverseTree(root);</span><br><span class="line">    ...其他代码</span><br></pre></td></tr></table></figure><h1><span id="完整代码">完整代码</span></h1><p>index.html</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;    </span><br><span class="line">  &lt;head&gt;    </span><br><span class="line">        &lt;meta charset=<span class="string">"utf-8"</span>&gt;    </span><br><span class="line">        &lt;title&gt;Tree &lt;<span class="regexp">/title&gt;    </span></span><br><span class="line"><span class="regexp">  &lt;/</span>head&gt;   </span><br><span class="line">  </span><br><span class="line">&lt;style&gt;  </span><br><span class="line">  </span><br><span class="line">.node circle &#123;  </span><br><span class="line">  fill: #fff;  </span><br><span class="line">  stroke: steelblue;  </span><br><span class="line">  stroke-width: <span class="number">1.5</span>px;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">.node &#123;  </span><br><span class="line">  font: <span class="number">12</span>px sans-serif;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">.link &#123;  </span><br><span class="line">  fill: none;  </span><br><span class="line">  stroke: #ccc;  </span><br><span class="line">  stroke-width: <span class="number">1.5</span>px;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line">&lt;<span class="regexp">/style&gt;  </span></span><br><span class="line"><span class="regexp">&lt;body&gt;  </span></span><br><span class="line"><span class="regexp">&lt;script src="http:/</span><span class="regexp">/d3js.org/</span>d3.v3.min.js<span class="string">"&gt;&lt;/script&gt;  </span></span><br><span class="line"><span class="string">&lt;script&gt;  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var width = 800,  </span></span><br><span class="line"><span class="string">height = 800;  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">var tree = d3.layout.tree()  </span></span><br><span class="line"><span class="string">    .size([width, height-200])  </span></span><br><span class="line"><span class="string">    .separation(function(a, b) &#123; return (a.parent == b.parent ? 1 : 2) / a.depth; &#125;);  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">var diagonal = d3.svg.diagonal()  </span></span><br><span class="line"><span class="string">    .projection(function(d) &#123; return [d.y, d.x]; &#125;);  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">var svg = d3.select("</span>body<span class="string">").append("</span>svg<span class="string">")  </span></span><br><span class="line"><span class="string">    .attr("</span>width<span class="string">", width)  </span></span><br><span class="line"><span class="string">    .attr("</span>height<span class="string">", height)  </span></span><br><span class="line"><span class="string">    .append("</span>g<span class="string">")  </span></span><br><span class="line"><span class="string">    .attr("</span>transform<span class="string">", "</span>translate(<span class="number">40</span>,<span class="number">0</span>)<span class="string">");  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">d3.json("</span>data.json<span class="string">", function(error, root) &#123;  </span></span><br><span class="line"><span class="string">  </span></span><br><span class="line"><span class="string">    var nodesraw = tree.nodes(root);  </span></span><br><span class="line"><span class="string">    var count=nodesraw.length;</span></span><br><span class="line"><span class="string">    var nodes=[nodesraw[count-1]];</span></span><br><span class="line"><span class="string">    for(var i=count-1;i&gt;-1;i--)&#123;</span></span><br><span class="line"><span class="string">      var m= d3.map(nodes,function(d)&#123;</span></span><br><span class="line"><span class="string">        return d.name;</span></span><br><span class="line"><span class="string">      &#125;)</span></span><br><span class="line"><span class="string">      if(!m.has(nodesraw[i].name))&#123;</span></span><br><span class="line"><span class="string">        nodes.push(nodesraw[i]);</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    var links=[];</span></span><br><span class="line"><span class="string">    m = d3.map(nodes,function(d)&#123;</span></span><br><span class="line"><span class="string">        return d.name;</span></span><br><span class="line"><span class="string">    &#125;)</span></span><br><span class="line"><span class="string">    function traverseTree(node)&#123;</span></span><br><span class="line"><span class="string">      if(!node)&#123;</span></span><br><span class="line"><span class="string">        return;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">      if(node.children &amp;&amp; node.children.length&gt;0)&#123;</span></span><br><span class="line"><span class="string">        var current=m.get(node.name);</span></span><br><span class="line"><span class="string">        for (var i = 0; i &lt; node.children.length; i++) &#123;</span></span><br><span class="line"><span class="string">          var templink=&#123;source:current,target:m.get(node.children[i].name)&#125;;</span></span><br><span class="line"><span class="string">          console.log(i,node,templink);</span></span><br><span class="line"><span class="string">          links.push(templink);</span></span><br><span class="line"><span class="string">          traverseTree(node.children[i]);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">      &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    traverseTree(root);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    var link = svg.selectAll("</span>.link<span class="string">")  </span></span><br><span class="line"><span class="string">      .data(links)  </span></span><br><span class="line"><span class="string">      .enter()  </span></span><br><span class="line"><span class="string">      .append("</span>path<span class="string">")  </span></span><br><span class="line">      .attr("class", "link")  </span><br><span class="line">      .attr(<span class="string">"d"</span>, diagonal);  </span><br><span class="line">      </span><br><span class="line">    <span class="keyword">var</span> node = svg.selectAll(<span class="string">".node"</span>)  </span><br><span class="line">      .data(nodes)  </span><br><span class="line">      .enter()  </span><br><span class="line">      .append(<span class="string">"g"</span>)  </span><br><span class="line">      .attr(<span class="string">"class"</span>, <span class="string">"node"</span>)  </span><br><span class="line">      .attr(<span class="string">"transform"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> <span class="string">"translate("</span> + d.y + <span class="string">","</span> + d.x + <span class="string">")"</span>; &#125;)  </span><br><span class="line">      </span><br><span class="line">    node.append(<span class="string">"circle"</span>)  </span><br><span class="line">      .attr(<span class="string">"r"</span>, <span class="number">4.5</span>);  </span><br><span class="line">      </span><br><span class="line">    node.append(<span class="string">"text"</span>)  </span><br><span class="line">      .attr(<span class="string">"dx"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.children ? <span class="number">-8</span> : <span class="number">8</span>; &#125;)  </span><br><span class="line">      .attr(<span class="string">"dy"</span>, <span class="number">3</span>)  </span><br><span class="line">      .style(<span class="string">"text-anchor"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.children ? <span class="string">"end"</span> : <span class="string">"start"</span>; &#125;)  </span><br><span class="line">      .text(<span class="function"><span class="keyword">function</span>(<span class="params">d</span>) </span>&#123; <span class="keyword">return</span> d.name; &#125;);  </span><br><span class="line">    &#125;);  </span><br><span class="line">  </span><br><span class="line">&lt;<span class="regexp">/script&gt;  </span></span><br><span class="line"><span class="regexp">          </span></span><br><span class="line"><span class="regexp">    &lt;/</span>body&gt;    </span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><p>data.json</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">"name"</span>: <span class="string">"flare"</span>,</span><br><span class="line">    <span class="string">"children"</span>: [&#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"analytics"</span>,</span><br><span class="line">        <span class="string">"children"</span>: [&#123;</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"cluster"</span>,</span><br><span class="line">            <span class="string">"coupling_id"</span>: <span class="number">1</span>,</span><br><span class="line">            <span class="string">"children"</span>: [&#123;</span><br><span class="line">                <span class="string">"name"</span>: <span class="string">"AgglomerativeCluster"</span>,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">3938</span></span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">"name"</span>: <span class="string">"MergeEdge"</span>,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">743</span></span><br><span class="line">            &#125;,&#123;</span><br><span class="line">                <span class="string">"name"</span>: <span class="string">"JSONConverter"</span>,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">2220</span></span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"graph"</span>,</span><br><span class="line">            <span class="string">"children"</span>: [&#123;</span><br><span class="line">                <span class="string">"name"</span>: <span class="string">"BetweennessCentrality"</span>,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">3534</span></span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">"name"</span>: <span class="string">"LinkDistance"</span>,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">5731</span></span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">"name"</span>: <span class="string">"MaxFlowMinCut"</span>,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">7840</span></span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">"name"</span>: <span class="string">"ShortestPaths"</span>,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">5914</span></span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">"name"</span>: <span class="string">"SpanningTree"</span>,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">3416</span></span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"optimization"</span>,</span><br><span class="line">            <span class="string">"children"</span>: [&#123;</span><br><span class="line">                <span class="string">"name"</span>: <span class="string">"AspectRatioBanker"</span>,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">7074</span></span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;,&#123;</span><br><span class="line">        <span class="string">"name"</span>: <span class="string">"data"</span>,</span><br><span class="line">        <span class="string">"children"</span>: [&#123;</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"converters"</span>,</span><br><span class="line">            <span class="string">"children"</span>: [&#123;</span><br><span class="line">                <span class="string">"name"</span>: <span class="string">"Converters"</span>,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">721</span></span><br><span class="line">            &#125;, &#123;</span><br><span class="line">                <span class="string">"name"</span>: <span class="string">"JSONConverter"</span>,</span><br><span class="line">                <span class="string">"size"</span>: <span class="number">2220</span></span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"DataField"</span>,</span><br><span class="line">            <span class="string">"size"</span>: <span class="number">1759</span>,</span><br><span class="line">            <span class="string">"coupling_id"</span>:<span class="number">2</span></span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            <span class="string">"name"</span>: <span class="string">"DataSchema"</span>,</span><br><span class="line">            <span class="string">"size"</span>: <span class="number">2165</span></span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>即可</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近，有需要实现一种图，如下所示，很类似d3中的树图，但是子节点可以有多个父节点，查了一些资料，没有特别好的方式，最后自己根据需要还是实现了，分享一下自己的方法。&lt;/p&gt;
 &lt;img src=&quot;/2017/06/27/d3树图-tree-的变形：拥有多个父节点的子节点/1.png&quot;&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://wsyks.github.io/tags/javascript/"/>
    
      <category term="可视化" scheme="http://wsyks.github.io/tags/%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>PHP CodeIgniter分页实例及多条件查询解决方案</title>
    <link href="http://wsyks.github.io/2017/05/19/php-CodeIgniter%E5%88%86%E9%A1%B5%E5%8F%8A%E5%A4%9A%E6%9D%A1%E4%BB%B6%E6%9F%A5%E8%AF%A2%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://wsyks.github.io/2017/05/19/php-CodeIgniter分页及多条件查询解决方案/</id>
    <published>2017-05-19T12:14:29.000Z</published>
    <updated>2018-12-01T02:32:48.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="前言">前言</span></h1><p>最近在用CI框架的时候，用了CI的分页类，以前是用前端整分页，这次干脆用用框架自带的，自己这个健忘的脑袋，还是记录一下吧。</p>   <a id="more"></a><p>因为页面中有条件筛选的表单，所以想要完成的效果就是，输入条件后，分页跳转之后能维持所输入的条件。想了一下，自己的思路如下代码吧。</p><h1><span id="controller-代码">controller 代码</span></h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Monitors</span> <span class="keyword">extends</span> <span class="title">CI_Controller</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">warning</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $config= <span class="keyword">array</span>();</span><br><span class="line">        $config[<span class="string">'per_page'</span>] = <span class="number">15</span>; <span class="comment">//每页显示的数据数</span></span><br><span class="line">        $current_page = intval(<span class="keyword">$this</span>-&gt;input-&gt;get(<span class="string">"per_page"</span>)); <span class="comment">//获取当前分页页码数</span></span><br><span class="line">    </span><br><span class="line">$status=<span class="keyword">$this</span>-&gt;input-&gt;get(<span class="string">"filter-status"</span>,<span class="keyword">TRUE</span>);</span><br><span class="line">$level=<span class="keyword">$this</span>-&gt;input-&gt;get(<span class="string">'filter-level'</span>,<span class="keyword">TRUE</span>);</span><br><span class="line">$timestamp=<span class="keyword">$this</span>-&gt;input-&gt;get(<span class="string">'filter-timestamp'</span>,<span class="keyword">TRUE</span>);</span><br><span class="line">        $all = <span class="keyword">$this</span>-&gt;monitors_m-&gt;getAllData($current_page,$config[<span class="string">'per_page'</span>],$status,$timestamp,$level);</span><br><span class="line">        </span><br><span class="line">      <span class="comment">//这里返回的有总条数和具体的数据，根据自己的情况略加修改即可</span></span><br><span class="line">$data[<span class="string">'allevent'</span>] = $all[<span class="string">'content'</span>];</span><br><span class="line">$config[<span class="string">'total_rows'</span>]     = $all[<span class="string">'count'</span>];<span class="comment">//总条数</span></span><br><span class="line">        $config[<span class="string">'num_links'</span>] = <span class="number">3</span>;<span class="comment">//页码连接数</span></span><br><span class="line">$config[<span class="string">'use_page_numbers'</span>] = <span class="keyword">TRUE</span>;  </span><br><span class="line">$config[<span class="string">'page_query_strings'</span>] = <span class="keyword">TRUE</span>;<span class="comment">//关键配置</span></span><br><span class="line">    $config[<span class="string">'enable_query_strings'</span>] = <span class="keyword">TRUE</span>;</span><br><span class="line">$config[<span class="string">'base_url'</span>] = base_url().<span class="string">'index.php/monitors/warning?'</span>&amp;filter-status=<span class="string">'.$status.'</span>&amp;filter-level=<span class="string">'.$level.'</span>&amp;filter-timestamp=<span class="string">'.$timestamp;//关键配置</span></span><br><span class="line"><span class="string">      </span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">$this-&gt;load-&gt;library('</span>pagination<span class="string">');//加载ci pagination类</span></span><br><span class="line"><span class="string">$this-&gt;pagination-&gt;initialize($config);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$data['</span>page<span class="string">'] = $this-&gt;pagination-&gt;create_links();//关键代码</span></span><br><span class="line"><span class="string">$this-&gt;load-&gt;view("monitors_v",$data);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h2><span id="关键配置参数">关键配置参数</span></h2><p>**$config['page_query_string’与$config[‘enable_query_strings’] **<br>如果设置成true,则url则是&quot;index.php/monitors/warning？per_page=20&quot;这样的</p><blockquote><p>【注】“per_page” 是默认传递的查询字符串，但也可以使用 $config[‘query_string_segment’] = ‘你的字符串’ 来配置</p></blockquote><p>在我的方案中，设置为TRUE</p><p><strong>$config[‘base_url’]</strong><br>一开始只是设置为以下这种情况的时候，在某一页进行条件筛选是可以的，但是跳转后由于刷新的问题条件又没有了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$config[<span class="string">'base_url'</span>] = base_url().<span class="string">'index.php/monitors/warning;</span></span><br></pre></td></tr></table></figure><p>采用以下的方式即可，吼吼吼</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$status=$this-&gt;input-&gt;get("filter-status",TRUE);</span><br><span class="line">$level=$this-&gt;input-&gt;get('filter-level',TRUE);</span><br><span class="line">$timestamp=$this-&gt;input-&gt;get('filter-timestamp',TRUE);</span><br><span class="line"><span class="variable">$config</span>[<span class="string">'base_url'</span>] = base_url().<span class="string">'index.php/monitors/warning?'</span>&amp;<span class="attribute">filter</span>-status=<span class="string">'.$status.'</span>&amp;filter-level=<span class="string">'.$level.'</span>&amp;filter-timestamp=<span class="string">'.$timestamp;//关键配置</span></span><br></pre></td></tr></table></figure><h1><span id="view页面代码">view页面代码</span></h1><p>就一句话，在你需要放置分页元素的地方加上这样一句就行，这里的$page变量就是在controller里存进去的$this-&gt;pagination-&gt;create_links();</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $page<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1><span id="设置分页样式">设置分页样式</span></h1><p>这里采用的是bootstrap的样式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$config[<span class="string">'first_link'</span>]     = <span class="string">"&amp;lt;&amp;lt;"</span>;<span class="comment">//首页</span></span><br><span class="line">$config[<span class="string">'prev_link'</span>]     = <span class="string">"&amp;lt;"</span>;<span class="comment">//上一页</span></span><br><span class="line">$config[<span class="string">'next_link'</span>]     = <span class="string">"&amp;gt;"</span>;<span class="comment">//下一页</span></span><br><span class="line">$config[<span class="string">'last_link'</span>]     = <span class="string">"&amp;gt;&amp;gt;"</span>;<span class="comment">//尾页</span></span><br><span class="line">$config[<span class="string">'full_tag_open'</span>] = <span class="string">'&lt;ul class="pagination pagination-split"&gt;'</span>; </span><br><span class="line">$config[<span class="string">'full_tag_close'</span>] = <span class="string">'&lt;/ul&gt;'</span>; </span><br><span class="line">$config[<span class="string">'first_tag_open'</span>] = <span class="string">'&lt;li&gt;'</span>;<span class="comment">//第一个链接的起始标签。</span></span><br><span class="line">$config[<span class="string">'first_tag_close'</span>] = <span class="string">'&lt;/li&gt;'</span>;<span class="comment">//第一个链接的结束标签。</span></span><br><span class="line">$config[<span class="string">'next_tag_open'</span>] = <span class="string">'&lt;li&gt;'</span>;<span class="comment">//下一页链接的起始标签。</span></span><br><span class="line">$config[<span class="string">'next_tag_close'</span>] = <span class="string">'&lt;/li&gt;'</span>;<span class="comment">//下一页链接的结束标签。</span></span><br><span class="line"></span><br><span class="line">$config[<span class="string">'prev_tag_open'</span>] = <span class="string">'&lt;li&gt;'</span>;<span class="comment">//上一页链接的起始标签。</span></span><br><span class="line">$config[<span class="string">'prev_tag_close'</span>] = <span class="string">'&lt;/li&gt;'</span>;<span class="comment">//上一页链接的结束标签。</span></span><br><span class="line"></span><br><span class="line">$config[<span class="string">'cur_tag_open'</span>] = <span class="string">'&lt;li class="active"&gt;&lt;a&gt;'</span>;</span><br><span class="line">$config[<span class="string">'cur_tag_close'</span>] = <span class="string">'&lt;/a&gt;&lt;/li&gt;'</span>;<span class="comment">//当前页链接的结束标签。</span></span><br><span class="line"></span><br><span class="line">$config[<span class="string">'num_tag_open'</span>] = <span class="string">'&lt;li&gt;'</span>;<span class="comment">//数字链接的起始标签。</span></span><br><span class="line">$config[<span class="string">'num_tag_close'</span>] = <span class="string">'&lt;/li&gt;'</span>;<span class="comment">//数字链接的结束标签。</span></span><br></pre></td></tr></table></figure><blockquote><p>参考<br><a href="http://codeigniter.org.cn/user_guide/libraries/pagination.html" target="_blank" rel="noopener">http://codeigniter.org.cn/user_guide/libraries/pagination.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;最近在用CI框架的时候，用了CI的分页类，以前是用前端整分页，这次干脆用用框架自带的，自己这个健忘的脑袋，还是记录一下吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="php" scheme="http://wsyks.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>CSS3实现卡片翻转动画效果</title>
    <link href="http://wsyks.github.io/2017/05/10/css3%E5%AE%9E%E7%8E%B0%E5%8D%A1%E7%89%87%E7%BF%BB%E8%BD%AC%E5%8A%A8%E7%94%BB%E6%95%88%E6%9E%9C/"/>
    <id>http://wsyks.github.io/2017/05/10/css3实现卡片翻转动画效果/</id>
    <published>2017-05-10T11:40:58.000Z</published>
    <updated>2018-12-01T08:54:24.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="前言">前言</span></h1><p>今天写项目的时候，想要实现卡片翻转的这样的一个效果，学习了一下，做个小笔记吧。</p><a id="more"></a><p>还是先放效果图，或者点击<a href="http://syean.cn/demo/flip/" target="_blank" rel="noopener">这里</a>查看效果</p><img src="/2017/05/10/css3实现卡片翻转动画效果/1.gif"><h1><span id="实现">实现</span></h1><h2><span id="html">html</span></h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"box"</span>&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"card front"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;<span class="selector-tag">div</span> class=<span class="string">"card back"</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2><span id="css">css</span></h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">      body&#123;</span><br><span class="line"><span class="attribute">perspective</span>: <span class="number">1000px</span>;</span><br><span class="line">&#125;</span><br><span class="line">.box&#123;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">239px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">334px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;<span class="comment">//关键代码</span></span><br><span class="line">    <span class="attribute">transition</span>: transform <span class="number">1s</span>;</span><br><span class="line">&#125;</span><br><span class="line">.card&#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line"><span class="attribute">backface-visibility</span>: hidden;<span class="comment">//关键代码</span></span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line">.front&#123;</span><br><span class="line">background-image: url(1.jpg);</span><br><span class="line">  <span class="attribute">background-position</span>: -<span class="number">24px</span> -<span class="number">23px</span>;</span><br><span class="line">&#125;</span><br><span class="line">.back&#123;</span><br><span class="line"><span class="attribute">transform</span>: rotateY(<span class="number">180deg</span>);</span><br><span class="line">background-image: url(1.jpg);</span><br><span class="line">  <span class="attribute">background-position</span>: -<span class="number">287px</span> -<span class="number">23px</span>;</span><br><span class="line">&#125;</span><br><span class="line">.flipped&#123;</span><br><span class="line"><span class="attribute">transform</span>: rotateY(<span class="number">180deg</span>);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><h2><span id="js">js</span></h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".box"</span>).hover(function(event)&#123;</span><br><span class="line">$(this).toggleClass("flipped");</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1><span id="关键说明">关键说明</span></h1><h2><span id="preserve-3d">preserve-3d</span></h2><p>因为需要3d效果，所以在box这个div里要添加如下，表示3d透视<br>这个加上很关键！</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br></pre></td></tr></table></figure><h2><span id="backface-visibility">backface-visibility</span></h2><p>给卡片加入下方代码，表示隐藏被旋转div元素的背面，这样旋转之后，第一张卡片是背面朝屏幕方向，看不到，第二张卡片旋转之后则是正面朝像屏幕，即形成了旋转的效果，主要用到这两个属性啦。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">backface-visibility</span>:hidden</span><br></pre></td></tr></table></figure><h2><span id="rotatey">rotateY()</span></h2><p>这里的旋转都是绕着Y轴旋转，比较好理解。</p><p>恩，就是这样，比较简单啦。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;今天写项目的时候，想要实现卡片翻转的这样的一个效果，学习了一下，做个小笔记吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://wsyks.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>解锁新技能——入门剪辑，四姑娘山</title>
    <link href="http://wsyks.github.io/2017/05/08/%E8%A7%A3%E9%94%81%E6%96%B0%E6%8A%80%E8%83%BD%E2%80%94%E2%80%94%E5%85%A5%E9%97%A8%E5%89%AA%E8%BE%91/"/>
    <id>http://wsyks.github.io/2017/05/08/解锁新技能——入门剪辑/</id>
    <published>2017-05-08T04:04:44.000Z</published>
    <updated>2018-12-01T02:40:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>五一和小伙伴去了四姑娘山，最近摄影有点腻，想学学剪辑，在路上拍了很多小段视频，利用周末的时间，学习了一下PR，剪了一段视频，嘻嘻。</p><a id="more"></a><embed src="http://player.youku.com/player.php/sid/XMjc1MTUwODY4NA==/v.swf" allowfullscreen="true" quality="high" width="720" height="500" align="middle" allowscriptaccess="always" type="application/x-shockwave-flash" style="margin: 0 auto;display: block">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;五一和小伙伴去了四姑娘山，最近摄影有点腻，想学学剪辑，在路上拍了很多小段视频，利用周末的时间，学习了一下PR，剪了一段视频，嘻嘻。&lt;/p&gt;
    
    </summary>
    
    
      <category term="旅行" scheme="http://wsyks.github.io/tags/%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>UI组件之色彩选择器</title>
    <link href="http://wsyks.github.io/2017/03/28/UI%E7%BB%84%E4%BB%B6%E4%B9%8B%E8%89%B2%E5%BD%A9%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>http://wsyks.github.io/2017/03/28/UI组件之色彩选择器/</id>
    <published>2017-03-28T07:51:55.000Z</published>
    <updated>2018-12-01T03:22:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="前言">前言</span></h1><p>今天来讲一下如何用javascript写一个色彩选择器。上一篇写到用JS实现RGB,HSL,HSV之间的相互转换，而那一篇写的代码呢，就是为写这个色彩选择器而准备的。</p><a id="more"></a><p>先放上效果图，代码是基于jquery的，所以要引用上哟。</p> <img src="/2017/03/28/UI组件之色彩选择器/GIF.gif"><p>或者戳<a href="http://syean.cn/ife-2017/%E8%89%B2%E5%BD%A9%E9%80%89%E6%8B%A9%E5%99%A8/colorpicker.html" target="_blank" rel="noopener">这里看效果</a>，源码在<a href="https://github.com/wsyks/ife-2017/tree/master/%E8%89%B2%E5%BD%A9%E9%80%89%E6%8B%A9%E5%99%A8" target="_blank" rel="noopener">这里</a></p><h1><span id="功能需求">功能需求</span></h1><ul><li>可以通过点击左侧色彩区域选择色彩，在右侧的输入框中会显示对应的色值，包括RGB,HSL和HSV的值</li><li>可以通过调节右侧输入框的各数值，来查看对应的颜色</li><li>可以通过在中间的色带上点击来确定大致的颜色区域</li><li>提供设定颜色值的接口，指定具体颜色，左侧色区和右侧输入框显示对应数值</li><li>提供获取颜色值的接口，可获取色彩选择器选中的颜色值，可返回CSS color、RGB、HSL、HSB四种格式的色值</li></ul><h1><span id="总体思路">总体思路</span></h1><h2><span id="左边色彩区域">左边色彩区域</span></h2><p>通过效果图，你可以试着多取色，看看数值的一些规律。</p><blockquote><p>从HSV数值上来看(如有不了解，请戳<a href="http://syean.cn/2017/03/17/JS%E5%AE%9E%E7%8E%B0RGB-HSL-HSB%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/" target="_blank" rel="noopener">上篇</a>)。</p></blockquote><ul><li>左边取色渐变色块的色相是一直保持不变的</li><li>从左到右，饱和度是从低到高的趋势</li><li>从上到下，色彩明度是从高到低的。</li><li>即从左到右，S值从0%到100%，从上到下，V值从100%到0%。</li></ul><blockquote><p>从RGB模型角度来说</p></blockquote><ul><li>点击最上边一排水平来看，会发现最左上角的数值永远都是rgb（255,255,255），即是白色（用上HSV数值也可解释，饱和度最低，明度最高，即是白色）。</li><li>而最右上方的数值则与我们中间的色带上的颜色是一致的。即该色相下，饱和度最高，明度最高的颜色。</li><li>从最左边垂直而下看，会发现RGB的值由（255,255,255）到（0,0,0）变化，即从白到黑。</li></ul><h2><span id="中间色带">中间色带</span></h2><ul><li>至于中间的色带，是用来选择色彩的色相的。从上到下，H值从0-360渐变。</li><li>从HSV值来看，会发现S值一直为100%，V值也为100%；从上面即可解释这一原因。</li><li>而对于HSL值，S值一直为100%，L值也为50%；这也是两者本身定义不同产生的。</li></ul><p>知道这些之后，就大概知道如何下手了。</p><h1><span id="关键代码">关键代码</span></h1><h2><span id="html">HTML</span></h2><p>额…代码写的比较粗糙，html和css都写的比较死，不灵活，对于写成一个真正的插件而言，还需要加入很多样式方面的考虑，笔者比较懒，这先这样吧。整体html如下</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"colorpicker"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"colorbox"</span>&gt;</span> <span class="comment">&lt;!-- 左边渐变区块 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span> <span class="attr">height</span>=<span class="string">"300"</span> <span class="attr">width</span>=<span class="string">"300"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"colorpicker-circle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"colorslide"</span> <span class="attr">id</span>=<span class="string">"colorpicker-slide"</span>&gt;</span> <span class="comment">&lt;!-- 中间的色带 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"colorslide-circle"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"colorcontent"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pickerbox"</span> <span class="attr">id</span>=<span class="string">"pickercolor"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="comment">&lt;!-- 取色后显示颜色的区块 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>hex:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"hex"</span>&gt;</span><span class="comment">&lt;!-- 显示颜色的hex值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"rgbbox"</span>&gt;</span><span class="comment">&lt;!-- 显示颜色的rgb值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>R<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"R"</span> <span class="attr">id</span>=<span class="string">"colorpicker-rgbr"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"255"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>G<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"G"</span> <span class="attr">id</span>=<span class="string">"colorpicker-rgbg"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"255"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>B<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"B"</span> <span class="attr">id</span>=<span class="string">"colorpicker-rgbb"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"255"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hslvbox"</span>&gt;</span><span class="comment">&lt;!-- 显示颜色的hsl值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"hslbox"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>H<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"H"</span> <span class="attr">id</span>=<span class="string">"colorpicker-hslh"</span> <span class="attr">step</span>=<span class="string">"1"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"360"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>S<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"S"</span> <span class="attr">id</span>=<span class="string">"colorpicker-hsls"</span> <span class="attr">step</span>=<span class="string">"1"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"100"</span>&gt;</span>%<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>L<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"L"</span> <span class="attr">id</span>=<span class="string">"colorpicker-hsll"</span> <span class="attr">step</span>=<span class="string">"1"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"100"</span>&gt;</span>%<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"hsvbox"</span>&gt;</span><span class="comment">&lt;!-- 显示颜色的hsv值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>H<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"HH"</span> <span class="attr">id</span>=<span class="string">"colorpicker-hsvh"</span> <span class="attr">step</span>=<span class="string">"1"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"360"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>S<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"SS"</span> <span class="attr">id</span>=<span class="string">"colorpicker-hsvs"</span> <span class="attr">step</span>=<span class="string">"1"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"100"</span>&gt;</span>%<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span>V<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"V"</span> <span class="attr">id</span>=<span class="string">"colorpicker-hsvv"</span> <span class="attr">step</span>=<span class="string">"1"</span> <span class="attr">min</span>=<span class="string">"0"</span> <span class="attr">max</span>=<span class="string">"100"</span>&gt;</span>%<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2><span id="新建colorpicker对象">新建colorPicker对象</span></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> colorPicker= <span class="function"><span class="keyword">function</span>(<span class="params">id,config</span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.element=$(<span class="string">"#"</span>+id)[<span class="number">0</span>];<span class="comment">//左边取色区域的DOM对象</span></span><br><span class="line"><span class="keyword">this</span>.jqelement=$(<span class="string">"#"</span>+id);<span class="comment">//左边取色区域的jq对象</span></span><br><span class="line"><span class="keyword">this</span>.slide=$(<span class="string">"#colorpicker-slide"</span>)[<span class="number">0</span>];<span class="comment">//中间色带的DOM对象</span></span><br><span class="line"><span class="keyword">this</span>.jqslide=$(<span class="string">"#colorpicker-slide"</span>);</span><br><span class="line"><span class="keyword">this</span>.width = <span class="keyword">this</span>.element.width || <span class="number">300</span>;<span class="comment">//左边取色区域的宽度</span></span><br><span class="line"><span class="keyword">this</span>.height = <span class="keyword">this</span>.element.height ||<span class="number">300</span>;<span class="comment">//左边取色区域的高度</span></span><br><span class="line"><span class="keyword">this</span>.pickercircle=$(<span class="string">"#colorpicker-circle"</span>);<span class="comment">//左边取色小圆点</span></span><br><span class="line"><span class="keyword">this</span>.context = <span class="keyword">this</span>.element.getContext(<span class="string">"2d"</span>); </span><br><span class="line"><span class="keyword">this</span>._init();</span><br><span class="line">&#125;</span><br><span class="line">colorPicker.prototype = &#123;</span><br><span class="line">  _init:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.canvasX=<span class="number">0</span>;<span class="comment">//左边取色区域相对于canvas画布水平位置</span></span><br><span class="line"><span class="keyword">this</span>.canvasY=<span class="number">0</span>;<span class="comment">//左边取色区域相对于canvas画布垂直位置</span></span><br><span class="line"><span class="keyword">this</span>.hsl=[<span class="number">0</span>,<span class="number">100</span>,<span class="number">50</span>];<span class="comment">//初始化hsl</span></span><br><span class="line"><span class="keyword">this</span>.rgb=[<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>];<span class="comment">//初始化rgb</span></span><br><span class="line"><span class="keyword">this</span>.hsv=[<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>];<span class="comment">//初始化hsv</span></span><br><span class="line"><span class="keyword">this</span>.hex=<span class="string">"#ffffff"</span>;<span class="comment">//初始化hex</span></span><br><span class="line"><span class="keyword">this</span>._drawbg();<span class="comment">//绘制左边取色渐变区域的函数</span></span><br><span class="line"><span class="keyword">this</span>._pickcolor();<span class="comment">//在左边点击取色的函数</span></span><br><span class="line"><span class="keyword">this</span>._slidecolor();<span class="comment">//在中间色块点击取色相的函数</span></span><br><span class="line"><span class="keyword">this</span>._updatergb();<span class="comment">//更新rgb，hex的数值</span></span><br><span class="line"><span class="keyword">this</span>._updatehslv();<span class="comment">//更新hsl，hsv的数值</span></span><br><span class="line"><span class="keyword">this</span>._contentchange();<span class="comment">//监听表单的输入，并作出相应的更新</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="色彩转换函数">色彩转换函数</span></h2><p>不多说了，看上一篇或者源码</p><ul><li>rgbtohsl(r,g,b)</li><li>rgbtohsv(r,g,b)</li><li>rgbtohex(r,g,b)</li><li>hsltorgb(h,s,l)</li><li>hsvtorgb(h,s,v)</li><li>hextorgb(hex)</li></ul><h2><span id="绘制左边取色渐变区块">绘制左边取色渐变区块</span></h2><p>左边的渐变区块我是采用canvas绘图的方式来绘制渐变的效果。用canvas有什么好处呢，canvas可以确定某个画布位置的颜色，返回该点的rgb颜色，这样省事不少。</p><p>【注意】这里绘制渐变时要注意需要绘制两个渐变，一个是水平的渐变，一个是垂直的渐变，垂直的渐变是对rgb(0,0,0)的透明度进行改变，一定是透明的改变，因为只有这样，才能叠加上颜色，否则便是灰色的。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//填充左边颜色的渐变</span></span><br><span class="line">_drawbg:<span class="function"><span class="keyword">function</span>(<span class="params">color</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> x1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> y1 = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//水平的渐变</span></span><br><span class="line"><span class="keyword">var</span> linear_gradient_hori = <span class="keyword">this</span>.context.createLinearGradient(x1, y1, <span class="keyword">this</span>.width, <span class="number">0</span>);</span><br><span class="line">linear_gradient_hori.addColorStop(<span class="number">0</span>, <span class="string">'rgba(255,255,255,1)'</span>); </span><br><span class="line">linear_gradient_hori.addColorStop(<span class="number">1</span>,color?color:<span class="string">'rgba(255,0,0,1)'</span>);<span class="comment">//添加上颜色</span></span><br><span class="line"><span class="keyword">this</span>.context.fillStyle=linear_gradient_hori;</span><br><span class="line"><span class="keyword">this</span>.context.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>.width, <span class="keyword">this</span>.height); </span><br><span class="line"><span class="comment">//垂直的渐变</span></span><br><span class="line"><span class="keyword">var</span> linear_gradient_ver = <span class="keyword">this</span>.context.createLinearGradient(x1, y1, <span class="number">0</span>, <span class="keyword">this</span>.height);</span><br><span class="line">linear_gradient_ver.addColorStop(<span class="number">0</span>, <span class="string">'rgba(0,0,0,0)'</span>); </span><br><span class="line">linear_gradient_ver.addColorStop(<span class="number">1</span>,<span class="string">'rgba(0,0,0,1)'</span>);</span><br><span class="line"><span class="keyword">this</span>.context.fillStyle=linear_gradient_ver;</span><br><span class="line"><span class="keyword">this</span>.context.fillRect(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>.width, <span class="keyword">this</span>.height); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在前期看别人写的插件时，发现很多都是用了一个这样一个灰色的渐变的透明背景图片，然后在父级的div设置一个背景颜色，该背景颜色就是来自中间色带，两者叠加来形成渐变区域，其实细细想来与上面用的原理都是一样的。</p> <img src="/2017/03/28/UI组件之色彩选择器/colorpicker_overlay.png"><p>戳<a href="http://www.eyecon.ro/colorpicker/" target="_blank" rel="noopener">这里</a>是别人写的一个色彩选择器插件，它就是用的这个方法。</p><h2><span id="绘制中间色带">绘制中间色带</span></h2><p>用css的渐变来绘制，这里方法有很多，就不多说了。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.colorslide&#123;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">28px</span>;</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line"><span class="attribute">background</span>: linear-gradient(to bottom, hsla(<span class="number">0</span>,<span class="number">100%</span>,<span class="number">50%</span>,<span class="number">1</span>) <span class="number">10%</span>,hsla(<span class="number">36</span>,<span class="number">100%</span>,<span class="number">50%</span>,<span class="number">1</span>) <span class="number">20%</span>,hsla(<span class="number">72</span>,<span class="number">100%</span>,<span class="number">50%</span>,<span class="number">1</span>) <span class="number">30%</span>,hsla(<span class="number">108</span>,<span class="number">100%</span>,<span class="number">50%</span>,<span class="number">1</span>) <span class="number">40%</span>,hsla(<span class="number">180</span>,<span class="number">100%</span>,<span class="number">50%</span>,<span class="number">1</span>) <span class="number">50%</span>,hsla(<span class="number">216</span>,<span class="number">100%</span>,<span class="number">50%</span>,<span class="number">1</span>) <span class="number">60%</span>,hsla(<span class="number">252</span>,<span class="number">100%</span>,<span class="number">50%</span>,<span class="number">1</span>) <span class="number">70%</span>,hsla(<span class="number">288</span>,<span class="number">100%</span>,<span class="number">50%</span>,<span class="number">1</span>) <span class="number">80%</span>,hsla(<span class="number">324</span>,<span class="number">100%</span>,<span class="number">50%</span>,<span class="number">1</span>) <span class="number">90%</span>, hsla(<span class="number">360</span>,<span class="number">100%</span>,<span class="number">50%</span>,<span class="number">1</span>) <span class="number">100%</span>);</span><br><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="点击左边区域取色">点击左边区域取色</span></h2><p>在左边取色区域点击之后，首先获取点击的位置，通过canvas的getImageData方法获得该位置的rgb颜色，进行转换等到相应hex，hsl，hsv的值，更新表达的值，把取色小圆圈的位置设置到该点位置上去。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">_pickcolor:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> that=<span class="keyword">this</span>;</span><br><span class="line">that.jqelement.bind(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> canvasrect=that.element.getBoundingClientRect();</span><br><span class="line">that.canvasX = e.clientX-canvasrect.left*(that.width/canvasrect.width);<span class="comment">//获取点击的位置</span></span><br><span class="line">that.canvasY = e.clientY-canvasrect.top*(that.height/canvasrect.height);</span><br><span class="line"><span class="keyword">var</span> imageData = that.context.getImageData(that.canvasX, that.canvasY, <span class="number">1</span>, <span class="number">1</span>);<span class="comment">//用canvas的getImageData方法来获得该处的颜色</span></span><br><span class="line"><span class="keyword">var</span> pixel = imageData.data;</span><br><span class="line">that.rgb=pixel.slice(<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line">that.hex=rgbtohex(pixel[<span class="number">0</span>],pixel[<span class="number">1</span>],pixel[<span class="number">2</span>]);</span><br><span class="line">that.hsl=rgbtohsl(pixel[<span class="number">0</span>],pixel[<span class="number">1</span>],pixel[<span class="number">2</span>]);</span><br><span class="line">that.hsv=rgbtohsv(pixel[<span class="number">0</span>],pixel[<span class="number">1</span>],pixel[<span class="number">2</span>]);</span><br><span class="line">that._updatergb();</span><br><span class="line">that._updatehslv();</span><br><span class="line">that.pickercircle.show();</span><br><span class="line">that.pickercircle.css(&#123;<span class="string">"top"</span>:that.canvasY<span class="number">-5</span>,<span class="string">"left"</span>:that.canvasX<span class="number">-5</span>&#125;);<span class="comment">//设置取色小圆圈的位置。-5是因为是圆形，需要减去宽高和边框;</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="中间色带点击取色相">中间色带点击取色相</span></h2><p>点击之后，由于中间色带的色相是递增的，获取取色相小圆圈相对于整个中间色带的高度即可获取色相，此时需要重新绘制左边的渐变区域，由于这里只变化了h值，即可知hsl值，根据hsl值获得其他格式的颜色值更新即可。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">_slidecolor:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> that=<span class="keyword">this</span>;</span><br><span class="line">that.jqslide.bind(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(e.target.id==<span class="string">"colorpicker-slide"</span>)&#123;</span><br><span class="line">$(<span class="string">"#colorslide-circle"</span>).css(&#123;<span class="string">"top"</span>:e.offsetY<span class="number">-8</span>&#125;);<span class="comment">//减去圆圈本身的高度和边框;</span></span><br><span class="line">that.hsl[<span class="number">0</span>]=that.hsv[<span class="number">0</span>]=<span class="built_in">Math</span>.round(e.offsetY/that.height*<span class="number">360</span>);<span class="comment">//在这里选择只是变化了h值</span></span><br><span class="line"><span class="keyword">var</span> hsl=that.hsl[<span class="number">0</span>]+<span class="string">",100%,50%,1"</span>;</span><br><span class="line">that._drawbg(<span class="string">"hsla("</span>+hsl+<span class="string">")"</span>);<span class="comment">//重新绘制左边的渐变图;</span></span><br><span class="line">that.rgb=hsltorgb(that.hsl[<span class="number">0</span>],that.hsl[<span class="number">1</span>],that.hsl[<span class="number">2</span>]);</span><br><span class="line">that._updatergb();</span><br><span class="line">$(<span class="string">"#colorpicker-hslh"</span>).val(that.hsl[<span class="number">0</span>]);</span><br><span class="line">$(<span class="string">"#colorpicker-hsvh"</span>).val(that.hsv[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="更新颜色表单的数值">更新颜色表单的数值</span></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新rgb ，hex 和颜色块数据</span></span><br><span class="line">_updatergb:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="string">"#colorpicker-rgbr"</span>).val(<span class="keyword">this</span>.rgb[<span class="number">0</span>]);</span><br><span class="line">$(<span class="string">"#colorpicker-rgbg"</span>).val(<span class="keyword">this</span>.rgb[<span class="number">1</span>]);</span><br><span class="line">$(<span class="string">"#colorpicker-rgbb"</span>).val(<span class="keyword">this</span>.rgb[<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">this</span>.hex=rgbtohex(<span class="keyword">this</span>.rgb[<span class="number">0</span>],<span class="keyword">this</span>.rgb[<span class="number">1</span>],<span class="keyword">this</span>.rgb[<span class="number">2</span>]);</span><br><span class="line">$(<span class="string">"#hex"</span>).val(<span class="keyword">this</span>.hex);</span><br><span class="line">$(<span class="string">"#pickercolor"</span>).css(&#123;<span class="string">"background-color"</span>:<span class="keyword">this</span>.hex&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//更新hsl和hsv的数据</span></span><br><span class="line">_updatehslv:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">this</span>.hsv=rgbtohsv(<span class="keyword">this</span>.rgb[<span class="number">0</span>],<span class="keyword">this</span>.rgb[<span class="number">1</span>],<span class="keyword">this</span>.rgb[<span class="number">2</span>]);</span><br><span class="line">$(<span class="string">"#colorpicker-hsvh"</span>).val(<span class="keyword">this</span>.hsv[<span class="number">0</span>]);</span><br><span class="line">$(<span class="string">"#colorpicker-hsvs"</span>).val(<span class="keyword">this</span>.hsv[<span class="number">1</span>]);</span><br><span class="line">$(<span class="string">"#colorpicker-hsvv"</span>).val(<span class="keyword">this</span>.hsv[<span class="number">2</span>]);</span><br><span class="line">$(<span class="string">"#colorpicker-hslh"</span>).val(<span class="keyword">this</span>.hsl[<span class="number">0</span>]);</span><br><span class="line">$(<span class="string">"#colorpicker-hsls"</span>).val(<span class="keyword">this</span>.hsl[<span class="number">1</span>]);</span><br><span class="line">$(<span class="string">"#colorpicker-hsll"</span>).val(<span class="keyword">this</span>.hsl[<span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="监听表单的数值变化">监听表单的数值变化</span></h2><p>这里提一下，改变了某一表单数值后，其他格式的颜色数值相对应改变，还需要改变左边区域取色小圆圈的位置，让其跳转到对一个颜色的像素上，中间色带的取色相小圆圈也需要转到对应的色相颜色上。<br>思路是：表单改变后，得到所有格式的颜色数值，根据h值来使得中间色带的取色相小圆圈变化到对应的色相颜色上。而根据hsv中的s和v可以获取左边区域取色小圆圈应该在位置（渐变的原理）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//监听表单数据变化并做更新</span></span><br><span class="line">_contentchange()&#123;</span><br><span class="line"><span class="keyword">var</span> that=<span class="keyword">this</span>;</span><br><span class="line">$(<span class="string">"#hex"</span>).bind(<span class="string">"change"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="comment">// $("#hex").change=function()&#123;</span></span><br><span class="line"><span class="keyword">var</span> hex=$(<span class="string">"#hex"</span>).val();</span><br><span class="line"><span class="keyword">var</span> rgb;</span><br><span class="line"><span class="keyword">if</span>(rgb=hextorgb(hex))&#123;</span><br><span class="line">that.hex=hex;</span><br><span class="line">that.rgb=rgb;</span><br><span class="line">that.hsl=rgbtohsl(rgb[<span class="number">0</span>],rgb[<span class="number">1</span>],rgb[<span class="number">2</span>]);</span><br><span class="line">that.hsv=rgbtohsv(that.rgb[<span class="number">0</span>],that.rgb[<span class="number">1</span>],that.rgb[<span class="number">2</span>]);</span><br><span class="line">that._updatechange();</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">".rgbbox input"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,obj</span>)</span>&#123;</span><br><span class="line">$(obj).bind(<span class="string">"change"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> value=<span class="built_in">parseInt</span>($(obj).val());</span><br><span class="line"><span class="keyword">if</span>(value&gt;<span class="number">0</span> &amp;&amp; value&lt;=<span class="number">255</span>)&#123;</span><br><span class="line">that.rgb[index]=value;</span><br><span class="line">that.hex=rgbtohex(that.rgb[<span class="number">0</span>],that.rgb[<span class="number">1</span>],that.rgb[<span class="number">2</span>]);</span><br><span class="line">that.hsl=rgbtohsl(that.rgb[<span class="number">0</span>],that.rgb[<span class="number">1</span>],that.rgb[<span class="number">2</span>]);</span><br><span class="line">that.hsv=rgbtohsv(that.rgb[<span class="number">0</span>],that.rgb[<span class="number">1</span>],that.rgb[<span class="number">2</span>]);</span><br><span class="line">that._updatechange();</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">".hslbox input"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,obj</span>)</span>&#123;</span><br><span class="line">$(obj).bind(<span class="string">"change"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> value=<span class="built_in">parseInt</span>($(obj).val());</span><br><span class="line"><span class="keyword">if</span>((index==<span class="number">0</span> &amp;&amp; value&lt;=<span class="number">360</span> &amp;&amp; value&gt;=<span class="number">0</span>)||(value&lt;=<span class="number">100</span> &amp;&amp; value&gt;=<span class="number">0</span>))&#123;</span><br><span class="line">that.hsl[index]=value;</span><br><span class="line">that.rgb=hsltorgb(that.hsl[<span class="number">0</span>],that.hsl[<span class="number">1</span>],that.hsl[<span class="number">2</span>]);</span><br><span class="line">that.hsv=rgbtohsv(that.rgb[<span class="number">0</span>],that.rgb[<span class="number">1</span>],that.rgb[<span class="number">2</span>]);</span><br><span class="line">that.hex=rgbtohex(that.rgb[<span class="number">0</span>],that.rgb[<span class="number">1</span>],that.rgb[<span class="number">2</span>]);</span><br><span class="line">that._updatechange();</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">".hsvbox input"</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,obj</span>)</span>&#123;</span><br><span class="line">$(obj).bind(<span class="string">"change"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> value=<span class="built_in">parseInt</span>($(obj).val());</span><br><span class="line"><span class="keyword">if</span>((index==<span class="number">0</span> &amp;&amp; value&lt;=<span class="number">360</span> &amp;&amp; value&gt;=<span class="number">0</span>)||(value&lt;=<span class="number">100</span> &amp;&amp; value&gt;=<span class="number">0</span>))&#123;</span><br><span class="line">that.hsv[index]=value;</span><br><span class="line">that.rgb=hsvtorgb(that.hsv[<span class="number">0</span>],that.hsv[<span class="number">1</span>],that.hsv[<span class="number">2</span>]);</span><br><span class="line">that.hsl=rgbtohsl(that.rgb[<span class="number">0</span>],that.rgb[<span class="number">1</span>],that.rgb[<span class="number">2</span>]);</span><br><span class="line">that.hex=rgbtohex(that.rgb[<span class="number">0</span>],that.rgb[<span class="number">1</span>],that.rgb[<span class="number">2</span>]);</span><br><span class="line">that._updatechange();</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">&#125;，</span><br><span class="line"><span class="comment">// 更新表单输入而产生的变化</span></span><br><span class="line">_updatechange()&#123;</span><br><span class="line"><span class="keyword">this</span>._updatergb();</span><br><span class="line"><span class="keyword">this</span>._updatehslv();</span><br><span class="line"><span class="keyword">var</span> offestheight=<span class="keyword">this</span>.hsl[<span class="number">0</span>]/<span class="number">360</span>*<span class="keyword">this</span>.height;</span><br><span class="line"><span class="comment">//改变颜色条选择圆圈的位置</span></span><br><span class="line">$(<span class="string">"#colorslide-circle"</span>).show();</span><br><span class="line"><span class="keyword">this</span>.pickercircle.show();</span><br><span class="line">$(<span class="string">"#colorslide-circle"</span>).css(&#123;<span class="string">"top"</span>:offestheight<span class="number">-8</span>&#125;);</span><br><span class="line"><span class="keyword">var</span> hsl=<span class="keyword">this</span>.hsl[<span class="number">0</span>]+<span class="string">",100%,50%,1"</span>;</span><br><span class="line"><span class="keyword">this</span>._drawbg(<span class="string">"hsla("</span>+hsl+<span class="string">")"</span>);<span class="comment">//重新绘制左边的渐变图;</span></span><br><span class="line"><span class="comment">// 根据hsb来确定渐变区域选色圆圈的位置</span></span><br><span class="line"><span class="keyword">this</span>.hsv=rgbtohsv(<span class="keyword">this</span>.rgb[<span class="number">0</span>],<span class="keyword">this</span>.rgb[<span class="number">1</span>],<span class="keyword">this</span>.rgb[<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">var</span> canvaswidth=<span class="keyword">this</span>.hsv[<span class="number">1</span>]/<span class="number">100</span>*<span class="keyword">this</span>.width;</span><br><span class="line"><span class="keyword">var</span> canvasheight=(<span class="number">1</span>-<span class="keyword">this</span>.hsv[<span class="number">2</span>]/<span class="number">100</span>)*<span class="keyword">this</span>.height;</span><br><span class="line"><span class="keyword">this</span>.pickercircle.css(&#123;<span class="string">"top"</span>:canvasheight<span class="number">-5</span>,<span class="string">"left"</span>:canvaswidth<span class="number">-5</span>&#125;);<span class="comment">//-5是因为是圆形，需要减去宽高和边框;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>代码写的有点乱，还有很多需要改进的地方，暂时就先这样吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;今天来讲一下如何用javascript写一个色彩选择器。上一篇写到用JS实现RGB,HSL,HSV之间的相互转换，而那一篇写的代码呢，就是为写这个色彩选择器而准备的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://wsyks.github.io/tags/javascript/"/>
    
      <category term="canvas" scheme="http://wsyks.github.io/tags/canvas/"/>
    
  </entry>
  
  <entry>
    <title>JS实现RGB,HSL,HSB相互转换</title>
    <link href="http://wsyks.github.io/2017/03/17/JS%E5%AE%9E%E7%8E%B0RGB-HSL-HSB%E7%9B%B8%E4%BA%92%E8%BD%AC%E6%8D%A2/"/>
    <id>http://wsyks.github.io/2017/03/17/JS实现RGB-HSL-HSB相互转换/</id>
    <published>2017-03-17T09:55:56.000Z</published>
    <updated>2018-12-01T03:27:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="前言">前言</span></h1><p>最近呢，在写色彩选择器小插件的时候需要用到RGB,HSL,HSB相互转换的一些东西，就想着好好整理一下这方面的内容，顺便用js实现一下三者之间的转换，通过对色彩转换的学习，对平时整整ps，摄影也是有一定的基础帮助的,恩！</p><a id="more"></a><h1><span id="色彩模型">色彩模型</span></h1><p>关于色彩模型的相关知识，主要是整理了别人的分享主要参考了<a href="https://en.wikipedia.org/wiki/HSL_and_HSV" target="_blank" rel="noopener">色彩模型介绍</a>和<a href="https://zh.wikipedia.org/wiki/HSL%E5%92%8CHSV%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4" target="_blank" rel="noopener">HSL,HSV维基百科</a>上的内容，这里简单做下整理</p><h2><span id="rgb模型">RGB模型</span></h2><p>RGB模型也称为加色法混色模型，以RGB三色光互相叠加来实现混色的方法。<br>它是一种以硬件为导向的色彩模型，它描述了显示器的电子枪打在Red红、Green绿、Blue蓝三色发光极上的显色方式，因而适合于显示器等发光体的显示。<br><img src="/2017/03/17/JS实现RGB-HSL-HSB相互转换/rgb.png"></p><ul><li>优点：对机器友好</li><li>缺点：对用户很不友好</li></ul><h2><span id="hsl">HSL</span></h2><blockquote><p>HSL色彩的表述方式是：H(hue)色相，S(saturation)饱和度，以及L(lightness)亮度。</p></blockquote><p><strong>HSL的H(hue)分量</strong>，代表的是人眼所能感知的颜色范围，这些颜色分布在一个平面的色相环上，取值范围是0°到360°的圆心角，每个角度可以代表一种颜色。色相值的意义在于，我们可以在不改变光感的情况下，通过旋转色相环来改变颜色。在实际应用中，我们需要记住色相环上的六大主色，用作基本参照：360°/0°红、60°黄、120°绿、180°青、240°蓝、300°洋红，它们在色相环上按照60°圆心角的间隔排列。<br><img src="/2017/03/17/JS实现RGB-HSL-HSB相互转换/h.png"></p><p><strong>HSL的S(saturation)分量</strong>，指的是色彩的饱和度，它用0%至100%的值描述了相同色相、明度下色彩纯度的变化。数值越大，颜色中的灰色越少，颜色越鲜艳，呈现一种从理性(灰度)到感性(纯色)的变化。</p>  <img src="/2017/03/17/JS实现RGB-HSL-HSB相互转换/s.png"><p><strong>HSL的L(lightness)分量</strong>，指的是色彩的明度，作用是控制色彩的明暗变化。它同样使用了0%至100%的取值范围。数值越小，色彩越暗，越接近于黑色；数值越大，色彩越亮，越接近于白色。</p>  <img src="/2017/03/17/JS实现RGB-HSL-HSB相互转换/l.png"><h2><span id="hsv">HSV</span></h2><blockquote><p>HSV色彩的表述方式是：H(hue)色相，S(saturation)饱和度，以及V(Value)明度。</p></blockquote><p>与HSL有些类似，但也有不同，二者在数学上都是圆柱，但HSV（色相，饱和度，明度）在概念上可以被认为是颜色的倒圆锥体（黑点在下顶点，白色在上底面圆心），HSL在概念上表示了一个双圆锥体和圆球体（白色在上顶点，黑色在下顶点，最大横切面的圆心是半程灰色）。注意尽管在HSL和HSV中“色相”指称相同的性质，它们的“饱和度”的定义是明显不同的。</p>  <img src="/2017/03/17/JS实现RGB-HSL-HSB相互转换/comp.png"><h2><span id="hsl和hsv对比">HSL和HSV对比</span></h2><p>HSL类似于HSV。对于一些人，HSL更好的反映了“饱和度”和“亮度”作为两个独立参数的直觉观念，但是在某些情况时，它的饱和度定义是错误的，因为非常柔和的几乎白色的颜色在HSL可以被定义为是完全饱和的。对于HSV还是HSL更适合于人类用户界面是有争议的。</p><ul><li>在HSL中，饱和度分量总是从完全饱和色变化到等价的灰色（在HSV中，在极大值V的时候，饱和度从全饱和色变化到白色，这可以被认为是反直觉的）。</li><li>在HSL中，亮度跨越从黑色过选择的色相到白色的完整范围（在HSV中，V分量只走一半行程，从黑到选择的色相）。<br>在软件中，通常以一个线性或圆形色相选择器和在其中为选定的色相选取饱和度和明度／亮度的一个二维区域（通常为方形或三角形）形式提供给用户基于色相的颜色模型。这种时候，HSL和HSV都可以使用，但HSV传统上更常用。<a href="https://zh.wikipedia.org/wiki/HSL%E5%92%8CHSV%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4" target="_blank" rel="noopener">HSL,HSV维基百科</a>给了一些例子，这里就不再赘述。</li></ul><h1><span id="相互转换js代码实现">相互转换JS代码实现</span></h1><p>根据转换公式（参考<a href="https://en.wikipedia.org/wiki/HSL_and_HSV" target="_blank" rel="noopener">转换公式</a>或<a href="https://zh.wikipedia.org/wiki/HSL%E5%92%8CHSV%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4" target="_blank" rel="noopener">转换公式2</a>），可以对将RGB转换成HSL或HSB，也可用HSL或HSB转成成RGB，贴上代码。</p><h2><span id="转换公式来自维基百科">转换公式（来自维基百科）</span></h2><img src="/2017/03/17/JS实现RGB-HSL-HSB相互转换/p1.png"><hr><img src="/2017/03/17/JS实现RGB-HSL-HSB相互转换/p2.png"><hr><img src="/2017/03/17/JS实现RGB-HSL-HSB相互转换/p3.png"><h2><span id="rgb转hsl">rgb转hsl</span></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// r,g,b范围为[0,255],转换成h范围为[0,360]</span></span><br><span class="line"><span class="comment">// s,l为百分比形式，范围是[0,100],可根据需求做相应调整</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rgbtohsl</span>(<span class="params">r,g,b</span>)</span>&#123;</span><br><span class="line">r=r/<span class="number">255</span>;</span><br><span class="line">g=g/<span class="number">255</span>;</span><br><span class="line">b=b/<span class="number">255</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> min=<span class="built_in">Math</span>.min(r,g,b);</span><br><span class="line"><span class="keyword">var</span> max=<span class="built_in">Math</span>.max(r,g,b);</span><br><span class="line"><span class="keyword">var</span> l=(min+max)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">var</span> difference = max-min;</span><br><span class="line"><span class="keyword">var</span> h,s,l;</span><br><span class="line"><span class="keyword">if</span>(max==min)&#123;</span><br><span class="line">h=<span class="number">0</span>;</span><br><span class="line">s=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">s=l&gt;<span class="number">0.5</span>?difference/(<span class="number">2.0</span>-max-min):difference/(max+min);</span><br><span class="line"><span class="keyword">switch</span>(max)&#123;</span><br><span class="line"><span class="keyword">case</span> r: h=(g-b)/difference+(g &lt; b ? <span class="number">6</span> : <span class="number">0</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> g: h=<span class="number">2.0</span>+(b-r)/difference;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> b: h=<span class="number">4.0</span>+(r-g)/difference;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">h=<span class="built_in">Math</span>.round(h*<span class="number">60</span>);</span><br><span class="line">&#125;</span><br><span class="line">s=<span class="built_in">Math</span>.round(s*<span class="number">100</span>);<span class="comment">//转换成百分比的形式</span></span><br><span class="line">l=<span class="built_in">Math</span>.round(l*<span class="number">100</span>);</span><br><span class="line"><span class="keyword">return</span> [h,s,l];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(rgbtohsl(<span class="number">2</span>,<span class="number">5</span>,<span class="number">10</span>));<span class="comment">//[218, 67, 2]</span></span><br></pre></td></tr></table></figure><h2><span id="rgb转hsv">rgb转hsv</span></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// r,g,b范围为[0,255],转换成h范围为[0,360]</span></span><br><span class="line"><span class="comment">// s,v为百分比形式，范围是[0,100],可根据需求做相应调整</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rgbtohsv</span>(<span class="params">r,g,b</span>)</span>&#123;</span><br><span class="line">r=r/<span class="number">255</span>;</span><br><span class="line">g=g/<span class="number">255</span>;</span><br><span class="line">b=b/<span class="number">255</span>;</span><br><span class="line"><span class="keyword">var</span> h,s,v;</span><br><span class="line"><span class="keyword">var</span> min=<span class="built_in">Math</span>.min(r,g,b);</span><br><span class="line"><span class="keyword">var</span> max=v=<span class="built_in">Math</span>.max(r,g,b);</span><br><span class="line"><span class="keyword">var</span> l=(min+max)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">var</span> difference = max-min;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(max==min)&#123;</span><br><span class="line">h=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(max)&#123;</span><br><span class="line"><span class="keyword">case</span> r: h=(g-b)/difference+(g &lt; b ? <span class="number">6</span> : <span class="number">0</span>);<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> g: h=<span class="number">2.0</span>+(b-r)/difference;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> b: h=<span class="number">4.0</span>+(r-g)/difference;<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">h=<span class="built_in">Math</span>.round(h*<span class="number">60</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(max==<span class="number">0</span>)&#123;</span><br><span class="line">s=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">s=<span class="number">1</span>-min/max;</span><br><span class="line">&#125;</span><br><span class="line">s=<span class="built_in">Math</span>.round(s*<span class="number">100</span>);</span><br><span class="line">v=<span class="built_in">Math</span>.round(v*<span class="number">100</span>);</span><br><span class="line"><span class="keyword">return</span> [h,s,v];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="hsl转rgb">hsl转rgb</span></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入的h范围为[0,360],s,l为百分比形式的数值,范围是[0,100] </span></span><br><span class="line"><span class="comment">//输出r,g,b范围为[0,255],可根据需求做相应调整</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hsltorgb</span>(<span class="params">h,s,l</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> h=h/<span class="number">360</span>;</span><br><span class="line"><span class="keyword">var</span> s=s/<span class="number">100</span>;</span><br><span class="line"><span class="keyword">var</span> l=l/<span class="number">100</span>;</span><br><span class="line"><span class="keyword">var</span> rgb=[];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(s==<span class="number">0</span>)&#123;</span><br><span class="line">rgb=[<span class="built_in">Math</span>.round(l*<span class="number">255</span>),<span class="built_in">Math</span>.round(l*<span class="number">255</span>),<span class="built_in">Math</span>.round(l*<span class="number">255</span>)];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">var</span> q=l&gt;=<span class="number">0.5</span>?(l+s-l*s):(l*(<span class="number">1</span>+s));</span><br><span class="line"><span class="keyword">var</span> p=<span class="number">2</span>*l-q;</span><br><span class="line"><span class="keyword">var</span> tr=rgb[<span class="number">0</span>]=h+<span class="number">1</span>/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">var</span> tg=rgb[<span class="number">1</span>]=h;</span><br><span class="line"><span class="keyword">var</span> tb=rgb[<span class="number">2</span>]=h<span class="number">-1</span>/<span class="number">3</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>; i&lt;rgb.length;i++)&#123;</span><br><span class="line"><span class="keyword">var</span> tc=rgb[i];</span><br><span class="line"><span class="built_in">console</span>.log(tc);</span><br><span class="line"><span class="keyword">if</span>(tc&lt;<span class="number">0</span>)&#123;</span><br><span class="line">tc=tc+<span class="number">1</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(tc&gt;<span class="number">1</span>)&#123;</span><br><span class="line">tc=tc<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(<span class="literal">true</span>)&#123;</span><br><span class="line"><span class="keyword">case</span> (tc&lt;(<span class="number">1</span>/<span class="number">6</span>)):</span><br><span class="line">tc=p+(q-p)*<span class="number">6</span>*tc;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> ((<span class="number">1</span>/<span class="number">6</span>)&lt;=tc &amp;&amp; tc&lt;<span class="number">0.5</span>):</span><br><span class="line">tc=q;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> (<span class="number">0.5</span>&lt;=tc &amp;&amp; tc&lt;(<span class="number">2</span>/<span class="number">3</span>)):</span><br><span class="line">tc=p+(q-p)*(<span class="number">4</span><span class="number">-6</span>*tc);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">tc=p;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">rgb[i]=<span class="built_in">Math</span>.round(tc*<span class="number">255</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> rgb;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="hsb转rgb">hsb转rgb</span></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//输入的h范围为[0,360],s,l为百分比形式的数值,范围是[0,100] </span></span><br><span class="line"><span class="comment">//输出r,g,b范围为[0,255],可根据需求做相应调整</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hsvtorgb</span>(<span class="params">h,s,v</span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> s=s/<span class="number">100</span>;</span><br><span class="line"><span class="keyword">var</span> v=v/<span class="number">100</span>;</span><br><span class="line"><span class="keyword">var</span> h1=<span class="built_in">Math</span>.floor(h/<span class="number">60</span>) % <span class="number">6</span>;</span><br><span class="line"><span class="keyword">var</span> f=h/<span class="number">60</span>-h1;</span><br><span class="line"><span class="keyword">var</span> p=v*(<span class="number">1</span>-s);</span><br><span class="line"><span class="keyword">var</span> q=v*(<span class="number">1</span>-f*s);</span><br><span class="line"><span class="keyword">var</span> t=v*(<span class="number">1</span>-(<span class="number">1</span>-f)*s);</span><br><span class="line"><span class="keyword">var</span> r,g,b;</span><br><span class="line"><span class="keyword">switch</span>(h1)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">r=v;</span><br><span class="line">g=t;</span><br><span class="line">b=p;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">r=q;</span><br><span class="line">g=v;</span><br><span class="line">b=p;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">r=p;</span><br><span class="line">g=v;</span><br><span class="line">b=t;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">r=p;</span><br><span class="line">g=q;</span><br><span class="line">b=v;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">r=t;</span><br><span class="line">g=p;</span><br><span class="line">b=v;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">r=v;</span><br><span class="line">g=p;</span><br><span class="line">b=q;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> [<span class="built_in">Math</span>.round(r*<span class="number">255</span>),<span class="built_in">Math</span>.round(g*<span class="number">255</span>),<span class="built_in">Math</span>.round(b*<span class="number">255</span>)];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>参考<br><a href="http://cdc.tencent.com/2011/05/09/%E8%89%B2%E7%94%9F%E5%BF%83%E4%B8%AD%EF%BC%9A%E4%BA%BA%E6%80%A7%E5%8C%96%E7%9A%84hsl%E6%A8%A1%E5%9E%8B/#" target="_blank" rel="noopener">http://cdc.tencent.com/2011/05/09/色生心中：人性化的hsl模型/#</a><br><a href="https://en.wikipedia.org/wiki/HSL_and_HSV" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/HSL_and_HSV</a><br><a href="https://zh.wikipedia.org/wiki/HSL%E5%92%8CHSV%E8%89%B2%E5%BD%A9%E7%A9%BA%E9%97%B4" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/HSL和HSV色彩空间</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;最近呢，在写色彩选择器小插件的时候需要用到RGB,HSL,HSB相互转换的一些东西，就想着好好整理一下这方面的内容，顺便用js实现一下三者之间的转换，通过对色彩转换的学习，对平时整整ps，摄影也是有一定的基础帮助的,恩！&lt;/p&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://wsyks.github.io/tags/javascript/"/>
    
      <category term="设计" scheme="http://wsyks.github.io/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>自定义右键菜单</title>
    <link href="http://wsyks.github.io/2017/03/09/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95/"/>
    <id>http://wsyks.github.io/2017/03/09/自定义右键菜单/</id>
    <published>2017-03-09T13:23:36.000Z</published>
    <updated>2018-12-01T03:36:04.000Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="前言">前言</span></h1><p>分享一下今天下午做的一个小东西,就是自定义右键菜单了，代码呢，写的比较粗糙，但是大致完成了需求，恩，其实师姐也分享过，但是呢，自己动手之后才更掌握的更好。<br><a id="more"></a><br>实现的效果如下或者<a href="https://wsyks.github.io/ife-2017/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95/">点击这里</a><br><img src="/2017/03/09/自定义右键菜单/1.gif"></p><h1><span id="contextmenu法">contextmenu法</span></h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">contextmenu</span>=<span class="string">"mymenu"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"context"</span>&gt;</span>这里有一个菜单,请在firefox打开哟<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menu</span> <span class="attr">id</span>=<span class="string">"mymenu"</span> <span class="attr">type</span>=<span class="string">"context"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">menuitem</span> <span class="attr">label</span>=<span class="string">"呼呼"</span> <span class="attr">icon</span>=<span class="string">"1.jpg"</span> <span class="attr">onclick</span>=<span class="string">"doSomething()"</span>&gt;</span><span class="tag">&lt;/<span class="name">menuitem</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">menuitem</span> <span class="attr">label</span>=<span class="string">"嘻嘻"</span> <span class="attr">icon</span>=<span class="string">"2.jpg"</span> <span class="attr">onclick</span>=<span class="string">"doSomethingElse()"</span>&gt;</span><span class="tag">&lt;/<span class="name">menuitem</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">menu</span> <span class="attr">label</span>=<span class="string">"哈哈"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">menuitem</span> <span class="attr">label</span>=<span class="string">"呼呼"</span> <span class="attr">icon</span>=<span class="string">"1.jpg"</span> <span class="attr">onclick</span>=<span class="string">"doSomething()"</span>&gt;</span><span class="tag">&lt;/<span class="name">menuitem</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">menuitem</span> <span class="attr">label</span>=<span class="string">"嘻嘻"</span> <span class="attr">icon</span>=<span class="string">"2.jpg"</span> <span class="attr">onclick</span>=<span class="string">"doSomethingElse()"</span>&gt;</span><span class="tag">&lt;/<span class="name">menuitem</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">menu</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>使用小TIP</p></blockquote><ul><li>该属性仅在firefox浏览器有效，测试请在firefox下，所以局限性比较强</li><li>属性contextmenu的值与menu标签id的值对应；</li><li>添加menu标签时，要加上<strong>type=“context”</strong> 这个属性，要不然不灵</li><li>在标签里添加上icon属性，可以添加小图标</li><li>想要子菜单的效果，直接在menu标签中再增加menu标签，看上事例即可明白；</li></ul><p>素不素hin简单~~~</p><h1><span id="js纯手工打造法">JS纯手工打造法</span></h1><p>用contextmenu只能在firefox下使用，且只能在原有的菜单上新增菜单键，所以呢，下面用js来纯手工打造，原理呢大概就是点击某个特定的区域之后，获取该点的位置，在该处添加一个菜单列表，比如用ul来做，恩！想想也是简单的呢，代码如下，该注释的都注释了。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"menu context"</span>&gt;</span>这里还有一个菜单,呼呼<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"menu context"</span>&gt;</span>这里还有一个菜单,嘻嘻<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"menu context"</span>&gt;</span>这里还有一个菜单,哟哟<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"supermenu"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>menu1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>menu2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>menu3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里，还有一个点要注意的事，我们可以用鼠标右键事件，也可以用HTML5里有所的contextmenu事件来写我们需要的功能。</p><h2><span id="contextmenu事件法">contextmenu事件法</span></h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$=<span class="function"><span class="keyword">function</span>(<span class="params">element</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">document</span>.querySelectorAll(element);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> mymenu=<span class="built_in">document</span>.getElementById(<span class="string">"supermenu"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//监听contextmenu事件</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;$(<span class="string">".menu"</span>).length;i++)&#123;</span><br><span class="line">$(<span class="string">".menu"</span>)[i].addEventListener(<span class="string">"contextmenu"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">e.preventDefault();<span class="comment">//阻止原有的菜单</span></span><br><span class="line">e.returnValue=<span class="literal">false</span>;<span class="comment">//在IE中阻止原有的菜单</span></span><br><span class="line"></span><br><span class="line">mymenu.style.cssText=<span class="string">'display: block;'</span>; <span class="comment">//先显示后才能获取menu的高宽</span></span><br><span class="line"><span class="keyword">var</span> menuwidth=mymenu.offsetWidth;<span class="comment">//获取自定义菜单的高宽</span></span><br><span class="line"><span class="keyword">var</span> menuheight=mymenu.offsetHeight;</span><br><span class="line"><span class="keyword">var</span> clientwidth=<span class="built_in">document</span>.documentElement.clientWidth;<span class="comment">//获取当前可视窗口的高宽</span></span><br><span class="line"><span class="keyword">var</span> clientheight=<span class="built_in">document</span>.documentElement.clientHeight;</span><br><span class="line"><span class="keyword">if</span>(clientheight-e.pageY&gt;=menuheight)&#123; <span class="comment">//底下有足够空间时</span></span><br><span class="line">mymenu.style.top=e.pageY+<span class="string">"px"</span>;<span class="comment">//菜单在下方</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">mymenu.style.top=(e.pageY-menuheight)+<span class="string">"px"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(clientwidth-e.pageX&gt;=menuwidth)&#123; <span class="comment">//右边有足够空间</span></span><br><span class="line">mymenu.style.left=e.pageX+<span class="string">"px"</span>;<span class="comment">//菜单有右边</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">mymenu.style.left=(e.pageX-menuwidth)+<span class="string">"px"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(clientheight-e.pageY,clientwidth-e.pageX);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">document</span>.body.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123; <span class="comment">//点击其他地方菜单消失，可恢复默认的菜单事件</span></span><br><span class="line">mymenu.style.cssText=<span class="string">'display: none;'</span>;</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小TIP</p><blockquote><p>在兼容DOM浏览器中，使用event.preventDefault()取消，在IE中，将event.returnValue的值设为false即可。<br>其他的点差不多都注释了，就不多说了</p></blockquote><h2><span id="mousedown事件法">mousedown事件法</span></h2><p>可以根据mousedown事件对象的button值来判断</p><table><thead><tr><th>鼠标事件</th><th>button值</th><th>备注</th></tr></thead><tbody><tr><td>click</td><td>0</td><td>单击鼠标左键</td></tr><tr><td>click</td><td>1</td><td>单击鼠标中键</td></tr><tr><td>mousedown</td><td>0</td><td>按下鼠标左键</td></tr><tr><td>mousedown</td><td>1</td><td>按下鼠标中键</td></tr><tr><td>mousedown</td><td>2</td><td>按下鼠标右键</td></tr></tbody></table><blockquote><p>click事件只会在单击鼠标左键和中键时触发，单击右键时不会触发</p></blockquote><p>所以呢，只要把上面的代码轻轻一改就可以了。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"></span><br><span class="line">$=<span class="function"><span class="keyword">function</span>(<span class="params">element</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">document</span>.querySelectorAll(element);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> mymenu=<span class="built_in">document</span>.getElementById(<span class="string">"supermenu"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;$(<span class="string">".menu"</span>).length;i++)&#123;</span><br><span class="line">$(<span class="string">".menu"</span>)[i].addEventListener(<span class="string">"mousedown"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">window</span>.event) e=<span class="built_in">window</span>.event; <span class="comment">//兼容性</span></span><br><span class="line"><span class="keyword">if</span>(e.button==<span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">document</span>.oncontextmenu=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">e.preventDefault();<span class="comment">//阻止原有的菜单，可以不用再加e.returnValue=false;亲测。</span></span><br><span class="line">&#125;</span><br><span class="line">mymenu.style.cssText=<span class="string">'display: block;'</span>; <span class="comment">//先显示后才能获取menu的高宽</span></span><br><span class="line"><span class="keyword">var</span> menuwidth=mymenu.offsetWidth;<span class="comment">//获取自定义菜单的高宽</span></span><br><span class="line"><span class="keyword">var</span> menuheight=mymenu.offsetHeight;</span><br><span class="line"><span class="built_in">console</span>.log(menuheight,menuwidth);</span><br><span class="line"><span class="keyword">var</span> clientwidth=<span class="built_in">document</span>.documentElement.clientWidth;<span class="comment">//获取当前可视窗口的高宽</span></span><br><span class="line"><span class="keyword">var</span> clientheight=<span class="built_in">document</span>.documentElement.clientHeight;</span><br><span class="line"><span class="keyword">if</span>(clientheight-e.pageY&gt;=menuheight)&#123; <span class="comment">//底下有足够空间时</span></span><br><span class="line">mymenu.style.top=e.pageY+<span class="string">"px"</span>;<span class="comment">//菜单在下方</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">mymenu.style.top=(e.pageY-menuheight)+<span class="string">"px"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(clientwidth-e.pageX&gt;=menuwidth)&#123; <span class="comment">//右边有足够空间</span></span><br><span class="line">mymenu.style.left=e.pageX+<span class="string">"px"</span>;<span class="comment">//菜单有右边</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">mymenu.style.left=(e.pageX-menuwidth)+<span class="string">"px"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(clientheight-e.pageY,clientwidth-e.pageX);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">document</span>.body.addEventListener(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123; <span class="comment">//点击其他地方菜单消失，可恢复默认的菜单事件</span></span><br><span class="line">mymenu.style.cssText=<span class="string">'display: none;'</span>;</span><br><span class="line"><span class="built_in">document</span>.oncontextmenu=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;&#125;<span class="comment">//需要加上这个，否则还是不可恢复原来的默认菜单事件</span></span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就到这里啦，可以试试嗷</p><p><a href="https://github.com/wsyks/ife-2017" target="_blank" rel="noopener">源码戳这里</a></p><hr><blockquote><p>参考：<br><a href="https://simmin.github.io/2016/07/22/contextmenu/" target="_blank" rel="noopener">https://simmin.github.io/2016/07/22/contextmenu/</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;前言&lt;/h1&gt;
&lt;p&gt;分享一下今天下午做的一个小东西,就是自定义右键菜单了，代码呢，写的比较粗糙，但是大致完成了需求，恩，其实师姐也分享过，但是呢，自己动手之后才更掌握的更好。&lt;br&gt;
    
    </summary>
    
    
      <category term="javascript" scheme="http://wsyks.github.io/tags/javascript/"/>
    
  </entry>
  
</feed>
